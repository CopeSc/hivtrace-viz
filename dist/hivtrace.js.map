{"version":3,"sources":["webpack:///./src/entry.js","webpack:///./~/font-awesome/css/font-awesome.css","webpack:///./src/hivtrace.css","webpack:///./src/hivtrace.js","webpack:///./~/bootstrap/dist/css/bootstrap.css","webpack:///./src/clusternetwork.js","webpack:///./src/misc.js","webpack:///./src/helpers.js","webpack:///./~/downloadjs/download.js","webpack:///./src/scatterplot.js","webpack:///./src/histogram.js"],"names":[],"mappings":"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","file":"hivtrace.js","sourcesContent":["window.jQuery = window.$ = $; \n\nrequire(\"font-awesome/css/font-awesome.css\");\nrequire('./hivtrace.css');\nrequire('bootstrap');\n\nvar hivtrace = require('./hivtrace.js');\n\n// Create new hyphy-vision export\nwindow.hivtrace = hivtrace;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entry.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/css/font-awesome.css\n// module id = 5\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/hivtrace.css\n// module id = 15\n// module chunks = 0","import Bootstrap from 'bootstrap/dist/css/bootstrap.css';\nimport {\n  clusterNetwork,\n  graphSummary\n} from './clusternetwork.js';\nimport {\n  histogram,\n  histogramDistances\n} from './histogram.js';\nimport {\n  scatterPlot\n} from './scatterplot.js';\n\nvar misc = require('./misc.js');\nvar helpers = require('./helpers.js');\n\nmodule.exports.clusterNetwork = clusterNetwork;\nmodule.exports.graphSummary = graphSummary;\nmodule.exports.histogram = histogram;\nmodule.exports.histogramDistances = histogramDistances;\nmodule.exports.helpers = helpers;\nmodule.exports.misc = misc;\nmodule.exports.scatterPlot = scatterPlot;\n\n\n// WEBPACK FOOTER //\n// ./src/hivtrace.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap/dist/css/bootstrap.css\n// module id = 31\n// module chunks = 0","var d3 = require('d3'),\n  _ = require('underscore'),\n  misc = require('misc'),\n  helpers = require('helpers'),\n  scatterPlot = require ('scatterplot');\n\nvar _networkGraphAttrbuteID = \"patient_attribute_schema\";\nvar _networkNodeAttributeID = \"patient_attributes\";\nvar _networkMissing = 'missing';\nvar _networkMissingOpacity = '0.1';\nvar _networkMissingColor = '#999';\nvar _networkContinuousColorStops = 9;\nvar _networkShapeOrdering = ['circle', 'square', 'hexagon', 'diamond', 'cross', 'octagon', 'ellipse', 'pentagon'];\nvar _defaultFloatFormat = d3.format(\",.2r\");\nvar _defaultPercentFormat = d3.format(\",.3p\");\nvar _defaultDateFormat = d3.time.format(\"%Y-%m-%dT%H:%M:%S.%LZ\");\nvar _defaultDateViewFormat = d3.time.format(\"%B %d, %Y\");\nvar _defaultDateViewFormatShort = d3.time.format(\"%B %Y\");\nvar _networkCategorical = [\"#a6cee3\", \"#1f78b4\", \"#b2df8a\", \"#33a02c\", \"#fb9a99\", \"#e31a1c\", \"#fdbf6f\", \"#ff7f00\", \"#cab2d6\", \"#6a3d9a\", \"#ffff99\", \"#b15928\"];\nvar _maximumValuesInCategories = _networkCategorical.length;\n\nvar _networkSequentialColor = {\n  3: [\"#ffeda0\", \"#feb24c\", \"#f03b20\"],\n  4: [\"#ffffb2\", \"#fecc5c\", \"#fd8d3c\", \"#e31a1c\"],\n  5: [\"#ffffb2\", \"#fecc5c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"],\n  6: [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"],\n  7: [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"],\n  8: [\"#ffffcc\", \"#ffeda0\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"],\n  9: [\"#ffffcc\", \"#ffeda0\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#bd0026\", \"#800026\"]\n};\n\n\nvar _networkPresetColorSchemes = {\n  'trans_categ': {\n    'MSM-Male':'#1f78b4',\n    'MSM-Unknown sex':'#1f78b4',\n    'Heterosexual Contact-Male':'#e31a1c',\n    'Heterosexual Contact-Female':'#e31a1c',\n    'Heterosexual Contact-Unknown sex':'#e31a1c',\n    'IDU-Male':'#33a02c',\n    'MSM & IDU-Male':'#33a02c',\n    'IDU-Female':'#33a02c',\n    'IDU-Unknown sex':'#33a02c',\n    'Other/Unknown-Male':'#636363',\n    'Other/Unknown-Female':'#636363',\n    'Other-Male':'#636363',\n    'Other-Female':'#636363',\n    'Missing':'#636363',\n    '':'#636363',\n    'Other/Unknown-Unknown sex':'#636363',\n    'Perinatal':'#ff7f00',\n    'Other/Unknown-Child':'#ff7f00',\n    'Other-Child':'#ff7f00'\n  },\n  'race' :\n    {'Asian':'#1f77b4',\n     'Black/African American':'#bcbd22',\n     'Hispanic/Latino':'#9467bd',\n     'American Indian/Alaska Native':'#2ca02c',\n     'Native Hawaiian/Other Pacific Islander':'#17becf',\n     'Multiple Races' : '#e377c2',\n     'Unknown race':'#999',\n     'Missing' : '#999',\n     'missing':'#999',\n     'White':'#d62728'}\n};\n\n\nvar _networkPresetShapeSchemes = {\n  'birth_sex' : {\n    'Male':'square',\n    'Female':'ellipse',\n    'Missing':'diamond',\n    'missing':'diamond',\n    'Unknown':'diamond'\n  },\n  'race' :\n    {'Asian':'hexagon',\n     'Black/African American':'square',\n     'Hispanic/Latino':'triangle',\n     'American Indian/Alaska Native':'pentagon',\n     'Native Hawaiian/Other Pacific Islander':'octagon',\n     'Multiple Races' : 'diamond',\n     'Unknown race':'diamond',\n     'Missing' : 'diamond',\n     'missing':'diamond',\n     'White':'ellipse'},\n  'current_gender' : {\n    'Male':'square',\n    'Female':'ellipse',\n    'Transgender-Male to Female':'hexagon',\n    'Transgender-Female to Male':'pentagon',\n    'Additional Gender Identity':'diamond','Unknown':'diamond',\n    'Missing':'diamond',\n    'missing':'diamond'\n  }\n};\n\nvar hivtrace_cluster_network_graph = function(json, network_container, network_status_string, network_warning_tag, button_bar_ui, attributes, filter_edges_toggle, clusters_table, nodes_table, parent_container, options) {\n\n  // [REQ] json                        :          the JSON object containing network nodes, edges, and meta-information\n  // [REQ] network_container           :          the CSS selector of the DOM element where the SVG containing the network will be placed (e.g. '#element')\n  // [OPT] network_status_string       :          the CSS selector of the DOM element where the text describing the current state of the network is shown (e.g. '#element')\n  // [OPT] network_warning_tag         :          the CSS selector of the DOM element where the any warning messages would go (e.g. '#element')\n  // [OPT] button_bar_ui               :          the ID of the control bar which can contain the following elements (prefix = button_bar_ui value)\n  //                                                - [prefix]_cluster_operations_container : a drop-down for operations on clusters\n  //                                                - [prefix]_attributes :  a drop-down for operations on attributes\n  //                                                - [prefix]_filter : a text box used to search the graph\n  // [OPT] network_status_string       :          the CSS selector of the DOM element where the text describing the current state of the network is shown (e.g. '#element')\n  // [OPT] attributes                  :          A JSON object with mapped node attributes\n\n\n\n\n\n  var self = {};\n\n\n  self._is_CDC_ = options && options['no_cdc'] ? false : true;\n  self.ww = options && options[\"width\"] ? options[\"width\"] : d3.select(parent_container).property(\"clientWidth\");\n  self.container = network_container;\n  self.nodes = [];\n  self.edges = [];\n  self.clusters = [];\n  self.cluster_sizes = [];\n  self.cluster_mapping = {};\n\n  self.colorizer = {\n    'selected': function(d) {\n      return d == 'selected' ? d3.rgb(51, 122, 183) : '#FFF'\n    }\n  };\n  self.node_shaper = {\n    'id': null,\n    'shaper': function() {\n      return 'circle'\n    }\n  };\n  self.filter_edges = true,\n    self.hide_hxb2 = false,\n    self.charge_correction = 5,\n    self.margin = {\n      top: 20,\n      right: 10,\n      bottom: 30,\n      left: 10\n    },\n    self.width = self.ww - self.margin.left - self.margin.right,\n    self.height = self.width * 9 / 16,\n    self.cluster_table = d3.select(clusters_table),\n    self.node_table = d3.select(nodes_table),\n    self.needs_an_update = false,\n    self.json = json,\n    self.hide_unselected = false,\n    self.show_percent_in_pairwise_table = false,\n    self.gradient_id = 0;\n\n  self._additional_node_pop_fields = [];\n  /** this array contains fields that will be appended to node pop-overs in the network tab\n      they will precede all the fields that are shown based on selected labeling */\n\n\n  if (options && \"minimum size\" in options) {\n    self.minimum_cluster_size = options[\"minimum size\"];\n  } else {\n      if (self._is_CDC_) {\n        self._additional_node_pop_fields.push('hiv_aids_dx_dt');\n        self.minimum_cluster_size = 5;\n      } else {\n        self.minimum_cluster_size = 0;\n      }\n  }\n  \n  self.filter_by_size = function (cluster) {\n    return cluster.children.length >= self.minimum_cluster_size;\n  };\n  \n  self.current_size_filter = self.filter_by_size;\n\n  self._networkPredefinedAttributeTransforms = {\n    /** runtime computed node attributes, e.g. transforms of existing attributes */\n\n    'binned_vl_recent_value': {\n      'depends': 'vl_recent_value',\n      'label': 'binned_vl_recent_value',\n      'enum': [\"≤200\", \"200-10000\", \">10000\"],\n      'color_scale': function() {\n        return d3.scale.ordinal()\n          .domain([\"≤200\", \"200-10000\", \">10000\", _networkMissing])\n          .range(_.union(_networkSequentialColor[3], [_networkMissingColor]))\n      },\n\n      'map': function(node) {\n        var vl_value = attribute_node_value_by_id(node, 'vl_recent_value');\n        if (vl_value != _networkMissing) {\n          if (vl_value <= 200) {\n            return \"≤200\";\n          }\n          if (vl_value <= 10000) {\n            return \"200-10000\";\n          }\n          return \">10000\";\n        }\n        return _networkMissing;\n      }\n    },\n\n    'age_dx': {\n      'depends': 'age',\n      'label': 'age_dx',\n      'enum': [\"<13\", \"13-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"≥60\"],\n      'color_scale': function() {\n        return d3.scale.ordinal()\n        .domain([\"<13\", \"13-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"≥60\", _networkMissing])\n        .range(['#b10026','#e31a1c','#fc4e2a','#fd8d3c','#feb24c','#fed976','#ffffb2','#636363']);\n      },\n      'map': function(node) {\n        var vl_value = attribute_node_value_by_id(node, 'age');\n        if (vl_value == \">=60\") {\n          return \"≥60\";\n        }\n        return vl_value;\n      }\n    },\n\n    'hiv_aids_dx_dt_year': {\n      'depends': 'hiv_aids_dx_dt',\n      'label': 'hiv_aids_dx_dt_year',\n      'type': \"String\",\n      'map': function(node) {\n        try {\n          var value = _defaultDateFormat.parse(attribute_node_value_by_id(node, 'hiv_aids_dx_dt'));\n          if (value) {\n            value = \"\" + value.getFullYear();\n          } else {\n            value = _networkMissing;\n          }\n          return value;\n        } catch (err) {\n          return _networkMissing;\n        }\n      },\n      'color_scale': function(attr) {\n        var range_without_missing = _.without(attr.value_range, _networkMissing);\n        var color_scale = _.compose(d3.interpolateRgb(\"#ffffcc\", \"#800026\"), d3.scale.linear().domain([range_without_missing[0], range_without_missing[range_without_missing.length - 1]]).range([0, 1]));\n        return function(v) {\n          if (v == _networkMissing) {\n            return _networkMissingColor;\n          }\n          return color_scale(v);\n        };\n      }\n    }\n  };\n\n\n\n  /*------------ Network layout code ---------------*/\n  var handle_cluster_click = function(cluster, release) {\n\n    var container = d3.select(self.container);\n    var id = \"d3_context_menu_id\";\n    var menu_object = container.select(\"#\" + id);\n\n    if (menu_object.empty()) {\n      menu_object = container.append(\"ul\")\n        .attr(\"id\", id)\n        .attr(\"class\", \"dropdown-menu\")\n        .attr(\"role\", \"menu\");\n    }\n\n    menu_object.selectAll(\"li\").remove();\n\n    var already_fixed = cluster && cluster.fixed == 1;\n\n\n    if (cluster) {\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Expand cluster\")\n        .on(\"click\", function(d) {\n          cluster.fixed = 0;\n          expand_cluster_handler(cluster, true);\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Center on screen\")\n        .on(\"click\", function(d) {\n          cluster.fixed = 0;\n          center_cluster_handler(cluster);\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(function(d) {\n          if (cluster.fixed) return \"Allow cluster to float\";\n          return \"Hold cluster at current position\";\n        })\n        .on(\"click\", function(d) {\n          cluster.fixed = !cluster.fixed;\n          menu_object.style(\"display\", \"none\");\n        });\n\n      cluster.fixed = 1;\n\n      menu_object.style(\"position\", \"absolute\")\n        .style(\"left\", \"\" + d3.event.offsetX + \"px\")\n        .style(\"top\", \"\" + d3.event.offsetY + \"px\")\n        .style(\"display\", \"block\");\n\n    } else {\n      if (release) {\n        release.fixed = 0;\n      }\n      menu_object.style(\"display\", \"none\");\n    }\n\n    container.on(\"click\", function(d) {\n      handle_cluster_click(null, already_fixed ? null : cluster);\n    }, true);\n\n  };\n\n  var handle_node_click = function(node) {\n    var container = d3.select(self.container);\n    var id = \"d3_context_menu_id\";\n    var menu_object = container.select(\"#\" + id);\n\n    if (menu_object.empty()) {\n      menu_object = container.append(\"ul\")\n        .attr(\"id\", id)\n        .attr(\"class\", \"dropdown-menu\")\n        .attr(\"role\", \"menu\");\n    }\n\n    menu_object.selectAll(\"li\").remove();\n\n    if (node) {\n      node.fixed = 1;\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Collapse cluster\")\n        .on(\"click\", function(d) {\n          node.fixed = 0;\n          collapse_cluster_handler(node, true)\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.style(\"position\", \"absolute\")\n        .style(\"left\", \"\" + d3.event.offsetX + \"px\")\n        .style(\"top\", \"\" + d3.event.offsetY + \"px\")\n        .style(\"display\", \"block\");\n\n    } else {\n      menu_object.style(\"display\", \"none\");\n    }\n\n    container.on(\"click\", function(d) {\n      handle_node_click(null);\n    }, true);\n\n  };\n\n  function get_initial_xy(nodes, cluster_count) {\n    var d_clusters = {\n      'id': 'root',\n      'children': []\n    };\n    for (var k = 0; k < cluster_count; k += 1) {\n      if (self.exclude_cluster_ids !== undefined && self.exclude_cluster_ids[k + 1] !== undefined) {\n        continue;\n      }\n      d_clusters.children.push({\n        'cluster_id': k + 1,\n        'children': nodes.filter(function(v) {\n          return v.cluster == k + 1;\n        })\n      });\n    }\n\n    var treemap = d3.layout.pack()\n      .size([self.width, self.height])\n      //.sticky(true)\n      .children(function(d) {\n        return d.children;\n      })\n      .value(function(d) {\n        return 1;\n      });\n\n    return treemap.nodes(d_clusters);\n  }\n\n  function prepare_data_to_graph() {\n  \n\n    var graphMe = {};\n    graphMe.all = [];\n    graphMe.edges = [];\n    graphMe.nodes = [];\n    graphMe.clusters = [];\n\n    var expandedClusters = [];\n    var drawnNodes = [];\n\n    self.clusters.forEach(function(x) {\n      if (self.current_size_filter(x)) {      \n          // Check if hxb2_linked is in a child\n          var hxb2_exists = x.children.some(function(c) {\n            return c.hxb2_linked\n          }) && self.hide_hxb2;\n          if (!hxb2_exists) {\n            if (x.collapsed) {\n              graphMe.clusters.push(x);\n              graphMe.all.push(x);\n            } else {\n              expandedClusters[x.cluster_id] = true;\n            }\n          }\n      }\n    });\n\n    self.nodes.forEach(function(x, i) {\n      if (expandedClusters[x.cluster]) {\n        drawnNodes[i] = graphMe.nodes.length + graphMe.clusters.length;\n        graphMe.nodes.push(x);\n        graphMe.all.push(x);\n      }\n\n    });\n\n    self.edges.forEach(function(x) {\n\n      if (!(x.removed && self.filter_edges)) {\n        if (drawnNodes[x.source] !== undefined && drawnNodes[x.target] !== undefined) {\n\n          var y = {};\n          for (var prop in x) {\n            y[prop] = x[prop];\n          }\n\n          y.source = drawnNodes[x.source];\n          y.target = drawnNodes[x.target];\n          graphMe.edges.push(y);\n        }\n      }\n    });\n\n    return graphMe;\n\n  }\n\n  function default_layout(clusters, nodes) {\n    var init_layout = get_initial_xy(nodes, self.cluster_sizes.length);\n    clusters = init_layout.filter(function(v, i, obj) {\n      return !(typeof v.cluster_id === \"undefined\");\n    });\n\n    var sizes = network_layout.size();\n\n    _.each(nodes, function(n) {\n      n.x += n.dx / 2;\n      n.y += n.dy / 2;\n    });\n    clusters.forEach(collapse_cluster);\n    return [clusters, nodes];\n  }\n\n  function change_spacing(delta) {\n    self.charge_correction = self.charge_correction * delta;\n    network_layout.start();\n  }\n\n  function change_window_size(delta, trigger) {\n\n    if (delta) {\n\n      var x_scale = (self.width + delta / 2) / self.width;\n      var y_scale = (self.height + delta / 2) / self.height;\n\n      self.width += delta;\n      self.height += delta;\n\n      var rescale_x = d3.scale.linear().domain(d3.extent(network_layout.nodes(), function(node) {\n        return node.x;\n      }));\n      rescale_x.range(_.map(rescale_x.domain(), function(v) {\n        return v * x_scale;\n      }));\n      //.range ([50,self.width-50]),\n      var rescale_y = d3.scale.linear().domain(d3.extent(network_layout.nodes(), function(node) {\n        return node.y;\n      }));\n      rescale_y.range(_.map(rescale_y.domain(), function(v) {\n        return v * y_scale;\n      }));\n\n      _.each(network_layout.nodes(), function(node) {\n        node.x = rescale_x(node.x);\n        node.y = rescale_y(node.y);\n      });\n\n    }\n\n    self.width = Math.min(Math.max(self.width, 200), 4000);\n    self.height = Math.min(Math.max(self.height, 200), 4000);\n\n    network_layout.size([self.width, self.height]);\n    network_svg.attr(\"width\", self.width).attr(\"height\", self.height);\n\n    if (trigger) {\n      network_layout.start();\n    } else {\n      if (delta) {\n        self.update(true);\n      }\n    }\n  }\n  \n  self.compute_adjacency_list = _.once(function() {\n\n    self.nodes.forEach(function(n) {\n      n.neighbors = d3.set();\n    });\n\n    self.edges.forEach(function(e) {\n      self.nodes[e.source].neighbors.add(e.target);\n      self.nodes[e.target].neighbors.add(e.source);\n    });\n\n  });\n\n  self.compute_local_clustering_coefficients = _.once(function() {\n\n    self.compute_adjacency_list();\n\n    self.nodes.forEach(function(n) {\n      _.defer(function(a_node) {\n        neighborhood_size = a_node.neighbors.size();\n        if (neighborhood_size < 2) {\n          a_node.lcc = misc.undefined;\n        } else {\n          if (neighborhood_size > 500) {\n            a_node.lcc = misc.too_large;\n          } else {\n            // count triangles\n            neighborhood = a_node.neighbors.values();\n            counter = 0;\n            for (n1 = 0; n1 < neighborhood_size; n1 += 1) {\n              for (n2 = n1 + 1; n2 < neighborhood_size; n2 += 1) {\n                if (self.nodes[neighborhood[n1]].neighbors.has(neighborhood[n2])) {\n                  counter++;\n                }\n              }\n            }\n\n            a_node.lcc = 2 * counter / neighborhood_size / (neighborhood_size - 1);\n          }\n        }\n\n      }, n);\n    });\n\n  });\n\n  self.get_node_by_id = function(id) {\n    return self.nodes.filter(function(n) {\n      return n.id == id;\n    })[0];\n\n\n  };\n\n  self.compute_local_clustering_coefficients_worker = _.once(function() {\n\n    var worker = new Worker('workers/lcc.js');\n\n    worker.onmessage = function(event) {\n\n      var nodes = event.data.Nodes;\n\n      nodes.forEach(function(n) {\n        node_to_update = self.get_node_by_id(n.id);\n        node_to_update.lcc = n.lcc ? n.lcc : misc.undefined;\n      });\n\n    };\n\n    var worker_obj = {};\n    worker_obj[\"Nodes\"] = self.nodes;\n    worker_obj[\"Edges\"] = self.edges;\n    worker.postMessage(worker_obj);\n\n  });\n\n  var estimate_cubic_compute_cost = _.memoize(function(c) {\n    self.compute_adjacency_list();\n    return _.reduce(_.first(_.pluck(c.children, \"degree\").sort(d3.descending), 3), function(memo, value) {\n      return memo * value;\n    }, 1);\n  }, function(c) {\n    return c.cluster_id;\n  });\n\n  self.compute_global_clustering_coefficients = _.once(function() {\n    self.compute_adjacency_list();\n\n    self.clusters.forEach(function(c) {\n      _.defer(function(a_cluster) {\n        cluster_size = a_cluster.children.length;\n        if (cluster_size < 3) {\n          a_cluster.cc = misc.undefined;\n        } else {\n          if (estimate_cubic_compute_cost(a_cluster, true) >= 5000000) {\n            a_cluster.cc = misc.too_large;\n          } else {\n            // pull out all the nodes that have this cluster id\n            member_nodes = [];\n\n            var triads = 0;\n            var triangles = 0;\n\n            self.nodes.forEach(function(n, i) {\n              if (n.cluster == a_cluster.cluster_id) {\n                member_nodes.push(i);\n              }\n            });\n            member_nodes.forEach(function(node) {\n              my_neighbors = self.nodes[node].neighbors.values().map(function(d) {\n                return +d;\n              }).sort(d3.ascending);\n              for (n1 = 0; n1 < my_neighbors.length; n1 += 1) {\n                for (n2 = n1 + 1; n2 < my_neighbors.length; n2 += 1) {\n                  triads += 1;\n                  if (self.nodes[my_neighbors[n1]].neighbors.has(my_neighbors[n2])) {\n                    triangles += 1;\n                  }\n                }\n              }\n            });\n\n            a_cluster.cc = triangles / triads;\n          }\n        }\n\n      }, c);\n    });\n  });\n\n  self.mark_nodes_as_processing = function(property) {\n    self.nodes.forEach(function(n) {\n      n[property] = misc.processing;\n    });\n  };\n\n  self.compute_graph_stats = function() {\n\n    d3.select(this).classed(\"disabled\", true).select(\"i\").classed({\n      \"fa-calculator\": false,\n      \"fa-cog\": true,\n      \"fa-spin\": true\n    });\n    self.mark_nodes_as_processing('lcc');\n    self.compute_local_clustering_coefficients_worker();\n    self.compute_global_clustering_coefficients();\n    d3.select(this).remove();\n\n  };\n\n\n  /*------------ Constructor ---------------*/\n  function initial_json_load() {\n    var connected_links = [];\n    var total = 0;\n    self.exclude_cluster_ids = {};\n    self.has_hxb2_links = false;\n    self.cluster_sizes = [];\n\n    graph_data.Nodes.forEach(function(d) {\n      if (typeof self.cluster_sizes[d.cluster - 1] === \"undefined\") {\n        self.cluster_sizes[d.cluster - 1] = 1;\n      } else {\n        self.cluster_sizes[d.cluster - 1]++;\n      }\n      if (\"is_lanl\" in d) {\n        d.is_lanl = d.is_lanl == \"true\";\n      }\n\n\n      if (d.attributes.indexOf(\"problematic\") >= 0) {\n        self.has_hxb2_links = d.hxb2_linked = true;\n      }\n\n    });\n\n    /* add buttons and handlers */\n    /* clusters first */\n\n    if (button_bar_ui) {\n\n\n      $('#' + button_bar_ui + '_cluster_zoom').on('show.bs.modal', function(event) {\n        var link_clicked = $(event.relatedTarget);\n        var cluster_id = link_clicked.data(\"cluster\");\n        var modal = d3.select('#' + button_bar_ui + '_cluster_zoom');\n        modal.selectAll(\".modal-title\").text(\"Cluster \" + cluster_id);\n\n        $(\"#\" + button_bar_ui + \"_cluster_zoom_svg_export\").on(\"click\", function(e) {\n          helpers.save_image(\"png\", \"#\" + button_bar_ui + \"_cluster_zoom_svg\");\n        });\n\n        var node_indices = {};\n        var used_index = 0;\n\n        var only_this_cluster = {\n          \"Nodes\": _.map(_.filter(self.nodes, function(n, i) {\n            if (n.cluster == cluster_id) {\n              node_indices[i] = used_index++;\n              return true;\n            }\n            return false;\n          }), function(n) {\n            var nn = _.clone(n);\n            nn.cluster = 1;\n            delete nn[\"parent\"];\n            return nn;\n          }),\n          \"Edges\": _.map(_.filter(self.edges, function(e) {\n            if (e.source in node_indices && e.target in node_indices) {\n              return true;\n            }\n            return false;\n          }), function(e) {\n            var ne = _.clone(e);\n            ne.target = node_indices[ne.target];\n            ne.source = node_indices[ne.source];\n            return ne;\n          }),\n\n        };\n\n\n        only_this_cluster[_networkGraphAttrbuteID] = self.json[_networkGraphAttrbuteID];\n\n\n        hivtrace_cluster_network_graph(only_this_cluster, \"#\" + button_bar_ui + \"_cluster_zoom_svg\", null, null, null, null, null, null, null, \"#\" + button_bar_ui + \"_cluster_zoom_body\", {\n          \"expand\": [1],\n          \"charge\": 10,\n          \"minimum size\" : 0,\n          \"colorizer\": self.colorizer,\n          \"node_shaper\": self.node_shaper,\n          \"width\": 600\n        });\n\n      });\n\n      function _cluster_list_view_render(cluster_id, group_by_attribute, the_list) {\n        the_list.selectAll('*').remove();\n        var allowed_types = {\n          \"String\": 1,\n          \"Date\": 1,\n          \"Number\": 1\n        };\n\n        var column_ids = _.filter(self.json[_networkGraphAttrbuteID], function(d) {\n          return d.type in allowed_types;\n        });\n\n        var cluster_nodes = _.filter(self.nodes, function(n) {\n          return n.cluster == cluster_id;\n        });\n\n        if (group_by_attribute) {\n          _.each(column_ids, function(column) {\n            var binned = _.groupBy(cluster_nodes, function(n) {\n              return attribute_node_value_by_id(n, column.raw_attribute_key);\n            });\n            var sorted_keys = _.keys(binned).sort();\n            var attribute_record = the_list.append(\"li\");\n            attribute_record.append(\"code\").text(column.raw_attribute_key);\n            var attribute_list = attribute_record.append(\"dl\").classed(\"dl-horizontal\", true);\n            _.each(sorted_keys, function(key) {\n              attribute_list.append(\"dt\").text(key);\n              attribute_list.append(\"dd\").text(_.map(binned[key], function(n) {\n                return n.id;\n              }).join(\", \"));\n            });\n\n          });\n        } else {\n          _.each(_.filter(self.nodes, function(n) {\n            return n.cluster == cluster_id;\n          }), function(node) {\n            var patient_record = the_list.append(\"li\");\n            patient_record.append(\"code\").text(node.id);\n            var patient_list = patient_record.append(\"dl\").classed(\"dl-horizontal\", true);\n            _.each(column_ids, function(column) {\n              patient_list.append(\"dt\").text(column.raw_attribute_key);\n              patient_list.append(\"dd\").text(attribute_node_value_by_id(node, column.raw_attribute_key));\n\n            });\n          });\n        }\n      }\n\n      d3.select('#' + button_bar_ui + '_cluster_list_view_toggle').on('click', function() {\n        d3.event.preventDefault();\n        var group_by_id = false;\n\n        var button_clicked = $(this);\n        if (button_clicked.data('view') == 'id') {\n          button_clicked.data('view', 'attribute');\n          button_clicked.text(\"Group by ID\");\n          group_by_id = false;\n        } else {\n          button_clicked.data('view', 'id');\n          button_clicked.text(\"Group by attribute\");\n          group_by_id = true;\n        }\n        _cluster_list_view_render(button_clicked.data('cluster'), !group_by_id, d3.select('#' + button_bar_ui + '_cluster_list_payload'));\n      });\n\n      $('#' + button_bar_ui + '_cluster_list').on('show.bs.modal', function(event) {\n        var link_clicked = $(event.relatedTarget);\n        var cluster_id = link_clicked.data(\"cluster\");\n        var modal = d3.select('#' + button_bar_ui + '_cluster_list');\n        modal.selectAll(\".modal-title\").text(\"Listing nodes in cluster \" + cluster_id);\n        $('#' + button_bar_ui + '_cluster_list_view_toggle').data('cluster', cluster_id);\n\n\n        _cluster_list_view_render(cluster_id, $('#' + button_bar_ui + '_cluster_list_view_toggle').data(\"view\") != \"id\", modal.select('#' + button_bar_ui + '_cluster_list_payload'));\n\n      });\n\n      var cluster_ui_container = d3.select(\"#\" + button_bar_ui + \"_cluster_operations_container\");\n\n      cluster_ui_container.selectAll(\"li\").remove();\n\n      var cluster_commands = [\n        [\"Expand All\", function() {\n          return self.expand_some_clusters()\n        }, true, 'hivtrace-expand-all'],\n        [\"Collapse All\", function() {\n          return self.collapse_some_clusters()\n        }, true, 'hivtrace-collapse-all'],\n        [\"Expand Filtered\", function() {\n          return self.expand_some_clusters(self.select_some_clusters(function(n) {\n            return n.match_filter;\n          }))\n        }, true, 'hivtrace-expand-filtered'],\n        [\"Collapse Filtered\", function() {\n          return self.collapse_some_clusters(self.select_some_clusters(function(n) {\n            return n.match_filter;\n          }))\n        }, true, 'hivtrace-collapse-filtered'],\n        [\"Hide problematic clusters\", function(item) {\n          d3.select(item).text(self.hide_hxb2 ? \"Hide problematic clusters\" : \"Show problematic clusters\");\n          self.toggle_hxb2();\n        }, self.has_hxb2_links, 'hivtrace-hide-problematic-clusters']\n      ];\n\n      if (!self._is_CDC_) {\n        cluster_commands.push([\"Show removed edges\", function(item) {\n          self.filter_edges = !self.filter_edges;\n          d3.select(item).text(self.filter_edges ? \"Show removed edges\" : \"Hide removed edges\");\n          self.update(false);\n        }, function() {\n          return _.some(self.edges, function(d) {\n            return d.removed;\n          });\n        }, 'hivtrace-show-removed-edges'])\n\n      }\n\n\n      cluster_commands.forEach(function(item, index) {\n        var handler_callback = item[1];\n        if (item[2]) {\n          this.append(\"li\").append(\"a\")\n            .text(item[0])\n            .attr(\"href\", \"#\")\n            .attr(\"id\", item[3])\n            .on(\"click\", function(e) {\n              handler_callback(this);\n              d3.event.preventDefault();\n            });\n        }\n      }, cluster_ui_container);\n\n\n      var button_group = d3.select(\"#\" + button_bar_ui + \"_button_group\");\n\n      if (!button_group.empty()) {\n        button_group.selectAll(\"button\").remove();\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Expand spacing\").on(\"click\", function(d) {\n          change_spacing(5 / 4);\n        }).append(\"i\").classed(\"fa fa-plus\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Compress spacing\").on(\"click\", function(d) {\n          change_spacing(4 / 5);\n        }).append(\"i\").classed(\"fa fa-minus\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Enlarge window\").on(\"click\", function(d) {\n          change_window_size(100, true);\n        }).append(\"i\").classed(\"fa fa-expand\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Shrink window\").on(\"click\", function(d) {\n          change_window_size(-100, true);\n        }).append(\"i\").classed(\"fa fa-compress\", true);\n\n\n        if (!self._is_CDC_) {\n          button_group.append(\"button\")\n            .classed(\"btn btn-default btn-sm\", true)\n            .attr(\"title\", \"Compute graph statistics\")\n            .attr(\"id\", \"hivtrace-compute-graph-statistics\")\n            .on(\"click\", function(d) {\n              _.bind(self.compute_graph_stats, this)();\n            })\n            .append(\"i\")\n            .classed(\"fa fa-calculator\", true);\n        }\n\n        button_group.append(\"button\")\n          .classed(\"btn btn-default btn-sm\", true)\n          .attr(\"title\", \"Save Image\")\n          .attr(\"id\", \"hivtrace-export-image\")\n          .on(\"click\", function(d) {\n            helpers.save_image(\"png\", \"#network-svg\");\n          })\n          .append(\"i\").classed(\"fa fa-image\", true);\n      }\n\n      $(\"#\" + button_bar_ui + \"_filter\").on(\"input propertychange\", _.throttle(function(e) {\n        var filter_value = $(this).val();\n        self.filter(filter_value.split(\" \").filter(function(d) {\n          return d.length > 0;\n        }).map(function(d) {\n          if (d.length > 2) {\n            if (d[0] == '\"' && d[d.length - 1] == '\"') {\n              return {\n                type: 're',\n                value: new RegExp(\"^\" + d.substr(1, d.length - 2) + \"$\", \"i\")\n              };\n            }\n            if (d[0] == '<') {\n              var distance_threshold = parseFloat(d.substr(1));\n              if (distance_threshold > 0) {\n                return {\n                  type: 'distance',\n                  value: distance_threshold\n                };\n              }\n            }\n\n          }\n          return {\n            type: 're',\n            value: new RegExp(d, \"i\")\n          };\n        }));\n\n      }, 250));\n\n      $(\"#\" + button_bar_ui + \"_hide_filter\").on(\"change\", _.throttle(function(e) {\n        self.hide_unselected = !self.hide_unselected;\n        self.filter_visibility();\n        self.update(true);\n      }, 250));\n\n      $(\"#\" + button_bar_ui + \"_show_small_clusters\").on(\"change\", _.throttle(function(e) {\n        if (self.current_size_filter == self.filter_by_size) {\n            self.current_size_filter = function () {return true;}\n        } else {\n            self.current_size_filter = self.filter_by_size;\n        }\n        self.update(false);\n      }, 250));\n\n\n      $(\"#\" + button_bar_ui + \"_pairwise_table_pecentage\").on(\"change\", _.throttle(function(e) {\n        self.show_percent_in_pairwise_table = !self.show_percent_in_pairwise_table;\n        render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n      }, 250));\n    }\n\n\n    if (_networkGraphAttrbuteID in json) {\n      attributes = json[_networkGraphAttrbuteID];\n    } else {\n      if (attributes && \"hivtrace\" in attributes) {\n        attributes = attributes[\"hivtrace\"];\n      }\n    }\n\n    if (attributes) {\n      /*\n         map attributes into nodes and into the graph object itself using\n         _networkGraphAttrbuteID as the key\n      */\n\n\n      if (\"attribute_map\" in attributes) {\n        var attribute_map = attributes[\"attribute_map\"];\n\n        if (\"map\" in attribute_map && attribute_map[\"map\"].length > 0) {\n          graph_data[_networkGraphAttrbuteID] = attribute_map[\"map\"].map(function(a, i) {\n            return {\n              'label': a,\n              'type': null,\n              'values': {},\n              'index': i,\n              'range': 0\n            };\n          });\n\n          graph_data.Nodes.forEach(function(n) {\n            n[_networkGraphAttrbuteID] = n.id.split(attribute_map[\"delimiter\"]);\n            n[_networkGraphAttrbuteID].forEach(function(v, i) {\n              if (i < graph_data[_networkGraphAttrbuteID].length) {\n                if (!(v in graph_data[_networkGraphAttrbuteID][i][\"values\"])) {\n                  graph_data[_networkGraphAttrbuteID][i][\"values\"][v] = graph_data[_networkGraphAttrbuteID][i][\"range\"];\n                  graph_data[_networkGraphAttrbuteID][i][\"range\"] += 1;\n                }\n              }\n              //graph_data [_networkGraphAttrbuteID][i][\"values\"][v] = 1 + (graph_data [_networkGraphAttrbuteID][i][\"values\"][v] ? graph_data [_networkGraphAttrbuteID][i][\"values\"][v] : 0);\n            });\n          });\n\n          graph_data[_networkGraphAttrbuteID].forEach(function(d) {\n            if (d['range'] < graph_data.Nodes.length && d['range'] > 1 && d['range'] <= 20) {\n              d['type'] = 'category';\n            }\n          });\n        }\n      }\n\n\n      _.each(self._networkPredefinedAttributeTransforms, function(computed, key) {\n        if (!computed['depends'] || _.has(graph_data[_networkGraphAttrbuteID], computed['depends'])) {\n          var extension = {};\n          extension[key] = computed;\n          _.extend(graph_data[_networkGraphAttrbuteID], extension);\n          _.each(graph_data.Nodes, function(node) {\n            inject_attribute_node_value_by_id(node, key, computed['map'](node));\n          });\n        }\n      });\n\n      // populate the UI elements\n      if (button_bar_ui) {\n        // decide if the variable can be considered categorical by examining its range\n\n\n        var valid_cats = _.filter(_.map(graph_data[_networkGraphAttrbuteID], function(d, k) {\n          d['raw_attribute_key'] = k;\n          if (d['type'] == \"String\") {\n            d['value_range'] = _.keys(_.countBy(graph_data.Nodes, function(nd) {\n              return attribute_node_value_by_id(nd, k);\n            }));\n            d['dimension'] = d[\"value_range\"].length;\n          } else {\n            if ('enum' in d) {\n              d[\"value_range\"] = _.clone(d[\"enum\"]);\n              d[\"value_range\"].push(_networkMissing);\n              d['dimension'] = d[\"value_range\"].length;\n              d['no-sort'] = true;\n            }\n          }\n          return d;\n        }), function(d) {\n          return 'value_range' in d && d['value_range'].length <= _maximumValuesInCategories;\n        });\n\n        var valid_shapes = _.filter(valid_cats, function(d) {\n          return d.dimension <= 7;\n        });\n\n\n        // sort values alphabetically for consistent coloring\n\n        _.each([valid_cats, valid_shapes], function(list) {\n          _.each(list, function(d) {\n            var values;\n            if (d['no-sort']) {\n              values = d['value_range'];\n            } else {\n\n              if (d['type'] == \"String\") {\n\n                values = d['value_range'].sort();\n\n                if (d.dimension <= _maximumValuesInCategories) {\n\n                  var string_hash = function(str) {\n                    var hash = 5801;\n                    for (var ci = 0; ci < str.length; ci++) {\n                      var charCode = str.charCodeAt(ci);\n                      hash = (hash << 5 + hash) + charCode;\n                    }\n                    return hash;\n                  };\n\n                  var hashed = _.map(values, string_hash);\n                  var available_keys = {};\n                  var reindexed = {};\n\n                  for (var i = 0; i < _maximumValuesInCategories; i++) {\n                    available_keys[i] = true;\n                  }\n\n\n\n                  _.each(hashed, function(value, index) {\n                    if (value < 0) {\n                      value = -value;\n                    }\n\n                    var first_try = value % _maximumValuesInCategories;\n                    if (first_try in available_keys) {\n                      reindexed[values[index]] = first_try;\n                      delete available_keys[first_try];\n                      return;\n                    }\n\n                    var second_try = Math.floor(value / _maximumValuesInCategories) % _maximumValuesInCategories;\n                    if (second_try in available_keys) {\n                      reindexed[values[index]] = second_try;\n                      delete available_keys[second_try];\n                      return;\n                    }\n\n                    var last_resort = parseInt(_.keys(available_keys).sort()[0]);\n                    reindexed[values[index]] = last_resort;\n                    delete available_keys[last_resort];\n                  });\n\n                  d['stable-ish order'] = reindexed;\n\n\n                }\n                //values = _.unzip(_.zip (d['value_range'], ordering_map).sort (function (a,b) { if (a[1] < b[1]) return -1; if (a[1] > b[1]) return 1; return 0}))[0]; //d['value_range'].sort ();\n\n\n              } else {\n                values = d['value_range'].sort();\n              }\n            }\n\n\n\n            var map = new Object;\n\n            _.each(values, function(d2, i) {\n              map[d2] = i;\n            });\n\n            d['value_map'] = function(v, key) {\n              return key ? (key == 'lookup' ? _.invert(map) : map) : map[v];\n            };\n\n          })\n        });\n\n\n        var valid_scales = _.filter(_.map(graph_data[_networkGraphAttrbuteID], function(d, k) {\n\n          function determine_scaling(d, values, scales) {\n            var low_var = Infinity;\n\n\n            _.each(scales, function(scl) {\n              d['value_range'] = d3.extent(values);\n              var bins = _.map(_.range(_networkContinuousColorStops), function() {\n                return 0.\n              });\n              scl.range([0, _networkContinuousColorStops - 1]).domain(d['value_range']);\n              _.each(values, function(v) {\n                bins[Math.floor(scl(v))]++;\n              });\n\n              var mean = values.length / _networkContinuousColorStops;\n              var vrnc = _.reduce(bins, function(p, c) {\n                return p + (c - mean) * (c - mean);\n              });\n\n              //console.log (d['value_range'], bins);\n\n              if (vrnc < low_var) {\n                low_var = vrnc;\n                d['scale'] = scl;\n              }\n\n            });\n          }\n\n          d['raw_attribute_key'] = k;\n          if (d.type == \"Number\") {\n            var values = _.filter(_.map(graph_data.Nodes, function(nd) {\n              return attribute_node_value_by_id(nd, k);\n            }), function(v) {\n              return v == _networkMissing ? null : v;\n            });\n            // automatically determine the scale and see what spaces the values most evenly\n            determine_scaling(d, values, [d3.scale.linear(), d3.scale.log(), d3.scale.pow().exponent(1 / 3), d3.scale.pow().exponent(0.25), d3.scale.pow().exponent(0.5), d3.scale.pow().exponent(1 / 8), d3.scale.pow().exponent(1 / 16)]);\n\n          } else {\n            if (d.type == \"Date\") {\n              var values = _.filter(_.map(graph_data.Nodes, function(nd) {\n                try {\n                  var a_date = attribute_node_value_by_id(nd, k);\n                  //console.log (k, a_date, _defaultDateFormat.parse (a_date));\n                  inject_attribute_node_value_by_id(nd, k, _defaultDateFormat.parse(a_date));\n                } catch (err) {\n                  inject_attribute_node_value_by_id(nd, k, _networkMissing);\n                }\n                return attribute_node_value_by_id(nd, k);\n\n              }), function(v) {\n                return v == _networkMissing ? null : v;\n              });\n              // automatically determine the scale and see what spaces the values most evenly\n              determine_scaling(d, values, [d3.time.scale()]);\n            }\n          }\n          return d;\n        }), function(d) {\n          return d.type == \"Number\" || d.type == \"Date\";\n        });\n\n\n\n\n        //valid_cats.splice (0,0, {'label' : 'None', 'index' : -1});\n\n        [d3.select(\"#\" + button_bar_ui + \"_attributes\"), d3.select(\"#\" + button_bar_ui + \"_attributes_cat\")].forEach(function(m) {\n\n          m.selectAll(\"li\").remove();\n\n          var menu_items = [\n            [\n              ['None', null, _.partial(handle_attribute_categorical, null)]\n            ],\n            [\n              ['Categorical', 'heading', null]\n            ]\n          ].concat(valid_cats.map(function(d, i) {\n            return [\n              [d['label'], d['raw_attribute_key'], _.partial(handle_attribute_categorical, d['raw_attribute_key'])]\n            ];\n          }));\n\n\n          if (valid_scales.length) {\n            menu_items = menu_items.concat([\n              [\n                ['Continuous', 'heading', null]\n              ]\n            ]).concat(valid_scales.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'],\n                  _.partial(handle_attribute_continuous, d['raw_attribute_key'])\n                ]\n              ];\n            }));\n          }\n\n          var cat_menu = m.selectAll(\"li\")\n            .data(menu_items);\n\n\n          cat_menu.enter().append(\"li\").classed(\"disabled\", function(d) {\n            return d[0][1] == 'heading';\n          }).style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (d[1] == 'heading') return 'font-style: italic';\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n        [d3.select(\"#\" + button_bar_ui + \"_shapes\")].forEach(function(m) {\n\n          m.selectAll(\"li\").remove();\n          var cat_menu = m.selectAll(\"li\")\n            .data([\n              [\n                ['None', null, _.partial(handle_shape_categorical, null)]\n              ]\n            ].concat(valid_shapes.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'], _.partial(handle_shape_categorical, d['raw_attribute_key'])]\n              ];\n            })));\n\n          cat_menu.enter().append(\"li\").style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n        $(\"#\" + button_bar_ui + \"_opacity_invert\").on(\"click\", function(e) {\n          if (self.colorizer['opacity_scale']) {\n            self.colorizer['opacity_scale'].range(self.colorizer['opacity_scale'].range().reverse());\n            self.update(true);\n            draw_attribute_labels();\n\n          }\n          $(this).toggleClass(\"btn-active btn-default\");\n\n        });\n\n        $(\"#\" + button_bar_ui + \"_attributes_invert\").on(\"click\", function(e) {\n          if (self.colorizer['category_id']) {\n            graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'].range(graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'].range().reverse());\n            self.clusters.forEach(function(the_cluster) {\n              the_cluster[\"gradient\"] = compute_cluster_gradient(the_cluster, self.colorizer['category_id']);\n            });\n            self.update(true);\n            draw_attribute_labels();\n\n          }\n          $(this).toggleClass(\"btn-active btn-default\");\n\n        });\n\n        [d3.select(\"#\" + button_bar_ui + \"_opacity\")].forEach(function(m) {\n\n\n          m.selectAll(\"li\").remove();\n          var cat_menu = m.selectAll(\"li\")\n            .data([\n              [\n                ['None', null, _.partial(handle_attribute_opacity, null)]\n              ]\n            ].concat(valid_scales.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'], _.partial(handle_attribute_opacity, d['raw_attribute_key'])]\n              ];\n            })));\n\n\n          cat_menu.enter().append(\"li\").style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n      }\n    }\n\n    if (self.cluster_sizes.length > max_points_to_render) {\n      var sorted_array = self.cluster_sizes.map(function(d, i) {\n        return [d, i + 1];\n      }).sort(function(a, b) {\n        return a[0] - b[0];\n      });\n\n      for (var k = 0; k < sorted_array.length - max_points_to_render; k++) {\n        self.exclude_cluster_ids[sorted_array[k][1]] = 1;\n      }\n      \n      warning_string = \"Excluded \" + (sorted_array.length -\n          max_points_to_render) + \" clusters (maximum size \" +\n        sorted_array[k - 1][0] + \" nodes) because only \" +\n        max_points_to_render + \" objects can be shown at once.\";\n    }\n    \n    // Initialize class attributes\n    singletons = graph_data.Nodes.filter(function(v, i) {\n      return v.cluster === null;\n    }).length;\n    self.nodes = graph_data.Nodes.filter(function(v, i) {\n      if (v.cluster && typeof self.exclude_cluster_ids[v.cluster] === \"undefined\") {\n        connected_links[i] = total++;\n        return true;\n      }\n      return false;\n    });\n    self.edges = graph_data.Edges.filter(function(v, i) {\n      return connected_links[v.source] != undefined && connected_links[v.target] != undefined\n    });\n    self.edges = self.edges.map(function(v, i) {\n      v.source = connected_links[v.source];\n      v.target = connected_links[v.target];\n      v.id = i;\n      return v;\n    });\n\n    compute_node_degrees(self.nodes, self.edges);\n\n    var r = default_layout(self.clusters, self.nodes);\n\n    self.clusters = r[0];\n    self.nodes = r[1];\n    self.clusters.forEach(function(d, i) {\n      self.cluster_mapping[d.cluster_id] = i;\n      d.hxb2_linked = d.children.some(function(c) {\n        return c.hxb2_linked\n      });\n      var degrees = d.children.map(function(c) {\n        return c.degree;\n      });\n      degrees.sort(d3.ascending);\n      d.degrees = helpers.describe_vector(degrees);\n      d.distances = [];\n    });\n\n\n    self.edges.forEach(function(e, i) {\n      self.clusters[self.cluster_mapping[self.nodes[e.target].cluster]].distances.push(e.length);\n    });\n\n    self.clusters.forEach(function(d, i) {\n      d.distances = helpers.describe_vector(d.distances);\n    });\n    //self.clusters\n\n\n    self.update();\n\n  }\n\n  function sort_table_toggle_icon(element, value) {\n    if (value) {\n      $(element).data(\"sorted\", value);\n      d3.select(element).selectAll(\"i\").classed(\"fa-sort-amount-desc\", value == \"desc\").classed(\"fa-sort-amount-asc\", value == \"asc\").classed(\"fa-sort\", value == \"unsorted\");\n    } else {\n      var sorted_state = $(element).data(\"sorted\");\n      sort_table_toggle_icon(element, sorted_state == \"asc\" ? \"desc\" : \"asc\");\n      return sorted_state == \"asc\" ? d3.descending : d3.ascending;\n    }\n  }\n\n  function sort_table_by_column(element, datum) {\n    d3.event.preventDefault();\n    var table_element = $(element).closest(\"table\");\n    if (table_element.length) {\n      var sort_on = parseInt($(element).data(\"column-id\"));\n      var sort_key = $(element).data(\"sort-on\");\n      var sorted_state = ($(element).data(\"sorted\"));\n      var sorted_function = sort_table_toggle_icon(element);\n\n      var sort_accessor = sort_key ? function(x) {\n        var val = x[sort_key];\n        if (typeof(val) === \"function\") return val();\n        return val;\n      } : function(x) {\n        return x;\n      };\n\n      d3.select(table_element[0]).select(\"tbody\").selectAll(\"tr\").sort(function(a, b) {\n        return sorted_function(sort_accessor(a[sort_on]), sort_accessor(b[sort_on]));\n      });\n\n      // select all other elements from thead and toggle their icons\n\n      $(table_element).find(\"thead [data-column-id]\")\n        .filter(function() {\n          return parseInt($(this).data(\"column-id\")) != sort_on;\n        })\n        .each(function() {\n          sort_table_toggle_icon(this, \"unsorted\");\n        });\n    }\n  }\n\n  function format_a_cell(data, index, item) {\n\n    var this_sel = d3.select(item);\n    var current_value = typeof(data.value) === \"function\" ? data.value() : data.value;\n\n    if (\"callback\" in data) {\n      data.callback(item, current_value);\n    } else {\n      var repr = \"format\" in data ? data.format(current_value) : current_value;\n      if (\"html\" in data) this_sel.html(repr);\n      else this_sel.text(repr);\n      if (\"sort\" in data) {\n        var clicker = this_sel.append(\"a\").property(\"href\", \"#\").on(\"click\", function(d) {\n          sort_table_by_column(this, d);\n        }).attr(\"data-sorted\", \"unsorted\").attr(\"data-column-id\", index).attr(\"data-sort-on\", data.sort);\n        clicker.append(\"i\").classed(\"fa fa-sort\", true).style(\"margin-left\", \"0.2em\");\n      }\n    }\n    if (\"help\" in data) {\n      this_sel.attr(\"title\", data.help);\n    }\n\n  }\n\n  function add_a_sortable_table(container, headers, content) {\n\n    var thead = container.selectAll(\"thead\");\n    if (thead.empty()) {\n      thead = container.append(\"thead\");\n      thead.selectAll(\"tr\").data(headers).enter().append(\"tr\").selectAll(\"th\").data(function(d) {\n        return d;\n      }).enter().append(\"th\").\n      call(function(selection) {\n        return selection.each(function(d, i) {\n          format_a_cell(d, i, this);\n        })\n      });\n    }\n\n    var tbody = container.selectAll(\"tbody\");\n    if (tbody.empty()) {\n      tbody = container.append(\"tbody\");\n      tbody.selectAll(\"tr\").data(content).enter().append(\"tr\").selectAll(\"td\").data(function(d) {\n        return d;\n      }).enter().append(\"td\").call(function(selection) {\n        return selection.each(function(d, i) {\n          handle_cluster_click\n          format_a_cell(d, i, this);\n        })\n      });\n    }\n\n\n  }\n\n  function _cluster_table_draw_id(element, payload) {\n    var this_cell = d3.select(element);\n    this_cell.selectAll(\"*\").remove();\n    this_cell.append(\"span\").text(payload).style(\"padding-right\", \"0.5em\");\n    this_cell.append(\"button\").classed(\"btn btn-primary btn-xs pull-right\", true).text(\"Zoom\").attr(\"data-toggle\", \"modal\").attr(\"data-target\", \"#\" + button_bar_ui + \"_cluster_zoom\").attr(\"data-cluster\", payload);\n    this_cell.append(\"button\").classed(\"btn btn-xs pull-right\", true).text(\"List\").attr(\"data-toggle\", \"modal\").attr(\"data-target\", \"#\" + button_bar_ui + \"_cluster_list\").attr(\"data-cluster\", payload);\n  }\n\n  function _cluster_table_draw_buttons(element, payload) {\n\n    var this_cell = d3.select(element);\n    var labels = [\n      [payload[0] ? \"expand\" : \"collapse\", 0]\n    ];\n    if (payload[1]) {\n      labels.push([\"problematic\", 1]);\n    }\n    if (payload[2]) {\n      labels.push([\"match\", 1]);\n    }\n    var buttons = this_cell.selectAll(\"button\").data(labels);\n    buttons.enter().append(\"button\");\n    buttons.exit().remove();\n    buttons.classed(\"btn btn-primary btn-xs\", true).text(function(d) {\n        return d[0];\n      })\n      .attr(\"disabled\", function(d) {\n        return d[1] ? \"disabled\" : null\n      })\n      .on(\"click\", function(d) {\n        if (d[1] == 0) {\n          if (payload[0]) {\n            expand_cluster(self.clusters[payload[payload.length - 1] - 1], true);\n          } else {\n            collapse_cluster(self.clusters[payload[payload.length - 1] - 1]);\n          }\n          format_a_cell(d3.select(element).datum(), null, element);\n        }\n      });\n\n  };\n\n  function _node_table_draw_buttons(element, payload) {\n    var this_cell = d3.select(element);\n    \n    \n    var labels = [payload.length == 1 ? \n      [\"can't be shown\", 1] :\n      [payload[0] ? \"hide\" : \"show\", 0]\n    ];\n\n    var buttons = this_cell.selectAll(\"button\").data(labels);\n    buttons.enter().append(\"button\");\n    buttons.exit().remove();\n    buttons.classed(\"btn btn-primary btn-xs btn-node-property\", true).text(function(d) {\n        return d[0];\n      })\n      .attr(\"disabled\", function(d) {\n        return d[1] ? \"disabled\" : null\n      })\n      .on(\"click\", function(d) {\n        if (d[1] == 0) {\n          if (payload[0]) {\n            collapse_cluster(self.clusters[payload[payload.length - 1] - 1], true);\n          } else {\n            expand_cluster(self.clusters[payload[payload.length - 1] - 1]);\n          }\n          format_a_cell(d3.select(element).datum(), null, element);\n        }\n      });\n\n  };\n\n  self.update_volatile_elements = function(container) {\n    container.selectAll(\"td\").filter(function(d, i) {\n      return (\"volatile\" in d);\n    }).each(function(d, i) {\n      format_a_cell(d, i, this);\n    });\n  };\n\n  function draw_node_table() {\n\n    if (self.node_table) {\n      add_a_sortable_table(self.node_table,\n        // headers\n        [\n          [{\n            value: \"ID\",\n            sort: \"value\",\n            help: \"Node ID\"\n          }, {\n            value: \"Status\",\n            sort: \"value\"\n          }, {\n            value: \"# of links\",\n            sort: \"value\",\n            help: \"Number of links (Node degree)\"\n          }, {\n            value: \"Cluster\",\n            sort: \"value\",\n            help: \"Which cluster does the node belong to\"\n          }]\n        ],\n        // rows\n        self.nodes.map(function(n, i) {\n          return [{\n            \"value\": n.id,\n            help: \"Node ID\"\n          }, {\n            \"value\": function() {\n              try {\n                  if (self.exclude_cluster_ids [n.cluster]) {\n                    // parent cluster can't be rendered\n                    // because of size restrictions\n                    return [n.cluster];\n                  }\n                  return [!self.clusters[self.cluster_mapping[n.cluster]].collapsed, n.cluster]\n              } catch (err) {\n                \n              }\n            },\n            \"callback\": _node_table_draw_buttons,\n            \"volatile\": true\n          }, {\n            \"value\": n.degree,\n            help: \"Node degree\"\n          }, {\n            \"value\": n.cluster,\n            help: \"Which cluster does the node belong to\"\n          }];\n\n        }));\n    }\n  }\n\n  function draw_cluster_table() {\n    if (self.cluster_table) {\n      add_a_sortable_table(self.cluster_table,\n        // headers\n        [\n          [{\n            value: \"Cluster ID\",\n            sort: \"value\",\n            help: \"Unique cluster ID\"\n          }, {\n            value: \"Visibility\",\n            sort: \"value\",\n            help: \"Visibility in the network tab\"\n          }, {\n            value: \"Size\",\n            sort: \"value\",\n            help: \"Number of nodes in the cluster\"\n          }, {\n            value: \"# links/node<br>Mean [Median, IQR]\",\n            html: true\n          }, {\n            value: \"Genetic distance<br>Mean [Median, IQR]\",\n            help: \"Genetic distance among nodes in the cluster\",\n            html: true\n          }]\n        ],\n        self.clusters.map(function(d, i) {\n          // rows\n          return [{\n            value: d.cluster_id,\n            callback: _cluster_table_draw_id\n          }, {\n            value: function() {\n              return [d.collapsed, d.hxb2_linked, d.match_filter, d.cluster_id]\n            },\n            callback: _cluster_table_draw_buttons,\n            volatile: true\n          }, {\n            value: d.children.length\n          }, {\n            value: d.degrees,\n            format: function(d) {\n              return _defaultFloatFormat(d['mean']) + \" [\" + _defaultFloatFormat(d['median']) + \", \" + _defaultFloatFormat(d['Q1']) + \" - \" + _defaultFloatFormat(d['Q3']) + \"]\"\n            }\n          }, {\n            value: d.distances,\n            format: function(d) {\n              return _defaultFloatFormat(d['mean']) + \" [\" + _defaultFloatFormat(d['median']) + \", \" + _defaultFloatFormat(d['Q1']) + \" - \" + _defaultFloatFormat(d['Q3']) + \"]\"\n            }\n          }];\n\n        })\n      );\n    }\n  }\n\n  /*------------ Update layout code ---------------*/\n  function update_network_string(draw_me) {\n    if (network_status_string) {\n      var clusters_shown = _.filter (self.clusters, function (c) {return !c.collapsed;}).length,\n          clusters_removed = self.cluster_sizes.length - self.clusters.length,\n          nodes_removed = graph_data.Nodes.length - singletons - self.nodes.length;\n\n      /*var s = \"Displaying a network on <strong>\" + self.nodes.length + \"</strong> nodes, <strong>\" + self.clusters.length + \"</strong> clusters\"\n              + (clusters_removed > 0 ? \" (an additional \" + clusters_removed + \" clusters and \" + nodes_removed + \" nodes have been removed due to network size constraints)\" : \"\") + \". <strong>\"\n              + clusters_shown +\"</strong> clusters are expanded. Of <strong>\" + self.edges.length + \"</strong> edges, <strong>\" + draw_me.edges.length + \"</strong>, and of  <strong>\" + self.nodes.length  + \" </strong> nodes,  <strong>\" + draw_me.nodes.length + \" </strong> are displayed. \";\n      if (singletons > 0) {\n          s += \"<strong>\" +singletons + \"</strong> singleton nodes are not shown. \";\n      }*/\n\n      var s = \"<span class = 'badge'>\" + self.clusters.length + \"</span> clusters <span class = 'label label-primary'>\" + clusters_shown + \" expanded</span> <span class = 'badge'> \" +\n        self.nodes.length + \"</span> nodes <span class = 'label label-primary'>\" + draw_me.nodes.length + \" shown</span> \" +\n        \"<span class = 'badge'>\" + self.edges.length + \"</span> \" + (self._is_CDC_ ? \"links\" : \"edges\") + \" <span class = 'label label-primary'>\" + draw_me.edges.length + \" shown</span>\";\n\n\n      d3.select(network_status_string).html(s);\n    }\n  }\n\n\n  function draw_a_node(container, node) {\n    container = d3.select(container);\n\n    var symbol_type = (node.hxb2_linked && !node.is_lanl) ? \"cross\" : (node.is_lanl ? \"triangle-down\" : self.node_shaper['shaper'](node));\n\n    node.rendered_size = Math.sqrt (node_size(node))/2 + 2;\n\n    container.attr(\"d\", misc.symbol(symbol_type).size(node_size(node)))\n      .attr('class', 'node')\n      .classed('selected_object', function(d) {\n        return d.match_filter\n      })\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      })\n      .style('fill', function(d) {\n        return node_color(d);\n      })\n      .style('opacity', function(d) {\n        return node_opacity(d);\n      })\n      .style('display', function(d) {\n        if (d.is_hidden) return 'none';\n        return null;\n      })\n      .on('click', handle_node_click)\n      .on('mouseover', node_pop_on)\n      .on('mouseout', node_pop_off)\n      .call(network_layout.drag().on('dragstart', node_pop_off));\n\n  }\n\n\n  function draw_a_cluster(container, the_cluster) {\n\n    var container_group = d3.select(container);\n\n    var draw_from = the_cluster[\"binned_attributes\"] ? the_cluster[\"binned_attributes\"].map(function(d) {\n      return d.concat([0]);\n    }) : [\n      [null, 1, 0]\n    ];\n\n    if (the_cluster.match_filter) {\n      draw_from = draw_from.concat([\n        [\"selected\", the_cluster.match_filter, 1],\n        [\"not selected\", the_cluster.children.length - the_cluster.match_filter, 1]\n      ]);\n    }\n\n    var sums = [d3.sum(draw_from.filter(function(d) {\n        return d[2] == 0\n      }), function(d) {\n        return d[1];\n      }),\n      d3.sum(draw_from.filter(function(d) {\n        return d[2] != 0\n      }), function(d) {\n        return d[1];\n      })\n    ];\n\n    var running_totals = [0, 0];\n\n    draw_from = draw_from.map(function(d) {\n      var index = d[2];\n      var v = {\n        'container': container,\n        'cluster': the_cluster,\n        'startAngle': running_totals[index] / sums[index] * 2 * Math.PI,\n        'endAngle': (running_totals[index] + d[1]) / sums[index] * 2 * Math.PI,\n        'name': d[0],\n        'rim': index > 0\n      };\n      running_totals[index] += d[1];\n      return v;\n\n    });\n\n\n    var arc_radius = cluster_box_size(the_cluster) * 0.5;\n    the_cluster.rendered_size = arc_radius + 2;\n    var paths = container_group.selectAll(\"path\").data(draw_from);\n    paths.enter().append(\"path\");\n    paths.exit().remove();\n\n    paths.classed(\"cluster\", true)\n      .classed(\"hiv-trace-problematic\", function(d) {\n        return the_cluster.hxb2_linked && !d.rim;\n      })\n      .classed(\"hiv-trace-selected\", function(d) {\n        return d.rim;\n      })\n      .attr(\"d\", function(d) {\n        return (d.rim ? d3.svg.arc().innerRadius(arc_radius + 2).outerRadius(arc_radius + 5) : d3.svg.arc().innerRadius(0).outerRadius(arc_radius))(d);\n      })\n      .style(\"fill\", function(d, i) {\n        return d.rim ? self.colorizer['selected'](d.name) : (the_cluster[\"gradient\"] ? 'url(#' + the_cluster[\"gradient\"] + ')' : cluster_color(the_cluster, d.name));\n      })\n      .style (\"stroke-linejoin\", function (d,i) {\n        return draw_from.length > 1 ? \"round\" : \"\";\n      })\n      .style('display', function(d) {\n        if (the_cluster.is_hidden) return 'none';\n        return null;\n      });\n\n\n\n  }\n\n  function check_for_predefined_shapes (cat_id) {\n    console.log (cat_id);\n\n    if (cat_id in _networkPresetShapeSchemes) {\n        var domain = graph_data[_networkGraphAttrbuteID][cat_id]['value_range'];\n\n        return {\n                'domain' : domain,\n                'range'  : _.map (domain, function (v) {return _networkPresetShapeSchemes[cat_id][v]; })\n                };\n\n    } else {\n        return {'domain' : _.range(0, graph_data[_networkGraphAttrbuteID][cat_id].dimension),\n                'range'  : _networkShapeOrdering };\n    }\n  }\n\n  function handle_shape_categorical(cat_id) {\n    var set_attr = \"None\";\n\n    [\"#\" + button_bar_ui + \"_shapes\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Shape: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n\n    if (cat_id) {\n      var domain_range = check_for_predefined_shapes (cat_id);\n      var shape_mapper = d3.scale.ordinal().domain(domain_range['domain']).range(domain_range['range']);\n      self.node_shaper['id'] = cat_id;\n      self.node_shaper['shaper'] = function(d) {\n        return shape_mapper(graph_data[_networkGraphAttrbuteID][cat_id]['value_map'](attribute_node_value_by_id(d, cat_id)));\n      };\n      self.node_shaper['category_map'] = graph_data[_networkGraphAttrbuteID][cat_id]['value_map'];\n    } else {\n      self.node_shaper.id = null;\n      self.node_shaper.shaper = function() {\n        return 'circle'\n      };\n      self.node_shaper['category_map'] = null;\n    }\n    //console.log (graph_data [_networkGraphAttrbuteID][cat_id]['value_map'], self.node_shaper.domain(), self.node_shaper.range());\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  function draw_attribute_labels() {\n\n    legend_svg.selectAll(\"g.hiv-trace-legend\").remove();\n    var offset = 10;\n\n    if (self.colorizer['category_id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Color: \" + self.colorizer['category_id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      if (self.colorizer[\"continuous\"]) {\n        var anchor_format = graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['type'] == \"Date\" ? _defaultDateViewFormatShort : d3.format(\",.4r\");\n        var scale = graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'];\n\n        _.each(_.range(_networkContinuousColorStops), function(value) {\n          var x = scale.invert(value);\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(anchor_format(x));\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n            .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", self.colorizer['category'](x));\n\n          offset += 18;\n        });\n\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(\"missing\");\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n          .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", _networkMissingColor);\n\n        offset += 18;\n      } else {\n        _.each(self.colorizer['category_map'](null, 'map'), function(value, key) {\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(key);\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\").attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", self.colorizer['category'](key));\n\n          offset += 18;\n        });\n      }\n    }\n\n    if (self.node_shaper['id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Shape: \" + self.node_shaper['id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      var domain_range = check_for_predefined_shapes (self.node_shaper['id']);\n      var shape_mapper = d3.scale.ordinal().domain(domain_range['domain']).range(domain_range['range']);\n\n      _.each(self.node_shaper['category_map'](null, 'map'), function(value, key) {\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(key);\n\n\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"path\")\n          .attr(\"transform\", \"translate(5,-5)\")\n          .attr(\"d\", misc.symbol(shape_mapper(value)).size(128))\n          .classed('legend', true)\n          .style('fill', 'none');\n\n        offset += 18;\n      });\n    }\n\n    if (self.colorizer['opacity_id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Opacity: \" + self.colorizer['opacity_id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      var anchor_format = graph_data[_networkGraphAttrbuteID][self.colorizer['opacity_id']]['type'] == \"Date\" ? _defaultDateViewFormatShort : d3.format(\",.4r\");\n      var scale = graph_data[_networkGraphAttrbuteID][self.colorizer['opacity_id']]['scale'];\n\n      _.each(_.range(_networkContinuousColorStops), function(value) {\n        var x = scale.invert(value);\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(anchor_format(x));\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n          .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", \"black\").style(\"opacity\", self.colorizer['opacity'](x));\n\n        offset += 18;\n      });\n\n      legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(\"missing\");\n      legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n        .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", \"black\").style(\"opacity\", _networkMissingOpacity);\n\n      offset += 18;\n    }\n  }\n\n  function compute_cluster_gradient(cluster, cat_id) {\n    if (cat_id) {\n      var id = \"hivtrace-cluster-gradient-\" + (self.gradient_id++);\n      var gradient = network_svg.selectAll(\"defs\").append(\"radialGradient\").attr(\"id\", id);\n      var values = _.map(cluster.children, function(node) {\n        var value = attribute_node_value_by_id(node, cat_id);\n        return value == _networkMissing ? Infinity : value;\n      }).sort(function(a, b) {\n        return (0 + a) - (0 + b);\n      });\n      var finite = _.filter(values, function(d) {\n        return d < Infinity;\n      });\n      var infinite = values.length - finite.length;\n\n\n      if (infinite) {\n        gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", _networkMissingColor);\n        gradient.append(\"stop\").attr(\"offset\", \"\" + (infinite / values.length * 100) + \"%\").attr(\"stop-color\", _networkMissingColor);\n      }\n\n\n      _.each(finite, function(value, index) {\n        gradient.append(\"stop\").attr(\"offset\", \"\" + ((1 + index + infinite) * 100) / values.length + \"%\").attr(\"stop-color\", self.colorizer['category'](value));\n      });\n      //gradient.append (\"stop\").attr (\"offset\", \"100%\").attr (\"stop-color\", self.colorizer['category'] (dom[1]));\n\n\n      return id;\n    }\n    return null;\n  }\n\n  function handle_attribute_opacity(cat_id) {\n    var set_attr = \"None\";\n\n    [\"#\" + button_bar_ui + \"_opacity\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Opacity: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    d3.select(\"#\" + button_bar_ui + \"_opacity_invert\").style(\"display\", set_attr == \"None\" ? \"none\" : \"inline\").classed(\"btn-active\", false).classed(\"btn-default\", true);\n\n\n\n    self.colorizer['opacity_id'] = cat_id;\n    if (cat_id) {\n      var scale = graph_data[_networkGraphAttrbuteID][cat_id]['scale'];\n      self.colorizer['opacity_scale'] = d3.scale.linear().domain([0, _networkContinuousColorStops - 1]).range([0.25, 1]);\n      self.colorizer['opacity'] = function(v) {\n        if (v == _networkMissing) {\n          return _networkMissingOpacity;\n        }\n        return self.colorizer['opacity_scale'](scale(v));\n      };\n    } else {\n      self.colorizer['opacity'] = null;\n      self.colorizer['opacity_scale'] = null;\n    }\n\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  function handle_attribute_continuous(cat_id) {\n    var set_attr = \"None\";\n\n    render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", null, null);\n    render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", null, null);\n\n    network_svg.selectAll(\"radialGradient\").remove();\n\n    self.clusters.forEach(function(the_cluster) {\n      delete the_cluster['binned_attributes'];\n      delete the_cluster[\"gradient\"]\n    });\n\n    [\"#\" + button_bar_ui + \"_attributes\", \"#\" + button_bar_ui + \"_attributes_cat\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Color: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    d3.select(\"#\" + button_bar_ui + \"_attributes_invert\").style(\"display\", set_attr == \"None\" ? \"none\" : \"inline\").classed(\"btn-active\", false).classed(\"btn-default\", true);\n\n    if (cat_id) {\n      //console.log (graph_data [_networkGraphAttrbuteID][cat_id]);\n\n\n      self.colorizer['category'] = _.wrap(d3.scale.linear().range([\"#fff7ec\", \"#fee8c8\", \"#fdd49e\", \"#fdbb84\", \"#fc8d59\", \"#ef6548\", \"#d7301f\", \"#b30000\", \"#7f0000\"]).domain(_.range(_networkContinuousColorStops)),\n        function(func, arg) {\n          return func(graph_data[_networkGraphAttrbuteID][cat_id]['scale'](arg));\n        }); //console.log (self.colorizer['category'].exponent ());\n\n      //console.log (self.colorizer['category'] (graph_data [_networkGraphAttrbuteID][cat_id]['value_range'][0]), self.colorizer['category'] (d['value_range'][1]));\n\n      self.colorizer['category_id'] = cat_id;\n      self.colorizer['continuous'] = true;\n      self.clusters.forEach(function(the_cluster) {\n        the_cluster[\"gradient\"] = compute_cluster_gradient(the_cluster, cat_id);\n      });\n\n\n      var points = [];\n\n      _.each(self.edges, function(e) {\n\n\n        var src = attribute_node_value_by_id(self.nodes[e.source], cat_id),\n          tgt = attribute_node_value_by_id(self.nodes[e.target], cat_id);\n\n        if (src != _networkMissing && tgt != _networkMissing) {\n          points.push({\n            x: src,\n            y: tgt,\n            title: self.nodes[e.source].id + \" (\" + src + \") -- \" + self.nodes[e.target].id + \" (\" + tgt + \")\"\n          });\n        }\n      });\n      d3.select(\"#\" + button_bar_ui + \"_aux_svg_holder_enclosed\").style(\"display\", null);\n\n      scatterPlot.scatterPlot(points, 400, 400, \"#\" + button_bar_ui + \"_aux_svg_holder\", {\n        x: \"Source\",\n        y: \"Target\"\n      }, graph_data[_networkGraphAttrbuteID][cat_id]['type'] == \"Date\");\n\n    } else {\n      self.colorizer['category'] = null;\n      self.colorizer['category_id'] = null;\n      self.colorizer['continuous'] = false;\n      self.colorizer['category_pairwise'] = null;\n      self.colorizer['category_map'] = null;\n    }\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n\n  }\n\n  function handle_attribute_categorical(cat_id) {\n\n    //console.log (cat_id, graph_data [_networkGraphAttrbuteID]);\n\n    var set_attr = \"None\";\n    d3.select(\"#\" + button_bar_ui + \"_attributes_invert\").style(\"display\", \"none\");\n\n    network_svg.selectAll(\"radialGradient\").remove();\n\n    [\"#\" + button_bar_ui + \"_attributes\", \"#\" + button_bar_ui + \"_attributes_cat\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Color: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    self.clusters.forEach(function(the_cluster) {\n      delete the_cluster[\"gradient\"];\n      the_cluster['binned_attributes'] = stratify(attribute_cluster_distribution(the_cluster, cat_id));\n    });\n\n\n    self.colorizer['continuous'] = false;\n\n    if (cat_id) {\n      if (cat_id in _networkPresetColorSchemes) {\n        var domain = [],\n          range = [];\n        _.each(_networkPresetColorSchemes[cat_id], function(value, key) {\n          domain.push(key);\n          range.push(value);\n        });\n        self.colorizer['category'] = d3.scale.ordinal().domain(domain).range(range);\n\n      } else {\n        if (graph_data[_networkGraphAttrbuteID][cat_id]['color_scale']) {\n          self.colorizer['category'] = graph_data[_networkGraphAttrbuteID][cat_id]['color_scale'](graph_data[_networkGraphAttrbuteID][cat_id]);\n        } else {\n\n\n          self.colorizer['category'] = d3.scale.ordinal().range(_networkCategorical);\n          var extended_range = _.clone(self.colorizer['category'].range());\n          extended_range.push(_networkMissingColor);\n\n          self.colorizer['category'].domain(_.range(_maximumValuesInCategories + 1));\n          self.colorizer['category'].range(extended_range);\n\n          if (graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order']) {\n            self.colorizer['category'] = _.wrap(self.colorizer['category'], function(func, arg) {\n              if (arg == _networkMissing) {\n                return func(_maximumValuesInCategories);\n              }\n              return func(graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order'][arg]);\n            });\n            //console.log (graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order']);\n          }\n\n        }\n      }\n      self.colorizer['category_id'] = cat_id;\n      self.colorizer['category_map'] = graph_data[_networkGraphAttrbuteID][cat_id]['value_map'];\n      //self.colorizer['category_map'][null] =  graph_data [_networkGraphAttrbuteID][cat_id]['range'];\n      self.colorizer['category_pairwise'] = attribute_pairwise_distribution(cat_id, graph_data[_networkGraphAttrbuteID][cat_id].dimension, self.colorizer['category_map']);\n\n\n\n      render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n      render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n    } else {\n      self.colorizer['category'] = null;\n      self.colorizer['category_id'] = null;\n      self.colorizer['category_pairwise'] = null;\n      self.colorizer['category_map'] = null;\n      render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", null, null);\n      render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", null, null);\n    }\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  self.filter_visibility = function() {\n    self.clusters.forEach(function(c) {\n      c.is_hidden = self.hide_unselected && !c.match_filter;\n    });\n    self.nodes.forEach(function(n) {\n      n.is_hidden = self.hide_unselected && !n.match_filter;\n    });\n  };\n\n\n  self.filter = function(conditions, skip_update) {\n\n    var anything_changed = false;\n\n\n    conditions = _.map(['re', 'distance'], function(cnd) {\n      return _.map(_.filter(conditions, function(v) {\n        return v.type == cnd;\n      }), function(v) {\n        return v.value;\n      });\n    });\n\n\n    if (conditions[1].length) {\n      self.nodes.forEach(function(n) {\n        n.length_filter = false;\n      });\n\n      _.each(self.edges, function(e) {\n        var did_match = _.some(conditions[1], function(d) {\n          return e.length <= d;\n        });\n\n        if (did_match) {\n          self.nodes[e.source].length_filter = true;\n          self.nodes[e.target].length_filter = true;\n        }\n      });\n    }\n\n\n    self.clusters.forEach(function(c) {\n      c.match_filter = 0;\n    });\n\n    self.nodes.forEach(function(n) {\n\n      var did_match = _.some(conditions[0], function(regexp) {\n        return regexp.test(n.id) || _.some(n[_networkNodeAttributeID], function(attr) {\n          return regexp.test(attr)\n        });\n      });\n\n      did_match = did_match || n.length_filter;\n\n      if (did_match != n.match_filter) {\n        n.match_filter = did_match;\n        anything_changed = true;\n      }\n\n      if (n.match_filter) {\n        n.parent.match_filter += 1;\n      }\n    });\n\n\n    if (anything_changed && !skip_update) {\n      if (self.hide_unselected) {\n        self.filter_visibility();\n      }\n\n      self.update(true);\n    }\n\n  }\n\n  self.is_empty = function () {\n    return self.cluster_sizes.length == 0;\n  }\n\n  self.update = function(soft, friction) {\n\n    self.needs_an_update = false;\n\n    if (friction) {\n      network_layout.friction(friction);\n    }\n    if (network_warning_tag) {\n      if (warning_string.length) {\n        d3.select(network_warning_tag).text(warning_string).style(\"display\", \"block\");\n        warning_string = \"\";\n      } else {\n        d3.select(network_warning_tag).style(\"display\", \"none\");\n      }\n    }\n\n    var rendered_nodes,\n      rendered_clusters,\n      link;\n\n    if (!soft) {\n\n      var draw_me = prepare_data_to_graph();\n\n\n      network_layout.nodes(draw_me.all)\n        .links(draw_me.edges)\n        .start();\n\n      update_network_string(draw_me);\n\n      link = network_svg.selectAll(\".link\")\n        .data(draw_me.edges, function(d) {\n          return d.id;\n        });\n\n      link.enter().append(\"line\")\n        .classed(\"link\", true);\n      link.exit().remove();\n\n      link.classed(\"removed\", function(d) {\n          return d.removed;\n        })\n        .classed(\"unsupported\", function(d) {\n          return \"support\" in d && d[\"support\"] > 0.05;\n        })\n        .on(\"mouseover\", edge_pop_on)\n        .on(\"mouseout\", edge_pop_off)\n        .filter(function(d) {\n          return d.directed;\n        })\n        .attr(\"marker-end\", \"url(#arrowhead)\");\n\n\n      rendered_nodes = network_svg.selectAll('.node')\n        .data(draw_me.nodes, function(d) {\n          return d.id;\n        });\n      rendered_nodes.exit().remove();\n      rendered_nodes.enter().append(\"path\");\n\n      rendered_clusters = network_svg.selectAll(\".cluster-group\").\n      data(draw_me.clusters.map(function(d) {\n        return d;\n      }), function(d) {\n        return d.cluster_id;\n      });\n\n      rendered_clusters.exit().remove();\n      rendered_clusters.enter().append(\"g\").attr(\"class\", \"cluster-group\")\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        })\n        .on(\"click\", handle_cluster_click)\n        .on(\"mouseover\", cluster_pop_on)\n        .on(\"mouseout\", cluster_pop_off)\n        .call(network_layout.drag().on(\"dragstart\", cluster_pop_off));\n\n      draw_cluster_table();\n      draw_node_table();\n\n    } else {\n      rendered_nodes = network_svg.selectAll('.node');\n      rendered_clusters = network_svg.selectAll(\".cluster-group\");\n      link = network_svg.selectAll(\".link\");\n    }\n\n    rendered_nodes.each(function(d) {\n      draw_a_node(this, d);\n    });\n\n    rendered_clusters.each(function(d) {\n      draw_a_cluster(this, d);\n    });\n\n    link.style(\"opacity\", function(d) {\n      return Math.max(node_opacity(d.target), node_opacity(d.source))\n    })\n    link.style(\"display\", function(d) {\n      if (d.target.is_hidden || d.source.is_hidden) {\n        return 'none'\n      };\n      return null;\n    })\n\n    if (!soft) {\n      currently_displayed_objects = rendered_clusters[0].length + rendered_nodes[0].length;\n\n      network_layout.on(\"tick\", function() {\n        var sizes = network_layout.size();\n\n        rendered_nodes.attr(\"transform\", function(d) {\n          return \"translate(\" + (d.x = Math.max(d.rendered_size, Math.min(sizes[0] - d.rendered_size, d.x))) + \",\" + (d.y = Math.max(d.rendered_size, Math.min(sizes[1] - d.rendered_size, d.y))) + \")\";\n        });\n        rendered_clusters.attr(\"transform\", function(d) {\n          return \"translate(\" + (d.x = Math.max(d.rendered_size, Math.min(sizes[0] - d.rendered_size, d.x))) + \",\" + (d.y = Math.max(d.rendered_size, Math.min(sizes[1] - d.rendered_size, d.y))) + \")\";\n        });\n\n        link.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n      });\n    } else {\n      link.each(function(d) {\n        d3.select(this).attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          })\n      });\n    }\n  }\n\n  function tick() {\n    var sizes = network_layout.size();\n\n    node.attr(\"cx\", function(d) {\n        return d.x = Math.max(10, Math.min(sizes[0] - 10, d.x));\n      })\n      .attr(\"cy\", function(d) {\n        return d.y = Math.max(10, Math.min(sizes[1] - 10, d.y));\n      });\n\n    link.attr(\"x1\", function(d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function(d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function(d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function(d) {\n        return d.target.y;\n      });\n\n  }\n\n  /*------------ Node Methods ---------------*/\n  function compute_node_degrees(nodes, edges) {\n    for (var n in nodes) {\n      nodes[n].degree = 0;\n    }\n\n    for (var e in edges) {\n      nodes[edges[e].source].degree++;\n      nodes[edges[e].target].degree++;\n    }\n  }\n\n\n  function attribute_node_value_by_id(d, id) {\n    if (_networkNodeAttributeID in d && id) {\n      if (id in d[_networkNodeAttributeID]) {\n        var v = d[_networkNodeAttributeID][id];\n\n        if (_.isString(v) && v.length == 0) {\n          return _networkMissing;\n        }\n        return v;\n      }\n    }\n    return _networkMissing;\n  }\n\n  function inject_attribute_node_value_by_id(d, id, value) {\n    if (_networkNodeAttributeID in d && id) {\n      d[_networkNodeAttributeID][id] = value;\n    }\n  }\n\n  function node_size(d) {\n    var r = 5 + Math.sqrt(d.degree); //return (d.match_filter ? 10 : 4)*r*r;\n    return 4 * r * r;\n  }\n\n  function node_color(d) {\n\n    /*if (d.match_filter) {\n        return \"white\";\n    }*/\n\n    if (self.colorizer['category_id']) {\n      var v = attribute_node_value_by_id(d, self.colorizer['category_id']);\n      if (self.colorizer['continuous']) {\n        if (v == _networkMissing) {\n          return _networkMissingColor;\n        }\n        //console.log (v, self.colorizer['category'](v));\n      }\n      return self.colorizer['category'](v);\n\n    }\n    return d.hxb2_linked ? \"black\" : (d.is_lanl ? \"red\" : \"gray\");\n  }\n\n  function node_opacity(d) {\n    if (self.colorizer['opacity']) {\n      return self.colorizer['opacity'](attribute_node_value_by_id(d, self.colorizer['opacity_id']));\n    }\n    return 1.;\n  }\n\n  function cluster_color(d, type) {\n    if (d[\"binned_attributes\"]) {\n      return self.colorizer['category'](type);\n    }\n    return \"#bdbdbd\";\n  }\n\n  function hxb2_node_color(d) {\n    return \"black\";\n  }\n\n  function node_info_string(n) {\n    var str;\n\n    if (!self._is_CDC_) {\n      str = \"Degree <em>\" + n.degree + \"</em><br>Clustering coefficient <em> \" + misc.format_value(n.lcc, _defaultFloatFormat) + \"</em>\";\n    } else {\n      str = \"# links <em>\" + n.degree + \"</em>\";\n    }\n\n    _.each(_.union(self._additional_node_pop_fields, [self.colorizer['category_id'], self.node_shaper['id'], self.colorizer['opacity_id']]),\n      function(key) {\n        if (key) {\n          if (key in graph_data[_networkGraphAttrbuteID]) {\n            var attribute = attribute_node_value_by_id(n, key);\n\n            if (graph_data[_networkGraphAttrbuteID][key]['type'] == \"Date\") {\n              try {\n                attribute = _defaultDateViewFormat(attribute);\n              } catch (err) {\n\n              }\n            }\n            if (attribute) {\n              str += \"<br>\" + key + \" <em>\" + attribute + \"</em>\"\n            }\n          }\n\n        }\n      });\n\n\n    return str;\n  }\n\n  function edge_info_string(n) {\n    var str = \"Length <em>\" + _defaultFloatFormat(n.length) + \"</em>\";\n    if (\"support\" in n) {\n      str += \"<br>Worst triangle-based support (p): <em>\" + _defaultFloatFormat(n.support) + \"</em>\";\n    }\n\n    var attribute = attribute_node_value_by_id(n, self.colorizer['category_id']);\n\n    return str;\n  }\n\n  function node_pop_on(d) {\n    toggle_tooltip(this, true, (self._is_CDC_ ? \"Individual \" : \"Node \") + d.id, node_info_string(d), self.container);\n  }\n\n  function node_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n  function edge_pop_on(e) {\n    toggle_tooltip(this, true, e.source.id + \" - \" + e.target.id, edge_info_string(e), self.container);\n  }\n\n  function edge_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n\n  /*------------ Cluster Methods ---------------*/\n\n  function compute_cluster_centroids(clusters) {\n    for (var c in clusters) {\n      var cls = clusters[c];\n      cls.x = 0.;\n      cls.y = 0.;\n      cls.children.forEach(function(x) {\n        cls.x += x.x;\n        cls.y += x.y;\n      });\n      cls.x /= cls.children.length;\n      cls.y /= cls.children.length;\n    }\n  }\n\n  function collapse_cluster(x, keep_in_q) {\n    self.needs_an_update = true;\n    x.collapsed = true;\n    currently_displayed_objects -= self.cluster_sizes[x.cluster_id - 1] - 1;\n    if (!keep_in_q) {\n      var idx = open_cluster_queue.indexOf(x.cluster_id);\n      if (idx >= 0) {\n        open_cluster_queue.splice(idx, 1);\n      }\n    }\n    compute_cluster_centroids([x]);\n    return x.children.length;\n  }\n\n  function expand_cluster(x, copy_coord) {\n    self.needs_an_update = true;\n    x.collapsed = false;\n    currently_displayed_objects += self.cluster_sizes[x.cluster_id - 1] - 1;\n    open_cluster_queue.push(x.cluster_id);\n    if (copy_coord) {\n      x.children.forEach(function(n) {\n        n.x = x.x + (Math.random() - 0.5) * x.children.length;\n        n.y = x.y + (Math.random() - 0.5) * x.children.length;\n      });\n    } else {\n      x.children.forEach(function(n) {\n        n.x = self.width * 0.25 + (Math.random() - 0.5) * x.children.length;\n        n.y = 0.25 * self.height + (Math.random() - 0.5) * x.children.length;\n      })\n    }\n  }\n\n  function render_binned_table(id, the_map, matrix) {\n\n    var the_table = d3.select(id);\n\n    the_table.selectAll(\"thead\").remove();\n    the_table.selectAll(\"tbody\").remove();\n\n    d3.select(id + \"_enclosed\").style(\"display\", matrix ? null : \"none\");\n\n    if (matrix) {\n\n      var fill = self.colorizer['category'];\n      var lookup = the_map(null, 'lookup');\n\n\n      var headers = the_table.append(\"thead\").append(\"tr\")\n        .selectAll(\"th\").data([\"\"].concat(matrix[0].map(function(d, i) {\n          return lookup[i];\n        })));\n\n      headers.enter().append(\"th\");\n      headers.html(function(d) {\n        return \"<span>&nbsp;\" + d + \"</span>\";\n      }).each(\n        function(d, i) {\n          if (i) {\n            d3.select(this).insert(\"i\", \":first-child\")\n              .classed(\"fa fa-circle\", true)\n              .style(\"color\", function() {\n                return fill(d);\n              });\n          }\n        }\n      );\n\n      if (self.show_percent_in_pairwise_table) {\n        var sum = _.map(matrix, function(row) {\n          return _.reduce(row, function(p, c) {\n            return p + c;\n          }, 0);\n        });\n\n        matrix = _.map(matrix, function(row, row_index) {\n          return _.map(row, function(c) {\n            return c / sum[row_index];\n          });\n        });\n      }\n\n\n\n\n      var rows = the_table.append(\"tbody\").selectAll(\"tr\").data(matrix.map(function(d, i) {\n        return [lookup[i]].concat(d);\n      }));\n\n      rows.enter().append(\"tr\");\n      rows.selectAll(\"td\").data(function(d) {\n        return d\n      }).enter().append(\"td\").html(function(d, i) {\n        return i == 0 ? (\"<span>&nbsp;\" + d + \"</span>\") : (self.show_percent_in_pairwise_table ? _defaultPercentFormat(d) : d);\n      }).each(function(d, i) {\n        if (i == 0) {\n          d3.select(this).insert(\"i\", \":first-child\")\n            .classed(\"fa fa-circle\", true)\n            .style(\"color\", function() {\n              return fill(d);\n            });\n        }\n\n      });\n\n\n\n    }\n  }\n\n  function render_chord_diagram(id, the_map, matrix) {\n\n    d3.select(id).selectAll(\"svg\").remove();\n\n    d3.select(id + \"_enclosed\").style(\"display\", matrix ? null : \"none\");\n\n    if (matrix) {\n\n      var lookup = the_map(null, 'lookup');\n\n\n      var svg = d3.select(id).append(\"svg\");\n\n\n      var chord = d3.layout.chord()\n        .padding(.05)\n        .sortSubgroups(d3.descending)\n        .matrix(matrix);\n\n      var text_offset = 20,\n        width = 450,\n        height = 450,\n        innerRadius = Math.min(width, height - text_offset) * .41,\n        outerRadius = innerRadius * 1.1;\n\n      var fill = self.colorizer['category'],\n        font_size = 12;\n\n      var text_label = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height - text_offset) + \")\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", font_size)\n        .text(\"\");\n\n      svg = svg.attr(\"width\", width)\n        .attr(\"height\", height - text_offset)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height - text_offset) / 2 + \")\");\n\n\n      svg.append(\"g\").selectAll(\"path\")\n        .data(chord.groups)\n        .enter().append(\"path\")\n        .style(\"fill\", function(d) {\n          return fill(lookup[d.index]);\n        })\n        .style(\"stroke\", function(d) {\n          return fill(lookup[d.index]);\n        })\n        .attr(\"d\", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))\n        .on(\"mouseover\", fade(0.1, true))\n        .on(\"mouseout\", fade(1, false));\n\n      svg.append(\"g\")\n        .attr(\"class\", \"chord\")\n        .selectAll(\"path\")\n        .data(chord.chords)\n        .enter().append(\"path\")\n        .attr(\"d\", d3.svg.chord().radius(innerRadius))\n        .style(\"fill\", function(d) {\n          return fill(d.target.index);\n        })\n        .style(\"opacity\", 1);\n\n      // Returns an event handler for fading a given chord group.\n      function fade(opacity, t) {\n        return function(g, i) {\n          text_label.text(t ? lookup[i] : \"\");\n          svg.selectAll(\".chord path\")\n            .filter(function(d) {\n              return d.source.index != i && d.target.index != i;\n            })\n            .transition()\n            .style(\"opacity\", opacity);\n        };\n      }\n    }\n  }\n\n  function attribute_pairwise_distribution(id, dim, the_map, only_expanded) {\n    var scan_from = only_expanded ? draw_me.edges : self.edges;\n    var the_matrix = [];\n    for (var i = 0; i < dim; i += 1) {\n      the_matrix.push([]);\n      for (var j = 0; j < dim; j += 1) {\n        the_matrix[i].push(0);\n      }\n    }\n\n\n    _.each(scan_from,\n      function(edge) {\n        //console.log (attribute_node_value_by_id(self.nodes[edge.source], id), attribute_node_value_by_id(self.nodes[edge.target], id));\n        the_matrix[the_map(attribute_node_value_by_id(self.nodes[edge.source], id))][the_map(attribute_node_value_by_id(self.nodes[edge.target], id))] += 1;\n      });\n    // check if there are null values\n\n    var haz_null = the_matrix.some(function(d, i) {\n      if (i == dim - 1) {\n        return d.some(function(d2) {\n          return d2 > 0;\n        });\n      }\n      return d[dim - 1] > 0;\n    });\n    if (!haz_null) {\n      the_matrix.pop();\n      for (i = 0; i < dim - 1; i += 1) {\n        the_matrix[i].pop();\n      }\n    }\n\n    // symmetrize the matrix\n\n    dim = the_matrix.length;\n\n    for (i = 0; i < dim; i += 1) {\n      for (j = i; j < dim; j += 1) {\n        the_matrix[i][j] += the_matrix[j][i];\n        the_matrix[j][i] = the_matrix[i][j];\n      }\n    }\n\n    return the_matrix;\n  }\n\n  function attribute_cluster_distribution(the_cluster, attribute_id) {\n    if (attribute_id && the_cluster) {\n      return the_cluster.children.map(function(d) {\n        return attribute_node_value_by_id(d, attribute_id);\n      });\n    }\n    return null;\n  }\n\n  function cluster_info_string(id) {\n    var the_cluster = self.clusters[self.cluster_mapping[id]],\n      attr_info = the_cluster[\"binned_attributes\"];\n\n    var str;\n\n    if (self._is_CDC_) {\n      str = \"<strong>\" + self.cluster_sizes[id - 1] + \"</strong> individuals.\" +\n        \"<br>Mean links/individual <em> = \" + _defaultFloatFormat(the_cluster.degrees['mean']) + \"</em>\" +\n        \"<br>Max links/individual <em> = \" + the_cluster.degrees['max'] + \"</em>\";\n    } else {\n      str = \"<strong>\" + self.cluster_sizes[id - 1] + \"</strong> nodes.\" +\n        \"<br>Mean degree <em>\" + _defaultFloatFormat(the_cluster.degrees['mean']) + \"</em>\" +\n        \"<br>Max degree <em>\" + the_cluster.degrees['max'] + \"</em>\" +\n        \"<br>Clustering coefficient <em> \" + misc.format_value(the_cluster.cc, _defaultFloatFormat) + \"</em>\";\n    }\n\n    if (attr_info) {\n      attr_info.forEach(function(d) {\n        str += \"<br>\" + d[0] + \" <em>\" + d[1] + \"</em>\"\n      });\n    }\n\n    return str;\n  }\n\n  function cluster_pop_on(d) {\n    toggle_tooltip(this, true, \"Cluster \" + d.cluster_id, cluster_info_string(d.cluster_id), self.container);\n  }\n\n  function cluster_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n  function expand_cluster_handler(d, do_update, move_out) {\n    if (d.collapsed) {\n      var new_nodes = self.cluster_sizes[d.cluster_id - 1] - 1;\n\n      if (new_nodes > max_points_to_render) {\n        warning_string = \"This cluster is too large to be displayed\";\n      } else {\n        var leftover = new_nodes + currently_displayed_objects - max_points_to_render;\n        if (leftover > 0) {\n          for (k = 0; k < open_cluster_queue.length && leftover > 0; k++) {\n            var cluster = self.clusters[self.cluster_mapping[open_cluster_queue[k]]];\n            leftover -= cluster.children.length - 1;\n            collapse_cluster(cluster, true);\n          }\n          if (k || open_cluster_queue.length) {\n            open_cluster_queue.splice(0, k);\n          }\n        }\n\n        if (leftover <= 0) {\n          expand_cluster(d, !move_out);\n        }\n      }\n\n      if (do_update) {\n        self.update(false, 0.6);\n      }\n    }\n    return \"\";\n  }\n\n  function collapse_cluster_handler(d, do_update) {\n    collapse_cluster(self.clusters[self.cluster_mapping[d.cluster]]);\n    if (do_update) {\n      self.update(false, 0.4);\n    }\n\n  }\n\n\n  function center_cluster_handler(d) {\n    d.x = self.width / 2;\n    d.y = self.height / 2;\n    self.update(false, 0.4);\n  }\n\n  function cluster_box_size(c) {\n    return 8 * Math.sqrt(c.children.length);\n  }\n\n  self.expand_some_clusters = function(subset) {\n    subset = subset || self.clusters;\n    subset.forEach(function(x) {\n      if (!x.is_hidden) {\n        expand_cluster_handler(x, false);\n      }\n    });\n    self.update();\n  }\n\n  self.select_some_clusters = function(condition) {\n    return self.clusters.filter(function(c, i) {\n      return _.some(c.children, (function(n) {\n        return condition(n);\n      }));\n    });\n  }\n\n  self.collapse_some_clusters = function(subset) {\n    subset = subset || self.clusters;\n    subset.forEach(function(x) {\n      if (!x.collapsed) collapse_cluster(x);\n    });\n    self.update();\n  }\n\n  self.toggle_hxb2 = function() {\n    self.hide_hxb2 = !self.hide_hxb2;\n    self.update();\n  }\n\n  $('#reset_layout').click(function(e) {\n    default_layout(clusters, nodes);\n    self.update();\n    e.preventDefault(); // prevent the default anchor functionality\n  });\n\n  function stratify(array) {\n    if (array) {\n      var dict = {},\n        stratified = [];\n\n      array.forEach(function(d) {\n        if (d in dict) {\n          dict[d] += 1;\n        } else {\n          dict[d] = 1;\n        }\n      });\n      for (var uv in dict) {\n        stratified.push([uv, dict[uv]]);\n      }\n      return stratified.sort(function(a, b) {\n        return a[0] - b[0];\n      });\n    }\n    return array;\n  }\n\n  /*------------ Event Functions ---------------*/\n  function toggle_tooltip(element, turn_on, title, tag, container) {\n    //if (d3.event.defaultPrevented) return;\n\n    if (turn_on && !element.tooltip) {\n\n      // check to see if there are any other tooltips shown\n      ($(\"[role='tooltip']\")).each(function(d) {\n        $(this).remove();\n      });\n\n      var this_box = $(element);\n      var this_data = d3.select(element).datum();\n      element.tooltip = this_box.tooltip({\n        title: title + \"<br>\" + tag,\n        html: true,\n        container: container ? container : 'body',\n      });\n\n      //this_data.fixed = true;\n\n      _.delay(_.bind(element.tooltip.tooltip, element.tooltip), 500, 'show');\n    } else {\n      if (turn_on == false && element.tooltip) {\n        element.tooltip.tooltip('destroy');\n        element.tooltip = undefined;\n      }\n    }\n  }\n\n  /*------------ Init code ---------------*/\n\n\n\n  var \n    l_scale = 5000, // link scale\n    graph_data = self.json, // the raw JSON network object\n    max_points_to_render = 1024,\n    warning_string = \"\",\n    singletons = 0,\n    open_cluster_queue = [],\n    currently_displayed_objects,\n    gravity_scale = d3.scale.pow().exponent(0.5).domain([1, 100000]).range([0.1, 0.15]);\n\n  /*------------ D3 globals and SVG elements ---------------*/\n\n  var network_layout = d3.layout.force()\n    .on(\"tick\", tick)\n    .charge(function(d) {\n      if (d.cluster_id) return self.charge_correction * (-20 - 5 * Math.pow(d.children.length, 0.7));\n      return self.charge_correction * (-5 - 20 * Math.sqrt(d.degree));\n    })\n    .linkDistance(function(d) {\n      return Math.max(d.length, 0.005) * l_scale;\n    })\n    .linkStrength(function(d) {\n      if (d.support !== undefined) {\n        return 2 * (0.5 - d.support);\n      }\n      return 1;\n    })\n    .chargeDistance(l_scale * 0.25)\n    .gravity(gravity_scale(json.Nodes.length))\n    .friction(0.25);\n\n  d3.select(self.container).selectAll(\".my_progress\").style(\"display\", \"none\");\n  d3.select(self.container).selectAll(\"svg\").remove();\n  self.node_table.selectAll(\"*\").remove();\n  self.cluster_table.selectAll(\"*\").remove();\n\n  var network_svg = d3.select(self.container).append(\"svg:svg\")\n    //.style (\"border\", \"solid black 1px\")\n    .attr(\"id\", \"network-svg\")\n    .attr(\"width\", self.width + self.margin.left + self.margin.right)\n    .attr(\"height\", self.height + self.margin.top + self.margin.bottom);\n\n  //.append(\"g\")\n  // .attr(\"transform\", \"translate(\" + self.margin.left + \",\" + self.margin.top + \")\");\n\n  var legend_svg = network_svg.append(\"g\").attr(\"transform\", \"translate(5,5)\");\n\n  network_svg.append(\"defs\").append(\"marker\")\n    .attr(\"id\", \"arrowhead\")\n    .attr(\"refX\", 9) /* there must be a smarter way to calculate shift*/\n    .attr(\"refY\", 2)\n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 4)\n    .attr(\"orient\", \"auto\")\n    .attr(\"stroke\", \"#666666\")\n    .attr(\"fill\", \"#AAAAAA\")\n    .append(\"path\")\n    .attr(\"d\", \"M 0,0 V 4 L6,2 Z\"); //this is actual shape for arrowhead\n\n\n  change_window_size();\n\n  initial_json_load();\n\n  d3.select(self.container).selectAll(\".my_progress\").style(\"display\", \"none\");\n\n  if (options) {\n    if (_.isNumber(options[\"charge\"])) {\n      self.charge_correction = options[\"charge\"];\n    }\n\n    if (\"colorizer\" in options) {\n      self.colorizer = options[\"colorizer\"];\n    }\n\n    if (\"node_shaper\" in options) {\n      self.node_shaper = options[\"node_shaper\"];\n    }\n\n    draw_attribute_labels();\n    network_layout.start();\n\n    if (_.isArray(options[\"expand\"])) {\n      self.expand_some_clusters(_.filter(self.clusters, function(c) {\n        return options[\"expand\"].indexOf(c.cluster_id) >= 0;\n      }));\n    }\n  }\n  return self;\n}\n\n\n\nvar hivtrace_cluster_graph_summary = function(graph, tag) {\n\n  var summary_table = d3.select(tag);\n\n  summary_table = d3.select(tag).select(\"tbody\");\n  if (summary_table.empty()) {\n    summary_table = d3.select(tag).append(\"tbody\");\n  }\n\n\n  var table_data = [];\n\n  if (!summary_table.empty()) {\n    _.each(graph[\"Network Summary\"], function(value, key) {\n      if (self._is_CDC_ && key == \"Edges\") {\n        key = \"Links\";\n      }\n      if (_.isNumber (value)) {\n        table_data.push([key, value]);\n      }\n    });\n  }\n\n  var degrees = [];\n  _.each(graph[\"Degrees\"][\"Distribution\"], function(value, index) {\n    for (var k = 0; k < value; k++) {\n      degrees.push(index + 1);\n    }\n  });\n  degrees = helpers.describe_vector(degrees);\n  table_data.push(['Links/node', '']);\n  table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultFloatFormat(degrees['mean'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultFloatFormat(degrees['median'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Range</i>', degrees['min'] + \" - \" + degrees['max']]);\n  table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', degrees['Q1'] + \" - \" + degrees['Q3']]);\n\n  degrees = helpers.describe_vector(graph[\"Cluster sizes\"]);\n  table_data.push(['Cluster sizes', '']);\n  table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultFloatFormat(degrees['mean'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultFloatFormat(degrees['median'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Range</i>', degrees['min'] + \" - \" + degrees['max']]);\n  table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', degrees['Q1'] + \" - \" + degrees['Q3']]);\n\n  if (self._is_CDC_) {\n    degrees = helpers.describe_vector(_.map(graph[\"Edges\"], function(e) {\n      return e.length;\n    }));\n    table_data.push(['Genetic distances (links only)', '']);\n    table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultPercentFormat(degrees['mean'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultPercentFormat(degrees['median'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Range</i>', _defaultPercentFormat(degrees['min']) + \" - \" + _defaultPercentFormat(degrees['max'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', _defaultPercentFormat(degrees['Q1']) + \" - \" + _defaultPercentFormat(degrees['Q3'])]);\n  }\n\n\n  var rows = summary_table.selectAll(\"tr\").data(table_data);\n  rows.enter().append(\"tr\");\n  rows.exit().remove();\n  var columns = rows.selectAll(\"td\").data(function(d) {\n    return d;\n  });\n  columns.enter().append(\"td\");\n  columns.exit();\n  columns.html(function(d) {\n    return d\n  });\n}\n\nmodule.exports.clusterNetwork = hivtrace_cluster_network_graph;\nmodule.exports.graphSummary = hivtrace_cluster_graph_summary;\n\n\n\n// WEBPACK FOOTER //\n// ./src/clusternetwork.js","var d3 = require('d3'),\n  _ = require('underscore'),\n  helpers = require('./helpers.js');\n\nfunction hivtrace_cluster_adjacency_list(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n  var adjacency_list = {};\n\n  edges.forEach(function(e, i) {\n\n    function in_nodes(n, id) {\n      return n.id == id;\n    }\n\n    var seq_ids = e[\"sequences\"];\n\n    var n1 = nodes.filter(function(n) {\n        return in_nodes(n, seq_ids[0]);\n      })[0],\n      n2 = nodes.filter(function(n) {\n        return in_nodes(n, seq_ids[1]);\n      })[0];\n\n    adjacency_list[n1.id] ? adjacency_list[n1.id].push(n2) : adjacency_list[n1.id] = [n2];\n    adjacency_list[n2.id] ? adjacency_list[n2.id].push(n1) : adjacency_list[n2.id] = [n1];\n\n  });\n\n  return adjacency_list;\n\n}\n\nvar hivtrace_generate_svg_polygon_lookup = {};\n\n_.each(_.range(3, 20), function(d) {\n  var angle_step = Math.PI * 2 / d;\n  hivtrace_generate_svg_polygon_lookup[d] = _.map(_.range(1, d), function(i) {\n    return [Math.cos(angle_step * i), Math.sin(angle_step * i)];\n  });\n});\n\nfunction hivtrace_generate_svg_symbol(type) {\n\n\n  switch (type) {\n    case 'circle':\n    case 'cross':\n    case 'diamond':\n    case 'square':\n    case 'triangle-down':\n    case 'triangle-up':\n      return d3.svg.symbol().type(type);\n    case 'triangle':\n      return new hivtrace_generate_svg_polygon().sides(3);\n    case 'pentagon':\n      return new hivtrace_generate_svg_polygon().sides(5);\n    case 'hexagon':\n      return new hivtrace_generate_svg_polygon().sides(6);\n    case 'septagon':\n      return new hivtrace_generate_svg_polygon().sides(7);\n    case 'octagon':\n      return new hivtrace_generate_svg_polygon().sides(8);\n    case 'ellipse' :\n      return new hivtrace_generate_svg_ellipse();\n  }\n  //console.log (type);\n  return d3.svg.symbol().type('circle');\n}\n\nvar hivtrace_generate_svg_ellipse = function () {\n\n  var self = this;\n\n  self.ellipse = function() {\n\n    var path = \"M \" + self.radius  + \" 0 A \" + self.radius * 1  + \" \" + self.radius * 0.75 + \" 0 1 0 \" +  self.radius  + \" 0.00001\"\n    return path;\n\n  };\n\n  self.ellipse.type = function() {\n    return self.ellipse;\n  };\n\n  self.ellipse.size = function(attr) {\n\n    if (_.isNumber(attr)) {\n      self.size = attr;\n      self.radius = Math.sqrt(1.25 * attr / Math.PI);\n      return self.ellipse;\n    }\n\n    return self.size;\n\n  };\n\n  self.ellipse.size(64);\n\n  return self.ellipse;\n}\n\nvar hivtrace_generate_svg_polygon = function() {\n\n  var self = this;\n\n  self.polygon = function() {\n\n    var path = \" M\" + self.radius + \" 0\";\n\n    if (self.sides in hivtrace_generate_svg_polygon_lookup) {\n      path += hivtrace_generate_svg_polygon_lookup[self.sides].map(function(value) {\n        return \" L\" + self.radius * value[0] + \" \" + self.radius * value[1];\n      }).join(\" \");\n    } else {\n      var angle_step = Math.PI * 2 / self.sides,\n        current_angle = 0;\n      for (i = 0; i < self.sides - 1; i++) {\n        current_angle += angle_step;\n        path += \" L\" + self.radius * Math.cos(current_angle) + \" \" + self.radius * Math.sin(current_angle);\n      }\n    }\n\n    path += \" Z\";\n    return path;\n  };\n\n  self.polygon.sides = function(attr) {\n\n    if (_.isNumber(attr) && attr > 2) {\n      self.sides = attr;\n      return self.polygon;\n    }\n\n    return self.sides;\n\n  };\n\n  self.polygon.type = function() {\n    return self.polygon;\n  };\n\n  self.polygon.size = function(attr) {\n\n    if (_.isNumber(attr)) {\n      self.size = attr;\n      self.radius = Math.sqrt(attr / Math.PI);\n      return self.polygon;\n    }\n\n    return self.size;\n\n  };\n\n  self.polygon.size(64);\n  self.sides = 6;\n\n  return self.polygon;\n\n};\n\nfunction hivtrace_new_cluster_adjacency_list(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n\n  nodes.forEach(function(n) {\n    n.neighbors = d3.set();\n  });\n\n  edges.forEach(function(e) {\n    nodes[e.source].neighbors.add(e.target);\n    nodes[e.target].neighbors.add(e.source);\n  });\n\n}\n\n// Reconstructs path from floyd-warshall algorithm\nfunction hivtrace_get_path(next, i, j) {\n\n  var all_paths = [];\n  i = parseInt(i);\n  j = parseInt(j);\n\n  for (var c = 0; c < next[i][j].length; c++) {\n\n    var k = next[i][j][c];\n    var intermediate = k;\n\n    if (intermediate === null || intermediate == i) {\n      return [\n        [parseInt(i), parseInt(j)]\n      ];\n    } else {\n\n      var paths_i_k = hivtrace_get_path(next, i, intermediate);\n      var paths_k_j = hivtrace_get_path(next, intermediate, j);\n\n      for (var i_k_index = 0; i_k_index < paths_i_k.length; i_k_index++) {\n        var i_k = paths_i_k[i_k_index];\n        for (var k_j_index = 0; k_j_index < paths_k_j.length; k_j_index++) {\n          var k_j = paths_k_j[k_j_index];\n          if (i_k.length) {\n            if ((i_k[0] == i) && (i_k[i_k.length - 1] == k) && (k_j[0] == k) && (k_j[k_j.length - 1] == j)) {\n              i_k.pop();\n              all_paths.push(i_k.concat(k_j));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return all_paths;\n\n}\n\nfunction hivtrace_paths_with_node(node, next, i, j) {\n\n  var paths = hivtrace_get_path(next, i, j);\n\n  // Retrieve intermediary paths\n  paths = paths.map(function(sublist) {\n    return sublist.slice(1, -1);\n  });\n\n  if (!paths) {\n    return 0;\n  }\n\n  var num_nodes = [];\n\n  for (var k = 0; i < paths.length; k++) {\n    sublist = paths[k];\n    num_nodes.push(d3.sum(sublist.map(function(n) {\n      return n == node;\n    })));\n  }\n\n  var mean = d3.mean(num_nodes);\n\n  if (mean === undefined) {\n    mean = 0;\n  }\n\n  return mean;\n\n}\n\n\n// Same as compute shortest paths, but with an additional next parameter for reconstruction\nfunction hivtrace_compute_shortest_paths_with_reconstruction(obj, subset, use_actual_distances) {\n\n  // Floyd-Warshall implementation\n  var distances = [];\n  var next = [];\n  var nodes = obj.Nodes;\n  var edges = obj.Edges;\n  var node_ids = [];\n\n  var adjacency_list = hivtrace_cluster_adjacency_list(obj);\n\n  if (!subset) {\n    subset = Object.keys(adjacency_list);\n  }\n\n  var node_count = subset.length;\n\n  for (var i = 0; i < subset.length; i++) {\n    var a_node = subset[i];\n    var empty_arr = _.range(node_count).map(function(d) {\n      return null;\n    });\n    var zeroes = _.range(node_count).map(function(d) {\n      return null;\n    });\n    distances.push(zeroes);\n    next.push(empty_arr);\n  }\n\n  for (var index = 0; index < subset.length; index++) {\n    var a_node = subset[index];\n    for (var index2 = 0; index2 < subset.length; index2++) {\n      var second_node = subset[index2];\n      if (second_node != a_node) {\n        if (adjacency_list[a_node].map(function(n) {\n            return n.id;\n          }).indexOf(second_node) != -1) {\n          distances[index][index2] = 1;\n          distances[index2][index] = 1;\n        }\n      }\n    }\n  }\n\n  for (var index_i = 0; index_i < subset.length; index_i++) {\n    var n_i = subset[index_i];\n    for (var index_j = 0; index_j < subset.length; index_j++) {\n      var n_j = subset[index_j];\n      if (index_i == index_j) {\n        next[index_i][index_j] = [];\n      } else {\n        next[index_i][index_j] = [index_i];\n      }\n    }\n  }\n\n  // clone distances\n  var distances2 = _.map(distances, _.clone);\n  var c = 0;\n\n  for (var index_k = 0; index_k < subset.length; index_k++) {\n    var n_k = subset[index_k];\n    for (var index_i = 0; index_i < subset.length; index_i++) {\n      var n_i = subset[index_i];\n      for (var index_j = 0; index_j < subset.length; index_j++) {\n        var n_j = subset[index_j];\n\n        if (n_i != n_j) {\n\n          d_ik = distances[index_k][index_i];\n          d_jk = distances[index_k][index_j];\n          d_ij = distances[index_i][index_j];\n\n          if (d_ik !== null && d_jk !== null) {\n            d_ik += d_jk;\n            if (d_ij === null || (d_ij > d_ik)) {\n              distances2[index_i][index_j] = d_ik;\n              distances2[index_j][index_i] = d_ik;\n              next[index_i][index_j] = [];\n              next[index_i][index_j] = next[index_i][index_j].concat(next[index_k][index_j]);\n              continue;\n            } else if (d_ij == d_ik) {\n              next[index_i][index_j] = next[index_i][index_j].concat(next[index_k][index_j]);\n            }\n          }\n          c++;\n          distances2[index_j][index_i] = distances[index_j][index_i];\n          distances2[index_i][index_j] = distances[index_i][index_j];\n        }\n      }\n    }\n\n    var t = distances2;\n    distances2 = distances;\n    distances = t;\n\n  }\n\n  return {\n    'ordering': subset,\n    'distances': distances,\n    'next': next\n  };\n\n}\n\nfunction hivtrace_filter_to_node_in_cluster(node, obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges,\n    cluster_id = null;\n\n  // Retrieve nodes that are part of the cluster\n  var node_obj = nodes.filter(function(n) {\n    return node == n.id;\n  });\n\n  if (node_obj) {\n    cluster_id = node_obj[0].cluster;\n  } else {\n    console.log('could not find node');\n    return null;\n  }\n\n  // Filter out all edges and nodes that belong to the cluster\n  var nodes_in_cluster = nodes.filter(function(n) {\n    return cluster_id == n.cluster;\n  });\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n  var edges_in_cluster = edges.filter(function(e) {\n    return node_ids.indexOf(e.sequences[0]) != -1;\n  });\n\n  var filtered_obj = {};\n  filtered_obj[\"Nodes\"] = nodes_in_cluster;\n  filtered_obj[\"Edges\"] = edges_in_cluster;\n  return filtered_obj;\n\n}\n\nfunction hivtrace_compute_betweenness_centrality_all_nodes_in_cluster(cluster, obj, cb) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n\n  var nodes_in_cluster = nodes.filter(function(n) {\n    return cluster == n.cluster;\n  });\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n  var edges_in_cluster = edges.filter(function(e) {\n    return node_ids.indexOf(e.sequences[0]) != -1;\n  });\n\n  var filtered_obj = {};\n  filtered_obj[\"Nodes\"] = nodes_in_cluster;\n  filtered_obj[\"Edges\"] = edges_in_cluster;\n\n  // get length of cluster\n  if (nodes_in_cluster.length > 70) {\n    cb('cluster too large', null);\n    return;\n  }\n\n  // get paths\n  var paths = hivtrace_compute_shortest_paths_with_reconstruction(filtered_obj);\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n\n  var betweenness = {};\n  nodes_in_cluster.forEach(function(n) {\n    betweenness[n.id] = hivtrace_compute_betweenness_centrality(n.id, filtered_obj, paths);\n  });\n\n  cb(null, betweenness);\n  return;\n\n}\n\n// Returns dictionary of nodes' betweenness centrality\n// Utilizes the Floyd-Warshall Algorithm with reconstruction\nfunction hivtrace_compute_betweenness_centrality(node, obj, paths) {\n\n  if (!paths) {\n    var filtered_obj = hivtrace_filter_to_node_in_cluster(node, obj);\n    paths = hivtrace_compute_shortest_paths_with_reconstruction(filtered_obj);\n  }\n\n  // find index of id\n  var index = paths.ordering.indexOf(node);\n\n  if (index == -1) {\n    return null;\n  }\n\n  var length = paths.distances.length;\n\n  if (length != 2) {\n    scale = 1 / ((length - 1) * (length - 2));\n  } else {\n    scale = 1;\n  }\n\n\n  // If s->t goes through 1, add to sum\n  // Reconstruct each shortest path and check if node is in it\n  var paths_with_node = [];\n  for (var i in _.range(length)) {\n    for (var j in _.range(length)) {\n      paths_with_node.push(hivtrace_paths_with_node(index, paths.next, i, j));\n    }\n  }\n\n  return d3.sum(paths_with_node) * scale;\n\n}\n\n\nfunction hivtrace_compute_node_degrees(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n  for (var n in nodes) {\n    nodes[n].degree = 0;\n  }\n\n  for (var e in edges) {\n    nodes[edges[e].source].degree++;\n    nodes[edges[e].target].degree++;\n  }\n\n}\n\nfunction hivtrace_get_node_by_id(id, obj) {\n  return obj.Nodes.filter(function(n) {\n    return id == n.id;\n  })[0] || undefined;\n}\n\nfunction hivtrace_compute_cluster_betweenness(obj, callback) {\n\n  var nodes = obj.Nodes;\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  // Get all unique clusters\n  var clusters = nodes.map(function(n) {\n    return n.cluster;\n  });\n  var unique_clusters = clusters.filter(onlyUnique);\n\n  var cb_count = 0;\n\n  function cb(err, results) {\n\n    cb_count++;\n\n    for (var node in results) {\n      hivtrace_get_node_by_id(node, obj)['betweenness'] = results[node];\n    }\n\n    if (cb_count >= unique_clusters.length) {\n      callback('done');\n    }\n\n  }\n\n  // Compute betweenness in parallel\n  unique_clusters.forEach(function(cluster_id) {\n    hivtrace_betweenness_centrality_all_nodes_in_cluster(cluster_id, obj, cb);\n  });\n\n  // once all settled callback\n\n}\n\n\nfunction hivtrace_is_contaminant(node) {\n  return node.attributes.indexOf('problematic') != -1;\n}\n\nfunction hivtrace_convert_to_csv(obj, callback) {\n  //Translate nodes to rows, and then use d3.format\n  hivtrace_compute_node_degrees(obj);\n\n  hivtrace_compute_cluster_betweenness(obj, function(err) {\n    var node_array = obj.Nodes.map(function(d) {\n      return [d.id, d.cluster, d.degree, d.betweenness, hivtrace_is_contaminant(d), d.attributes.join(';')];\n    });\n    node_array.unshift(['seqid', 'cluster', 'degree', 'betweenness', 'is_contaminant', 'attributes']);\n    node_csv = d3.csv.format(node_array);\n    callback(null, node_csv);\n  });\n}\n\nfunction hivtrace_export_csv_button(graph, tag) {\n\n  var data = hivtrace_convert_to_csv(graph, function(err, data) {\n    if (data !== null) {\n      var pom = document.createElement('a');\n      pom.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(data));\n      pom.setAttribute('download', 'export.csv');\n      pom.className = 'btn btn-default btn-sm';\n      pom.innerHTML = '<span class=\"glyphicon glyphicon-floppy-save\"></span> Export Results';\n      $(tag).append(pom);\n    }\n  });\n\n}\n\nfunction hiv_trace_export_table_to_text(parent_id, table_id, sep) {\n\n  var the_button = d3.select(parent_id);\n  the_button.selectAll(\"[data-type='download-button']\").remove();\n\n  the_button = the_button.append(\"a\")\n    .attr(\"target\", \"_blank\")\n    .attr(\"data-type\", \"download-button\")\n    .on(\"click\", function(data, element) {\n      d3.event.preventDefault();\n      var table_tag = d3.select(this).attr(\"data-table\");\n      var table_text = helpers.table_to_text(table_tag);\n      helpers.export_handler(table_text, table_tag.substring(1) + \".tsv\", \"text/tab-separated-values\");\n    })\n    .attr(\"data-table\", table_id);\n\n  the_button.append(\"i\").classed(\"fa fa-download fa-2x\", true);\n  return the_button;\n\n}\n\nvar hivtrace_compute_local_clustering_coefficients = _.once(function(obj) {\n\n  hivtrace_new_cluster_adjacency_list(obj);\n\n  var nodes = obj.Nodes;\n\n  nodes.forEach(function(n) {\n\n    var a_node = n;\n    var neighborhood_size = a_node.neighbors.size();\n\n    if (neighborhood_size < 2) {\n      a_node.lcc = undefined;\n    } else {\n\n      if (neighborhood_size > 500) {\n        a_node.lcc = hivtrace_too_large;\n      } else {\n        // count triangles\n        neighborhood = a_node.neighbors.values();\n        counter = 0;\n        for (n1 = 0; n1 < neighborhood_size; n1 += 1) {\n          for (n2 = n1 + 1; n2 < neighborhood_size; n2 += 1) {\n            if (nodes[neighborhood[n1]].neighbors.has(neighborhood[n2])) {\n              counter++;\n            }\n          }\n        }\n        a_node.lcc = 2 * counter / neighborhood_size / (neighborhood_size - 1);\n      }\n    }\n\n  });\n\n});\n\nfunction hivtrace_render_settings(settings, explanations) {\n  // TODO:\n  //d3.json (explanations, function (error, expl) {\n  //    //console.log (settings);\n  //});\n}\n\nfunction hivtrace_format_value(value, formatter) {\n\n  if (typeof value === 'undefined') {\n    return \"Not computed\";\n  }\n  if (value === hivtrace_undefined) {\n    return \"Undefined\";\n  }\n  if (value === hivtrace_too_large) {\n    return \"Size limit\";\n  }\n\n  if (value === hivtrace_processing) {\n    return '<span class=\"fa fa-spin fa-spinner\"></span>';\n  }\n\n  return formatter ? formatter(value) : value;\n\n}\n\nmodule.exports.compute_node_degrees = hivtrace_compute_node_degrees;\nmodule.exports.export_csv_button = hivtrace_export_csv_button;\nmodule.exports.convert_to_csv = hivtrace_convert_to_csv;\nmodule.exports.betweenness_centrality = hivtrace_compute_betweenness_centrality;\nmodule.exports.betweenness_centrality_all_nodes_in_cluster = hivtrace_compute_betweenness_centrality_all_nodes_in_cluster;\nmodule.exports.cluster_adjacency_list = hivtrace_cluster_adjacency_list;\nmodule.exports.new_cluster_adjacency_list = hivtrace_new_cluster_adjacency_list;\nmodule.exports.analysis_settings = hivtrace_render_settings;\nmodule.exports.export_table_to_text = hiv_trace_export_table_to_text;\nmodule.exports.compute_local_clustering = hivtrace_compute_local_clustering_coefficients;\nmodule.exports.undefined = {};\nmodule.exports.too_large = {};\nmodule.exports.processing = {};\nmodule.exports.format_value = hivtrace_format_value;\nmodule.exports.polygon = hivtrace_generate_svg_polygon;\nmodule.exports.symbol = hivtrace_generate_svg_symbol;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc.js","var download = require('downloadjs');\n\nvar datamonkey_error_modal = function(msg) {\n  $('#modal-error-msg').text(msg);\n  $('#errorModal').modal();\n};\n\nfunction b64toBlob(b64, onsuccess, onerror) {\n  var img = new Image();\n\n  img.onerror = onerror;\n\n  img.onload = function onload() {\n    var canvas = document.getElementById(\"hyphy-chart-canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    var ctx = canvas.getContext('2d');\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n    if(canvas.msToBlob) {\n      var blob = canvas.msToBlob(onsuccess);\n      onsuccess(blob);\n      window.navigator.msSaveBlob(blob, 'image.png');\n    } else {\n      canvas.toBlob(onsuccess);\n    }\n  };\n\n  img.src = b64;\n}\n\nvar datamonkey_export_csv_button = function(data) {\n  data = d3.csv.format(data);\n  if (data !== null) {\n    var pom = document.createElement('a');\n    pom.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(data));\n    pom.setAttribute('download', 'export.csv');\n    pom.className = 'btn btn-default btn-sm';\n    pom.innerHTML = '<span class=\"glyphicon glyphicon-floppy-save\"></span> Download CSV';\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n};\n\nvar datamonkey_save_image = function(type, container) {\n\n  var prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\"\n  };\n\n  function get_styles(doc) {\n\n    function process_stylesheet(ss) {\n      try {\n        if (ss.cssRules) {\n          for (var i = 0; i < ss.cssRules.length; i++) {\n            var rule = ss.cssRules[i];\n            if (rule.type === 3) {\n              // Import Rule\n              process_stylesheet(rule.styleSheet);\n            } else {\n              // hack for illustrator crashing on descendent selectors\n              if (rule.selectorText) {\n                if (rule.selectorText.indexOf(\">\") === -1) {\n                  styles += \"\\n\" + rule.cssText;\n                }\n              }\n            }\n          }\n        }\n      } catch (e) {\n        console.log('Could not process stylesheet : ' + ss);\n      }\n    }\n\n    var styles = \"\",\n      styleSheets = doc.styleSheets;\n\n    if (styleSheets) {\n      for (var i = 0; i < styleSheets.length; i++) {\n        process_stylesheet(styleSheets[i]);\n      }\n    }\n\n    return styles;\n\n  }\n\n  var convert_svg_to_png = function(image_string) {\n\n    var image = document.getElementById(\"hyphy-chart-image\");\n\n    image.onload = function() {\n\n      var canvas = document.getElementById(\"hyphy-chart-canvas\");\n      canvas.width = image.width;\n      canvas.height = image.height;\n      var context = canvas.getContext(\"2d\");\n      context.fillStyle = \"#FFFFFF\";\n      context.fillRect(0, 0, image.width, image.height);\n      context.drawImage(image, 0, 0);\n      var img = canvas.toDataURL(\"image/png\");\n      var pom = document.createElement('a');\n      pom.setAttribute('download', 'image.png');\n      pom.href = canvas.toDataURL(\"image/png\");\n      $(\"body\").append(pom);\n      pom.click();\n      pom.remove();\n\n    };\n\n    image.src = image_string;\n\n  };\n\n  var svg = $(container).find(\"svg\")[0];\n  if (!svg) {\n    svg = $(container)[0];\n  }\n\n  var styles = get_styles(window.document);\n\n  svg.setAttribute(\"version\", \"1.1\");\n\n  var defsEl = document.createElement(\"defs\");\n  svg.insertBefore(defsEl, svg.firstChild);\n\n  var styleEl = document.createElement(\"style\");\n  defsEl.appendChild(styleEl);\n  styleEl.setAttribute(\"type\", \"text/css\");\n\n\n  // removing attributes so they aren't doubled up\n  svg.removeAttribute(\"xmlns\");\n  svg.removeAttribute(\"xlink\");\n\n  // These are needed for the svg\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n  }\n\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n  }\n\n  var source = (new XMLSerializer()).serializeToString(svg).replace('</style>', '<![CDATA[' + styles + ']]></style>');\n  var rect = svg.getBoundingClientRect();\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n  var to_download = [doctype + source];\n  var image_string = 'data:image/svg+xml;base66,' + encodeURIComponent(to_download);\n\n  if (navigator.msSaveBlob) { // IE10\n    download(image_string, \"image.svg\", \"image/svg+xml\");\n  } else if (type == \"png\") {\n    b64toBlob(image_string,\n      function(blob) {\n        var url = window.URL.createObjectURL(blob);\n        var pom = document.createElement('a');\n        pom.setAttribute('download', 'image.png');\n        pom.setAttribute('href', url);\n        $(\"body\").append(pom);\n        pom.click();\n        pom.remove();\n      },\n      function(error) {\n        console.log(error);\n      });\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'image.svg');\n    pom.setAttribute('href', image_string);\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n\n};\n\nvar datamonkey_validate_date = function() {\n\n  // Check that it is not empty\n  if ($(this).val().length === 0) {\n    $(this).next('.help-block').remove();\n    $(this).parent().removeClass('has-success');\n    $(this).parent().addClass('has-error');\n\n    jQuery('<span/>', {\n      class: 'help-block',\n      text: 'Field is empty'\n    }).insertAfter($(this));\n\n  } else if (isNaN(Date.parse($(this).val()))) {\n    $(this).next('.help-block').remove();\n    $(this).parent().removeClass('has-success');\n    $(this).parent().addClass('has-error');\n\n    jQuery('<span/>', {\n      class: 'help-block',\n      text: 'Date format should be in the format YYYY-mm-dd'\n    }).insertAfter($(this));\n\n  } else {\n    $(this).parent().removeClass('has-error');\n    $(this).parent().addClass('has-success');\n    $(this).next('.help-block').remove();\n  }\n\n};\n\nfunction datamonkey_get_styles(doc) {\n  var styles = \"\",\n    styleSheets = doc.styleSheets;\n\n  if (styleSheets) {\n    for (var i = 0; i < styleSheets.length; i++) {\n      processStyleSheet(styleSheets[i]);\n    }\n  }\n\n  function processStyleSheet(ss) {\n    if (ss.cssRules) {\n      for (var i = 0; i < ss.cssRules.length; i++) {\n        var rule = ss.cssRules[i];\n        if (rule.type === 3) {\n          // Import Rule\n          processStyleSheet(rule.styleSheet);\n        } else {\n          // hack for illustrator crashing on descendent selectors\n          if (rule.selectorText) {\n            if (rule.selectorText.indexOf(\">\") === -1) {\n              styles += \"\\n\" + rule.cssText;\n            }\n          }\n        }\n      }\n    }\n  }\n  return styles;\n}\n\nfunction datamonkey_save_newick_to_file() {\n  var top_modal_container = \"#neighbor-tree-modal\";\n  var nwk = $(top_modal_container).data(\"tree\");\n  var pom = document.createElement('a');\n  pom.setAttribute('href', 'data:text/octet-stream;charset=utf-8,' + encodeURIComponent(nwk));\n  pom.setAttribute('download', 'nwk.txt');\n  $(\"body\").append(pom);\n  pom.click();\n  pom.remove();\n}\n\nfunction datamonkey_convert_svg_to_png(image_string) {\n  var image = document.getElementById(\"image\");\n  image.src = image_string;\n\n  image.onload = function() {\n    var canvas = document.getElementById(\"canvas\");\n    canvas.width = image.width;\n    canvas.height = image.height;\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = \"#FFFFFF\";\n    context.fillRect(0, 0, image.width, image.height);\n    context.drawImage(image, 0, 0);\n    var img = canvas.toDataURL(\"image/png\");\n\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'phylotree.png');\n    pom.href = canvas.toDataURL(\"image/png\");\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n}\n\nfunction datamonkey_save_newick_tree(type) {\n\n  var prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\"\n  }\n\n  var tree_container = \"#tree_container\";\n  var svg = $(\"#tree_container\").find(\"svg\")[0];\n  var styles = datamonkey_get_styles(window.document);\n\n  svg.setAttribute(\"version\", \"1.1\");\n\n  var defsEl = document.createElement(\"defs\");\n  svg.insertBefore(defsEl, svg.firstChild);\n\n  var styleEl = document.createElement(\"style\");\n  defsEl.appendChild(styleEl);\n  styleEl.setAttribute(\"type\", \"text/css\");\n\n\n  // removing attributes so they aren't doubled up\n  svg.removeAttribute(\"xmlns\");\n  svg.removeAttribute(\"xlink\");\n\n  // These are needed for the svg\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n  }\n\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n  }\n\n  var source = (new XMLSerializer()).serializeToString(svg).replace('</style>', '<![CDATA[' + styles + ']]></style>');\n  var rect = svg.getBoundingClientRect();\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n  var to_download = [doctype + source]\n  var image_string = 'data:image/svg+xml;base66,' + encodeURIComponent(to_download);\n\n  if (type == \"png\") {\n    datamonkey_convert_svg_to_png(image_string)\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'phylotree.svg');\n    pom.setAttribute('href', image_string);\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n\n}\n\nfunction datamonkey_validate_email(email) {\n  if ($(this).find(\"input[name='receive_mail']\")[0].checked) {\n    var regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (regex.test($(this).find(\"input[name='mail']\").val())) {\n      // Give them green. They like that.\n      $(this).removeClass('has-error');\n      $(this).addClass('has-success');\n      $(this).next('.help-block').remove();\n    } else {\n      $(this).next('.help-block').remove();\n      $(this).removeClass('has-error');\n      $(this).removeClass('has-success');\n      $(this).addClass('has-error');\n      var span = jQuery('<span/>', {\n        class: 'help-block col-lg-9 pull-right',\n        text: 'Invalid Email'\n      }).insertAfter($(this));\n    }\n  } else {\n    $(this).removeClass('has-error');\n    $(this).removeClass('has-success');\n    $(this).next('.help-block').remove();\n  }\n\n}\n\nfunction datamonkey_describe_vector(vector, as_list) {\n\n  var d = {};\n\n  if (vector.length) {\n\n      vector.sort(d3.ascending);\n\n      var d = {\n        'min': d3.min(vector),\n        'max': d3.max(vector),\n        'median': d3.median(vector),\n        'Q1': d3.quantile(vector, 0.25),\n        'Q3': d3.quantile(vector, 0.75),\n        'mean': d3.mean(vector)\n      };\n   } else {\n      var d = {\n        'min': null,\n        'max': null,\n        'median': null,\n        'Q1': null,\n        'Q3': null,\n        'mean': null\n      };\n\n   }\n\n  if (as_list) {\n\n    d = \"<pre>Range  :\" + d['min'] + \"-\" + d['max'] + \"\\n\" + \"IQR    :\" + d['Q1'] + \"-\" + d['Q3'] + \"\\n\" + \"Mean   :\" + d['mean'] + \"\\n\" + \"Median :\" + d['median'] + \"\\n\" + \"</pre>\";\n\n    /*d =\n    \"<dl class = 'dl-horizontal'>\" +\n    \"<dt>Range</dt><dd>\" + d['min'] + \"-\" + d['max'] + \"</dd>\" +\n    \"<dt>IQR</dt><dd>\" + d['Q1'] + \"-\" + d['Q3'] +  \"</dd>\" +\n    \"<dt>Mean</dt><dd>\" + d['mean'] +  \"</dd>\" +\n    \"<dt>Median</dt><dd>\" + d['median'] + \"</dd></dl>\";*/\n  }\n\n  return d;\n\n}\n\nfunction datamonkey_export_handler(data, filename, mimeType) {\n\n  function msieversion() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n      return true;\n    }\n    return false;\n  }\n\n  if (msieversion()) {\n    var IEwindow = window.open();\n    IEwindow.document.write(data);\n    IEwindow.document.close();\n    IEwindow.document.execCommand('SaveAs', true, filename + \".csv\");\n    IEwindow.close();\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('href', 'data:' + (mimeType || 'text/plain') + ';charset=utf-8,' + encodeURIComponent(data));\n    pom.setAttribute('download', filename || \"download.tsv\");\n    pom.click();\n    pom.remove();\n  }\n\n}\n\nfunction datamonkey_table_to_text(table_id, sep) {\n  sep = sep || \"\\t\";\n  var header_row = [];\n  d3.select(table_id + \" thead\").selectAll(\"th\").each(function() {\n    header_row.push(d3.select(this).text())\n  });\n  var data_rows = [];\n  d3.select(table_id + \" tbody\").selectAll(\"tr\").each(function(d, i) {\n    data_rows.push([]);\n    d3.select(this).selectAll(\"td\").each(function() {\n      data_rows[i].push(d3.select(this).text())\n    })\n  });\n\n  return header_row.join(sep) + \"\\n\" +\n    data_rows.map(function(d) {\n      return d.join(sep);\n    }).join(\"\\n\");\n}\n\nfunction datamonkey_capitalize(s) {\n  if (s.length > 0) {\n    return s[0].toUpperCase() + s.slice(1);\n  } else {\n    return s;\n  }\n}\n\nfunction datamonkey_count_partitions(json) {\n  try {\n    return _.keys(json).length;\n  } catch (e) {\n    // ignore errors\n  }\n  return 0;\n}\n\nfunction datamonkey_sum(object, accessor) {\n  accessor = accessor || function(value) {\n    return value;\n  };\n  return _.reduce(object, function(sum, value, index) {\n    return sum + accessor(value, index);\n  }, 0);\n}\n\nfunction datamonkey_count_sites_from_partitions(json) {\n  try {\n    return datamonkey_sum(json[\"partitions\"], function(value) {\n      return value[\"coverage\"][0].length;\n    });\n  } catch (e) {\n    // ignore errors\n  }\n  return 0;\n}\n\nfunction datamonkey_filter_list(list, predicate, context) {\n  var result = {};\n  predicate = _.bind(predicate, context);\n  _.each(list, _.bind(function(value, key) {\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }, context));\n  return result;\n}\n\nfunction datamonkey_map_list(list, transform, context) {\n  var result = {};\n  transform = _.bind(transform, context);\n  _.each(list, _.bind(function(value, key) {\n    result[key] = transform(value, key);\n  }, context));\n  return result;\n}\n\nmodule.exports.errorModal = datamonkey_error_modal;\nmodule.exports.export_csv_button = datamonkey_export_csv_button;\nmodule.exports.save_image = datamonkey_save_image;\nmodule.exports.validate_date = datamonkey_validate_date;\n\nmodule.exports.save_newick_to_file = datamonkey_save_newick_to_file;\nmodule.exports.convert_svg_to_png = datamonkey_convert_svg_to_png;\nmodule.exports.save_newick_tree = datamonkey_save_newick_tree;\nmodule.exports.validate_email = datamonkey_validate_email;\nmodule.exports.describe_vector = datamonkey_describe_vector;\nmodule.exports.table_to_text = datamonkey_table_to_text;\nmodule.exports.export_handler = datamonkey_export_handler;\nmodule.exports.capitalize = datamonkey_capitalize;\nmodule.exports.countPartitionsJSON = datamonkey_count_partitions;\nmodule.exports.countSitesFromPartitionsJSON = datamonkey_count_sites_from_partitions;\nmodule.exports.sum = datamonkey_sum;\nmodule.exports.filter = datamonkey_filter_list;\nmodule.exports.map = datamonkey_map_list;\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers.js","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/downloadjs/download.js\n// module id = 45\n// module chunks = 0","var d3 = require('d3'),\n  _ = require('underscore');\n\nfunction hivtrace_render_scatterplot(points, w, h, id, labels, dates) {\n    var _defaultDateViewFormat = d3.time.format(\"%B %d, %Y\");\n    var _defaultFloatFormat = d3.format(\",.2r\");\n    var _defaultDateViewFormatShort = d3.time.format(\"%B %Y\");\n\n  var margin = {\n      top: 10,\n      right: 10,\n      bottom: 100,\n      left: 100\n    },\n    width = w - margin.left - margin.right,\n    height = h - margin.top - margin.bottom;\n\n\n  var x = (dates ? d3.time.scale() : d3.scale.linear())\n    .domain(d3.extent(points, function(p) {\n      return p.x;\n    }))\n    .range([0, width]);\n\n  var y = (dates ? d3.time.scale() : d3.scale.linear())\n    .domain(d3.extent(points, function(p) {\n      return p.y;\n    }))\n    .range([height, 0]);\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\").tickFormat(dates ? _defaultDateViewFormatShort : _defaultFloatFormat);\n\n  var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\").tickFormat(dates ? _defaultDateViewFormatShort : _defaultFloatFormat);\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (!histogram_svg.empty()) {\n    histogram_svg.remove();\n  }\n\n  histogram_svg = d3.select(id).append(\"svg\").attr(\"width\", w).attr(\"height\", h).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  points = histogram_svg.selectAll(\"circle\").data(points);\n  points.enter().append(\"circle\");\n\n  points.attr(\"cx\", function(d) {\n    return x(d.x);\n  }).attr(\"cy\", function(d) {\n    return y(d.y);\n  }).attr(\"r\", 3).classed(\"node scatter\", true);\n\n  points.each(function(d) {\n    if (\"title\" in d) {\n      d3.select(this).append(\"title\").text(d.title);\n    }\n  });\n\n  var x_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n\n  x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").attr(\"dx\", \"-.5em\").attr(\"dy\", \".25em\").style(\"text-anchor\", \"end\");\n  x_axis.append(\"text\").text(labels.x).attr(\"transform\", \"translate(\" + width + \",0)\").attr(\"dy\", \"-1em\").attr(\"text-anchor\", \"end\");\n\n  var y_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(0,\" + 0 + \")\")\n    .call(yAxis);\n\n  y_axis.selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").attr(\"dx\", \"-.5em\").attr(\"dy\", \".25em\").style(\"text-anchor\", \"end\");\n  y_axis.append(\"text\").text(labels.y).attr(\"transform\", \"rotate(-90)\").attr(\"dy\", \"1em\").attr(\"text-anchor\", \"end\");\n\n}\n\nmodule.exports.scatterPlot = hivtrace_render_scatterplot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/scatterplot.js","var d3 = require('d3'),\n  _ = require('underscore');\n\nfunction hivtrace_histogram(graph, histogram_tag, histogram_label) {\n\n  var defaultFloatFormat = d3.format(\",.2f\");\n  var histogram_w = 300,\n    histogram_h = 300;\n\n  hivtrace_render_histogram(graph[\"Degrees\"][\"Distribution\"],\n    graph[\"Degrees\"][\"fitted\"],\n    histogram_w,\n    histogram_h,\n    histogram_tag);\n\n  var label = \"Network degree distribution is best described by the <strong>\" + graph[\"Degrees\"][\"Model\"] + \"</strong> model, with &rho; of \" +\n    defaultFloatFormat(graph[\"Degrees\"][\"rho\"]);\n\n  if (graph[\"Degrees\"][\"rho CI\"] != undefined) {\n    label += \" (95% CI \" + defaultFloatFormat(graph[\"Degrees\"][\"rho CI\"][0]) + \" - \" + defaultFloatFormat(graph[\"Degrees\"][\"rho CI\"][1]) + \")\";\n  }\n\n  d3.select(histogram_label).html(label);\n}\n\nfunction hivtrace_histogram_distances(graph, histogram_tag, histogram_label) {\n\n  var defaultFloatFormat = d3.format(\",.3p\");\n  var histogram_w = 300,\n    histogram_h = 300;\n\n  var edge_lengths = _.map(graph[\"Edges\"], function(edge) {\n    return edge.length;\n  });\n\n\n  hivtrace_render_histogram_continuous(edge_lengths,\n    histogram_w,\n    histogram_h,\n    histogram_tag);\n\n  var label = \"Genetic distances among linked nodes.\";\n  d3.select(histogram_label).html(label);\n}\n\nfunction hivtrace_render_histogram_continuous(data, w, h, id) {\n\n  var margin = {\n      top: 10,\n      right: 30,\n      bottom: 50,\n      left: 10\n    },\n    width = w - margin.right,\n    height = h - margin.top - margin.bottom;\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (histogram_svg) {\n    histogram_svg.remove();\n  }\n\n  if (data.length > 0) {\n\n      var histogram_data = d3.layout.histogram()(data);\n    \n      var x = d3.scale.linear()\n        .domain(d3.extent(data));\n\n      var y = d3.scale.linear()\n        .domain([0, d3.max(_.map(histogram_data, function(b) {\n          return b.y\n        }))]).range([height, 0]);\n      \n      margin.left += 10*Math.ceil(Math.log10 (y.domain()[1]));\n      width -= margin.left;\n      x.range([0, width]);\n\n      console.log ();\n\n      var xAxis = d3.svg.axis()\n        .scale(x)\n        .orient(\"bottom\");\n\n      var yAxis = d3.svg.axis()\n        .scale(y)\n        .orient(\"left\");\n\n\n\n      histogram_data.splice(0, 0, {\n        'x': x.domain()[0],\n        'y': 0,\n        'dx': 0\n      });\n      histogram_data.splice(histogram_data.length, 0, {\n        'x': x.domain()[1],\n        'y': 0,\n        'dx': 0\n      });\n\n      histogram_svg = d3.select(id).insert(\"svg\", \".histogram-label\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        .datum(histogram_data);\n\n      var histogram_line = d3.svg.line()\n        .x(function(d) {\n          return x(d.x + d.dx);\n        })\n        .y(function(d) {\n          return y(d.y);\n        })\n        .interpolate(\"step-before\");\n\n      histogram_svg.selectAll(\"path\").remove();\n      histogram_svg.append(\"path\")\n        .attr(\"d\", function(d) {\n          return histogram_line(d) + \"Z\";\n        })\n        .attr(\"class\", \"histogram\");\n\n\n\n      var x_axis = histogram_svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis);\n\n      x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(45)\").attr(\"dx\", \"1em\").attr(\"dy\", \"0.5em\");\n\n      var y_axis = histogram_svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        //.attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(yAxis);\n    }\n\n}\n\nfunction hivtrace_render_histogram(counts, fit, w, h, id) {\n\n  var margin = {\n      top: 10,\n      right: 30,\n      bottom: 50,\n      left: 30\n    },\n    width = w - margin.left - margin.right,\n    height = h - margin.top - margin.bottom;\n\n  var x = d3.scale.linear()\n    .domain([0, counts.length + 1])\n    .range([0, width]);\n\n  var y = d3.scale.log()\n    .domain([1, d3.max(counts)])\n    .range([height, 0]);\n\n  var total = d3.sum(counts);\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (histogram_svg) {\n    histogram_svg.remove();\n  }\n\n  var data_to_plot = counts.map(function(d, i) {\n    return {\n      'x': i + 1,\n      'y': d + 1\n    };\n  });\n  data_to_plot.push({\n    'x': counts.length + 1,\n    'y': 1\n  });\n  data_to_plot.push({\n    'x': 0,\n    'y': 1\n  });\n  data_to_plot.push({\n    'x': 0,\n    'y': counts[0] + 1\n  });\n\n  histogram_svg = d3.select(id).insert(\"svg\", \".histogram-label\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .datum(data_to_plot);\n\n  var histogram_line = d3.svg.line()\n    .x(function(d) {\n      return x(d.x);\n    })\n    .y(function(d) {\n      return y(d.y);\n    })\n    .interpolate(\"step-before\");\n\n  histogram_svg.selectAll(\"path\").remove();\n  histogram_svg.append(\"path\")\n    .attr(\"d\", function(d) {\n      return histogram_line(d) + \"Z\";\n    })\n    .attr(\"class\", \"histogram\");\n\n\n\n  if (fit) {\n    var fit_line = d3.svg.line()\n      .interpolate(\"linear\")\n      .x(function(d, i) {\n        return x(i + 1) + (x(i + 1) - x(i)) / 2;\n      })\n      .y(function(d) {\n        return y(1 + d * total);\n      });\n    histogram_svg.append(\"path\").datum(fit)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {\n        return fit_line(d);\n      });\n  }\n\n  var x_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(45)\").attr(\"dx\", \"1em\").attr(\"dy\", \"0.5em\");\n}\n\nexports.histogram = hivtrace_histogram;\nexports.histogramDistances = hivtrace_histogram_distances;\n\n\n\n// WEBPACK FOOTER //\n// ./src/histogram.js"],"sourceRoot":""}