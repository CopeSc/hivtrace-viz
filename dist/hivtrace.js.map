{"version":3,"sources":["webpack:///./src/entry.js","webpack:///./~/font-awesome/css/font-awesome.css","webpack:///./src/hivtrace.css","webpack:///./~/hyphy-vision/dist/hyphyvision.js","webpack:///./src/hivtrace.js","webpack:///./~/bootstrap/dist/css/bootstrap.css","webpack:///./src/clusternetwork.js","webpack:///./src/misc.js","webpack:///./src/histogram.js","webpack:///./src/scatterplot.js","webpack:///./src/helpers.js"],"names":[],"mappings":"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;AAEA;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA,uBAAsB,2CAA2C;AACjE;AACA;AACA,2BAA0B,mBAAmB;AAC7C;AACA;AACA,+BAA8B,4CAA4C;AAC1E,+DAA8D,0HAA0H;AACxL;AACA;AACA;AACA;AACA,2BAA0B,gCAAgC;AAC1D;AACA;AACA,+BAA8B,+EAA+E;AAC7G;AACA;AACA,mCAAkC,mCAAmC;AACrE;AACA;AACA,uCAAsC,6BAA6B;AACnE;AACA;AACA,2CAA0C,2BAA2B;AACrE,oEAAmE,kCAAkC;AACrG;AACA;AACA;AACA;AACA;AACA,uCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD,+CAA8C;AAC9C;AACA;AACA;AACA,mDAAkD;AAClD;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,6EAA6E;AAC3G;AACA;AACA,mCAAkC,mCAAmC;AACrE;AACA;AACA,uCAAsC,6BAA6B;AACnE;AACA;AACA,2CAA0C,2BAA2B;AACrE,oEAAmE,2BAA2B;AAC9F;AACA;AACA;AACA;AACA;AACA,uCAAsC,0BAA0B;AAChE;AACA;AACA;AACA,qFAAoF,yCAAyC;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,yEAAyE;AACvG;AACA;AACA,mCAAkC,mCAAmC;AACrE;AACA;AACA,uCAAsC,6BAA6B;AACnE;AACA;AACA,2CAA0C,2BAA2B;AACrE,oEAAmE,6BAA6B;AAChG;AACA;AACA;AACA;AACA;AACA,uCAAsC,0BAA0B;AAChE;AACA;AACA;AACA,sFAAqF,sEAAsE;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,gDAAgD;AACtE;AACA;AACA,2BAA0B,mBAAmB;AAC7C;AACA;AACA,+BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,8CAA6C,wCAAwC;AACrF;AACA;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA,iDAAgD,WAAW;AAC3D;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C,sGAAqG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE3Q;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,mFAAkF,kBAAkB;AACpG;AACA;;AAEA,uGAAsG;AACtG;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mEAAkE;AAClE,8CAA6C;AAC7C,uBAAsB;AACtB,mBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAU;;AAEV;AACA;AACA;;AAEA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B,mBAAmB;AAC7C;AACA;AACA;;AAEA,mCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA,kBAAiB;AACjB,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB,SAAS;AAC/B;AACA,0EAAyE,yCAAyC;AAClH,uBAAsB;AACtB;AACA,eAAc;AACd;AACA;AACA,uBAAsB,SAAS;AAC/B,+DAA8D,+CAA+C;AAC7G;AACA;AACA;;AAEA,sDAAqD,SAAS;AAC9D,8DAA6D,6GAA6G;AAC1K,WAAU;;AAEV,+CAA8C,gCAAgC;AAC9E;AACA,GAAE;;AAEF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA4B,uCAAuC;AACnE;AACA,iCAAgC,gDAAgD,QAAQ,gDAAgD;AACxI,eAAc;AACd,WAAU;AACV;AACA,OAAM;;AAEN;AACA,uDAAsD,uGAAuG;AAC7J;;AAEA,GAAE;;AAEF;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA,gCAA+B;AAC/B,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA,mBAAkB;AAClB,eAAc;AACd;AACA;AACA,eAAc,MAAM;;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA,4CAA2C;AAC3C,kCAAiC,sBAAsB;;AAEvD;AACA,oDAAmD,mCAAmC;AACtF;AACA;AACA,oDAAmD,kCAAkC;AACrF;;AAEA;AACA;AACA;AACA,eAAc;AACd,WAAU;AACV,OAAM;;AAEN;AACA;AACA,+BAA8B,mBAAmB,wDAAwD,EAAE,WAAW,yBAAyB,KAAK;AACpJ,WAAU;AACV,sBAAqB,mBAAmB,qDAAqD;AAC7F,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA,eAAc,gCAAgC;AAC9C,oDAAmD,2DAA2D;AAC9G;AACA;AACA,GAAE;;AAEF;AACA;;;AAGA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,2EAA0E;AAC1E;AACA;AACA;;AAEA;;AAEA,4BAA2B,oBAAoB;AAC/C,sBAAqB,6CAA6C;AAClE,gDAA+C;AAC/C,yBAAwB;AACxB,mCAAkC;AAClC,oBAAmB;AACnB,sBAAqB;AACrB;AACA,uBAAsB,WAAW;AACjC;AACA;AACA,2EAA0E;AAC1E,gDAA+C;AAC/C,iCAAgC;AAChC;AACA;AACA,+EAA8E,sBAAsB;AACpG,eAAc;AACd,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,mBAAkB;AAClB;;AAEA,8BAA6B,qBAAqB,4BAA4B,EAAE;;AAEhF;;AAEA;;AAEA;AACA,oCAAmC,+CAA+C;AAClF,mBAAkB;AAClB;AACA;AACA,eAAc;;AAEd;AACA,WAAU;;AAEV,kBAAiB;AACjB;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA;AACA,eAAc;AACd,OAAM;;AAEN;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA,eAAc,gCAAgC;AAC9C,oDAAmD,2DAA2D;AAC9G;AACA;AACA,GAAE;;AAEF;AACA;;;AAGA;;AAEA;AACA;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA,4BAA2B;AAC3B,eAAc;AACd;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA,uDAAsD,2DAA2D;AACjH;AACA,GAAE;AACF,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C,OAAM;;AAEN;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;AACA,OAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gCAA+B,mDAAmD,sBAAsB,EAAE;AAC1G;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,WAAU;;AAEV;AACA,gCAA+B,kCAAkC;AACjE,eAAc;AACd;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA2C,gDAAgD;AAC3F,4CAA2C,2HAA2H;AACtK,4CAA2C,+HAA+H;AAC1K,4CAA2C,4HAA4H;;AAEvK,+CAA8C;AAC9C;AACA;AACA;AACA,+CAA8C,EAAE;AAChD,2BAA0B;AAC1B,4CAA2C,gDAAgD;AAC3F;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;;AAEA;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA,eAAc,gCAAgC;AAC9C;AACA;AACA,mBAAkB,mDAAmD;AACrE;AACA;AACA,uBAAsB,0BAA0B;AAChD;AACA;AACA,2BAA0B,yBAAyB;AACnD;AACA;AACA,+BAA8B,oJAAoJ;AAClL;AACA,2DAA0D,qBAAqB;AAC/E;AACA;AACA;AACA,+BAA8B,6BAA6B;AAC3D;AACA;AACA,mCAAkC,kBAAkB;AACpD;AACA;AACA,uCAAsC,wBAAwB;AAC9D,oEAAmE,kMAAkM;AACrQ;AACA;AACA;AACA;AACA;AACA,mCAAkC,mBAAmB;AACrD;AACA;AACA,uCAAsC,wBAAwB;AAC9D,oEAAmE,mIAAmI;AACtM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,2BAA2B;AACrD;AACA;AACA,+BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA,+BAA8B,4GAA4G;AAC1I;AACA;AACA;AACA,uCAAsC,2BAA2B;AACjE;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,oDAAmD,oGAAoG;AACvJ;;AAEA;AACA;AACA,GAAE;AACF,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;AACA;;AAEA;AACA;;;AAGA;;AAEA,oBAAmB;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAQ;AACR,OAAM;;AAEN;AACA;AACA;AACA,SAAQ;AACR,OAAM;;AAEN;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA,SAAQ,mCAAmC;AAC3C;AACA;AACA,WAAU,6BAA6B;AACvC;AACA;AACA,aAAY,2BAA2B;AACvC;AACA;AACA,eAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,0BAA0B;AACpC;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA,eAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,SAAS,sBAAsB,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,6CAA6C,0CAA0C,EAAE;AACzG;AACA;AACA,mBAAkB,4KAA4K;AAC9L,+CAA8C,qBAAqB;AACnE;AACA;AACA;AACA,mBAAkB,oEAAoE;AACtF;AACA;AACA;AACA;AACA;AACA,uBAAsB,YAAY;AAClC,oDAAmD,4GAA4G;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA,wCAAuC,wCAAwC;AAC/E;AACA;AACA;AACA,iBAAgB,wEAAwE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,uDAAsD;AACtD;;AAEA,oCAAmC;;AAEnC;AACA;AACA;;AAEA,8BAA6B;AAC7B,WAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;;AAEV;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA,mCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA,sBAAqB;AACrB;AACA,WAAU;AACV;AACA;AACA;AACA,OAAM;;AAEN;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA,SAAQ,2BAA2B;AACnC;AACA;AACA,WAAU,kDAAkD;AAC5D;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA,eAAc,4CAA4C;AAC1D,iEAAgE;AAChE,uCAAsC;AACtC;AACA;AACA;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA,eAAc,kDAAkD;AAChE,8DAA6D,wBAAwB;AACrF;AACA;AACA;AACA,eAAc,gDAAgD;AAC9D,0DAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA,WAAU,wCAAwC;AAClD,2CAA0C;AAC1C,2CAA0C;AAC1C;AACA;AACA;AACA,WAAU,yCAAyC;AACnD,0DAAyD;AACzD;AACA,iDAAgD;AAChD;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA,6CAA4C,WAAW;AACvD;;AAEA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA,uCAAsC;AACtC,OAAM;AACN;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA,SAAQ,0BAA0B;AAClC;AACA;AACA,WAAU,oDAAoD;AAC9D;AACA;AACA,aAAY,uCAAuC;AACnD,sCAAqC,0BAA0B;AAC/D;AACA;AACA,eAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iCAAiC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,4FAA4F;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA,oDAAmD,yCAAyC;AAC5F;;AAEA;AACA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,kDAAiD;;AAEjD;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA,SAAQ;AACR;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;;AAER,uBAAsB,wBAAwB;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,yBAAwB,0BAA0B;;AAElD;AACA;AACA;AACA,aAAY;;AAEZ;;AAEA,sDAAqD,8BAA8B;AACnF;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC,uCAAsC;AACtC,uCAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA,SAAQ,yBAAyB;AACjC;AACA;AACA,WAAU,0BAA0B;AACpC;AACA;AACA,aAAY,+BAA+B;AAC3C;AACA;AACA,eAAc,uCAAuC;AACrD,wCAAuC,8DAA8D;AACrG;AACA;AACA;AACA;AACA,eAAc,qGAAqG,GAAG;AACtH,4CAA2C,8BAA8B;AACzE,4CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA,iDAAgD,aAAa;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA,SAAQ,0BAA0B;AAClC;AACA;AACA,WAAU,+BAA+B;AACzC;AACA;AACA,aAAY,uCAAuC;AACnD,sCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA,aAAY,sEAAsE;AAClF,0CAAyC,4BAA4B;AACrE,0CAAyC,2BAA2B;AACpE;AACA;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mDAAkD,aAAa;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,kDAAiD;;AAEjD;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,eAAc;;AAEd;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;;AAEA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,OAAM;;AAEN;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc;;AAEd;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;;AAEA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;;AAEV;AACA,2DAA0D;AAC1D;AACA,+DAA8D;AAC9D;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA,eAAc;;AAEd;AACA,WAAU;;AAEV;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA,WAAU;;AAEV;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAU;;AAEV;AACA,OAAM;;AAEN;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;;AAEV;;AAEA;;AAEA;;AAEA;AACA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;;AAEA;AACA;AACA,eAAc;;AAEd;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AA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;AAEA;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,mDAAmD,EAAE;;AAEtG;AACA,OAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,WAAU;AACV,OAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,8DAA8D;AAC5E;AACA;AACA,mBAAkB,6BAA6B;AAC/C;AACA;AACA,uBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB;AAC/C;AACA;AACA,2BAA0B,4EAA4E;AACtG,uDAAsD,+CAA+C;AACrG;AACA;AACA;AACA;AACA,2BAA0B,4EAA4E;AACtG,uDAAsD,+CAA+C;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C,8CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA,GAAE;;AAEF;AACA,0DAAyD,uDAAuD;AAChH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA;;AAEA;;;AAGA,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;;AAEA;;AAEA,oCAAmC;AACnC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAgB,wBAAwB;;AAExC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAwB,OAAO;AAC/B;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN,kBAAiB;AACjB,OAAM;;AAEN;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN,kBAAiB;AACjB,OAAM;;AAEN;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;;AAEN,uEAAsE;AACtE;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,WAAU;AACV;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA;;AAEA,QAAO;;AAEP;AACA;;AAEA;;AAEA,QAAO;;AAEP;AACA;;AAEA,kDAAiD;;AAEjD;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,0BAA0B;AAC9C,kBAAiB,mDAAmD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC;AAClC;AACA,iBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,gBAAe;AACf,OAAM;;AAEN;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA,SAAQ,2BAA2B;AACnC;AACA;AACA,WAAU,kDAAkD;AAC5D;AACA;AACA,aAAY,iDAAiD;AAC7D;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA,iBAAgB,0BAA0B;AAC1C;AACA;AACA,mBAAkB,oDAAoD;AACtE;AACA;AACA,qBAAoB,uCAAuC;AAC3D,8CAA6C,2DAA2D;AACxG;AACA;AACA,uBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA,eAAc,iDAAiD;AAC/D,0DAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA,aAAY,oGAAoG;AAChH,yCAAwC,+CAA+C;AACvF;AACA;AACA;AACA;AACA,aAAY,oGAAoG;AAChH,yCAAwC,+CAA+C;AACvF;AACA;AACA;AACA;AACA,aAAY,2CAA2C;AACvD;AACA;AACA,eAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA,0CAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA,qBAAoB,oCAAoC;AACxD;AACA;AACA,gDAA+C,0HAA0H;AACzK;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA,qBAAoB,uCAAuC;AAC3D;AACA;AACA,gDAA+C,sHAAsH;AACrK;AACA;AACA;AACA;AACA,iBAAgB,2GAA2G;AAC3H,6CAA4C,+CAA+C;AAC3F;AACA;AACA;AACA;AACA,iBAAgB,iHAAiH;AACjI;AACA;AACA;AACA;AACA,iBAAgB,sDAAsD;AACtE;AACA;AACA;AACA;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,wCAAwC;AAClD;AACA;AACA,aAAY,yBAAyB;AACrC,6CAA4C;AAC5C,kDAAiD;AACjD;AACA;AACA;AACA,aAAY,yBAAyB;AACrC;AACA;AACA,eAAc,oDAAoD;AAClE,0DAAyD;AACzD,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,iDAAgD,WAAW;AAC3D;;AAEA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,+CAA8C;;AAE9C;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,SAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA,mCAAkC;;AAElC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,OAAM;;AAEN;AACA,KAAI;;AAEJ,wCAAuC;;AAEvC;;AAEA;;AAEA;AACA;AACA,SAAQ,2BAA2B;AACnC;AACA;AACA,WAAU,mEAAmE;AAC7E;AACA;AACA,aAAY,8CAA8C;AAC1D;AACA;AACA,eAAc,yBAAyB;AACvC;AACA;AACA,iBAAgB,0BAA0B;AAC1C;AACA;AACA,mBAAkB,oDAAoD;AACtE;AACA;AACA,qBAAoB,uCAAuC;AAC3D,8CAA6C,6DAA6D;AAC1G;AACA;AACA,uBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,wEAAwE,IAAI;AAChG;AACA;AACA;AACA,uBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,uBAAsB,kCAAkC;AACxD;AACA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,uBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAsB,sCAAsC;AAC5D;AACA;AACA;AACA;AACA;AACA,uBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,2CAA2C;AACvD,wDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA,aAAY,4CAA4C;AACxD,6DAA4D,wBAAwB;AACpF;AACA;AACA;AACA;AACA,WAAU,wCAAwC;AAClD,2CAA0C;AAC1C,2CAA0C;AAC1C;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA,6CAA4C,WAAW;AACvD;;AAEA;AACA,8BAA6B;;AAE7B,QAAO;;AAEP;AACA;;AAEA,4CAA2C;;AAE3C;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,2BAA0B,0BAA0B;AACpD,wBAAuB,mDAAmD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;AAEA;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;;AAEV;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA,eAAc;AACd;AACA,eAAc;AACd,WAAU;AACV;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;AACV;AACA,WAAU;AACV,OAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,WAAU;AACV,OAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAc,wBAAwB;AACtC;AACA;AACA,mBAAkB,4CAA4C;AAC9D;AACA;AACA,uBAAsB,6BAA6B;AACnD;AACA;AACA,2BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,yBAAyB;AACnD;AACA;AACA,+BAA8B,4EAA4E;AAC1G,2DAA0D,+CAA+C;AACzG;AACA;AACA;AACA;AACA,+BAA8B,4EAA4E;AAC1G,2DAA0D,+CAA+C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,0BAA0B;AAChD,kDAAiD,kBAAkB;AACnE;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;;AAGA;AACA,kBAAiB;AACjB,OAAM;;AAEN;;AAEA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA,WAAU;;AAEV;AACA,OAAM;;AAEN;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA8B,0BAA0B;AACxD,4BAA2B,mDAAmD;AAC9E;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAoD,uDAAuD;AAC3G,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAE;;AAEF;AACA;AACA,8BAA6B;;AAE7B;;AAEA,EAAC;AACD,wC;;;;;;;;;ACj9KsB;;;;AAIf;;AAIA;;AAGA;;;;AAEP,KAAI,OAAO,oBAAQ;AACnB,KAAI,UAAU,oBAAQ;;AAEtB,QAAO,QAAyB;AAChC,QAAO,QAAuB;AAC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","file":"hivtrace.js","sourcesContent":["window.jQuery = window.$ = $; \n\nrequire(\"font-awesome/css/font-awesome.css\");\nrequire('./hivtrace.css');\nrequire('bootstrap');\n\nvar hyphyvision = require('hyphy-vision');\nvar hivtrace = require('./hivtrace.js');\n\n// Create new hyphy-vision export\nwindow.hivtrace = hivtrace;\nwindow.hyphyvision = hyphyvision;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entry.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/font-awesome/css/font-awesome.css\n// module id = 5\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/hivtrace.css\n// module id = 15\n// module chunks = 0","webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tvar _bootstrap = __webpack_require__(5);\n\t\n\tvar _bootstrap2 = _interopRequireDefault(_bootstrap);\n\t\n\tfunction _interopRequireDefault(obj) {\n\t  return obj && obj.__esModule ? obj : { default: obj };\n\t}\n\t\n\twindow.$ = window.JQuery = $;\n\t\n\t__webpack_require__(14);\n\t__webpack_require__(22);\n\t\n\t__webpack_require__(24);\n\t__webpack_require__(37);\n\t\n\t// Bundle exports under hyphyvision\n\t__webpack_require__(42);\n\t\n\tvar absrel = __webpack_require__(203);\n\tvar busted = __webpack_require__(221);\n\tvar relax = __webpack_require__(222);\n\t\n\t// Create new hyphy-vision export\n\twindow.absrel = absrel;\n\twindow.busted = busted;\n\twindow.relax = relax;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, d3, _, jQuery) {'use strict';\n\t\n\tvar root = undefined;\n\tvar datamonkey = function datamonkey() {};\n\t\n\tif (true) {\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    exports = module.exports = datamonkey;\n\t  }\n\t  exports.datamonkey = datamonkey;\n\t} else {\n\t  root.datamonkey = datamonkey;\n\t}\n\t\n\tdatamonkey.errorModal = function (msg) {\n\t  $('#modal-error-msg').text(msg);\n\t  $('#errorModal').modal();\n\t};\n\t\n\tdatamonkey.export_csv_button = function (data) {\n\t  data = d3.csv.format(data);\n\t  if (data !== null) {\n\t    var pom = document.createElement('a');\n\t    pom.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(data));\n\t    pom.setAttribute('download', 'export.csv');\n\t    pom.className = 'btn btn-default btn-sm';\n\t    pom.innerHTML = '<span class=\"glyphicon glyphicon-floppy-save\"></span> Download CSV';\n\t    $(\"body\").append(pom);\n\t    pom.click();\n\t    pom.remove();\n\t  }\n\t};\n\t\n\tdatamonkey.save_image = function (type, container) {\n\t\n\t  var prefix = {\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    svg: \"http://www.w3.org/2000/svg\"\n\t  };\n\t\n\t  function get_styles(doc) {\n\t\n\t    function process_stylesheet(ss) {\n\t      try {\n\t        if (ss.cssRules) {\n\t          for (var i = 0; i < ss.cssRules.length; i++) {\n\t            var rule = ss.cssRules[i];\n\t            if (rule.type === 3) {\n\t              // Import Rule\n\t              process_stylesheet(rule.styleSheet);\n\t            } else {\n\t              // hack for illustrator crashing on descendent selectors\n\t              if (rule.selectorText) {\n\t                if (rule.selectorText.indexOf(\">\") === -1) {\n\t                  styles += \"\\n\" + rule.cssText;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } catch (e) {\n\t        console.log('Could not process stylesheet : ' + ss);\n\t      }\n\t    }\n\t\n\t    var styles = \"\",\n\t        styleSheets = doc.styleSheets;\n\t\n\t    if (styleSheets) {\n\t      for (var i = 0; i < styleSheets.length; i++) {\n\t        process_stylesheet(styleSheets[i]);\n\t      }\n\t    }\n\t\n\t    return styles;\n\t  }\n\t\n\t  var convert_svg_to_png = function convert_svg_to_png(image_string) {\n\t\n\t    var image = document.getElementById(\"hyphy-chart-image\");\n\t\n\t    image.onload = function () {\n\t\n\t      var canvas = document.getElementById(\"hyphy-chart-canvas\");\n\t      canvas.width = image.width;\n\t      canvas.height = image.height;\n\t      var context = canvas.getContext(\"2d\");\n\t      context.fillStyle = \"#FFFFFF\";\n\t      context.fillRect(0, 0, image.width, image.height);\n\t      context.drawImage(image, 0, 0);\n\t      var img = canvas.toDataURL(\"image/png\");\n\t      var pom = document.createElement('a');\n\t      pom.setAttribute('download', 'image.png');\n\t      pom.href = canvas.toDataURL(\"image/png\");\n\t      $(\"body\").append(pom);\n\t      pom.click();\n\t      pom.remove();\n\t    };\n\t\n\t    image.src = image_string;\n\t  };\n\t\n\t  var svg = $(container).find(\"svg\")[0];\n\t  if (!svg) {\n\t    svg = $(container)[0];\n\t  }\n\t\n\t  var styles = get_styles(window.document);\n\t\n\t  svg.setAttribute(\"version\", \"1.1\");\n\t\n\t  var defsEl = document.createElement(\"defs\");\n\t  svg.insertBefore(defsEl, svg.firstChild);\n\t\n\t  var styleEl = document.createElement(\"style\");\n\t  defsEl.appendChild(styleEl);\n\t  styleEl.setAttribute(\"type\", \"text/css\");\n\t\n\t  // removing attributes so they aren't doubled up\n\t  svg.removeAttribute(\"xmlns\");\n\t  svg.removeAttribute(\"xlink\");\n\t\n\t  // These are needed for the svg\n\t  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n\t    svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n\t  }\n\t\n\t  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n\t    svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n\t  }\n\t\n\t  var source = new XMLSerializer().serializeToString(svg).replace('</style>', '<![CDATA[' + styles + ']]></style>');\n\t  var rect = svg.getBoundingClientRect();\n\t  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n\t  var to_download = [doctype + source];\n\t  var image_string = 'data:image/svg+xml;base66,' + encodeURIComponent(to_download);\n\t\n\t  if (type == \"png\") {\n\t    convert_svg_to_png(image_string);\n\t  } else {\n\t    var pom = document.createElement('a');\n\t    pom.setAttribute('download', 'image.svg');\n\t    pom.setAttribute('href', image_string);\n\t    $(\"body\").append(pom);\n\t    pom.click();\n\t    pom.remove();\n\t  }\n\t};\n\t\n\tdatamonkey.jobQueue = function (container) {\n\t\n\t  // Load template\n\t  _.templateSettings = {\n\t    evaluate: /\\{\\%(.+?)\\%\\}/g,\n\t    interpolate: /\\{\\{(.+?)\\}\\}/g,\n\t    variable: \"rc\"\n\t  };\n\t\n\t  d3.json('/jobqueue', function (data) {\n\t\n\t    var job_queue = _.template($(\"script.job-queue\").html());\n\t\n\t    var job_queue_html = job_queue(data);\n\t    $(\"#job-queue-panel\").find('table').remove();\n\t    $(container).append(job_queue_html);\n\t  });\n\t};\n\t\n\tdatamonkey.status_check = function () {\n\t\n\t  // Check if there are any status checkers on the page\n\t  if ($(\".status-checker\").length) {\n\t    // Check health status and report back to element\n\t    var url = \"/clusterhealth\";\n\t    d3.json(url, function (data) {\n\t      // Add appropriate class based on result\n\t      if (data.successful_connection) {\n\t        d3.select('.status-checker').classed({ 'status-healthy': true, 'status-troubled': false });\n\t        $(\".status-checker\").attr(\"title\", 'Cluster Status : Healthy');\n\t      } else {\n\t        d3.select('.status-checker').classed({ 'status-healthy': false, 'status-troubled': true });\n\t        $(\".status-checker\").attr(\"title\", 'Cluster Status : Troubled; ' + data.msg.description);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\tdatamonkey.validate_date = function () {\n\t\n\t  // Check that it is not empty\n\t  if ($(this).val().length === 0) {\n\t    $(this).next('.help-block').remove();\n\t    $(this).parent().removeClass('has-success');\n\t    $(this).parent().addClass('has-error');\n\t\n\t    jQuery('<span/>', {\n\t      class: 'help-block',\n\t      text: 'Field is empty'\n\t    }).insertAfter($(this));\n\t  } else if (isNaN(Date.parse($(this).val()))) {\n\t    $(this).next('.help-block').remove();\n\t    $(this).parent().removeClass('has-success');\n\t    $(this).parent().addClass('has-error');\n\t\n\t    jQuery('<span/>', {\n\t      class: 'help-block',\n\t      text: 'Date format should be in the format YYYY-mm-dd'\n\t    }).insertAfter($(this));\n\t  } else {\n\t    $(this).parent().removeClass('has-error');\n\t    $(this).parent().addClass('has-success');\n\t    $(this).next('.help-block').remove();\n\t  }\n\t};\n\t\n\t$(document).ready(function () {\n\t  $(function () {\n\t    $('[data-toggle=\"tooltip\"]').tooltip();\n\t  });\n\t  $('#datamonkey-header').collapse();\n\t\n\t  var initial_padding = $(\"body\").css(\"padding-top\");\n\t\n\t  $(\"#collapse_nav_bar\").on(\"click\", function (e) {\n\t    $('#datamonkey-header').collapse('toggle');\n\t    $(this).find(\"i\").toggleClass(\"fa-times-circle fa-eye\");\n\t    var new_padding = $(\"body\").css(\"padding-top\") == initial_padding ? \"5px\" : initial_padding;\n\t    d3.select(\"body\").transition().style(\"padding-top\", new_padding);\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(38), __webpack_require__(41), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, $, _) {\"use strict\";\n\t\n\t__webpack_require__(43);\n\t__webpack_require__(201);\n\t__webpack_require__(202);\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t\n\tvar SLAC = React.createClass({\n\t    displayName: \"SLAC\",\n\t\n\t\n\t    float_format: d3.format(\".2f\"),\n\t\n\t    dm_loadFromServer: function dm_loadFromServer() {\n\t        /* 20160721 SLKP: prefixing all custom (i.e. not defined by REACT) with dm_\n\t           to make it easier to recognize scoping immediately */\n\t\n\t        var self = this;\n\t\n\t        d3.json(self.props.url, function (request_error, data) {\n\t\n\t            if (!data) {\n\t                var error_message_text = request_error.status == 404 ? self.props.url + \" could not be loaded\" : request_error.statusText;\n\t                self.setState({ error_message: error_message_text });\n\t            } else {\n\t                self.dm_initializeFromJSON(data);\n\t            }\n\t        });\n\t    },\n\t\n\t    dm_initializeFromJSON: function dm_initializeFromJSON(data) {\n\t        this.setState({ analysis_results: data });\n\t    },\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        /* default properties for the component */\n\t\n\t        return {\n\t            url: \"#\"\n\t        };\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t\n\t        return {\n\t            analysis_results: null,\n\t            error_message: null,\n\t            pValue: 0.1\n\t        };\n\t    },\n\t\n\t    componentWillMount: function componentWillMount() {\n\t        this.dm_loadFromServer();\n\t        this.dm_setEvents();\n\t    },\n\t\n\t    dm_setEvents: function dm_setEvents() {\n\t\n\t        var self = this;\n\t\n\t        $(\"#datamonkey-json-file\").on(\"change\", function (e) {\n\t\n\t            var files = e.target.files; // FileList object\n\t\n\t            if (files.length == 1) {\n\t                var f = files[0];\n\t                var reader = new FileReader();\n\t\n\t                reader.onload = function (theFile) {\n\t                    return function (e) {\n\t                        try {\n\t                            self.dm_initializeFromJSON(JSON.parse(this.result));\n\t                        } catch (error) {\n\t                            self.setState({ error_message: error.toString() });\n\t                        }\n\t                    };\n\t                }(f);\n\t\n\t                reader.readAsText(f);\n\t            }\n\t\n\t            $(\"#datamonkey-json-file-toggle\").dropdown(\"toggle\");\n\t        });\n\t    },\n\t\n\t    dm_adjustPvalue: function dm_adjustPvalue(event) {\n\t        this.setState({ pValue: parseFloat(event.target.value) });\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        var self = this;\n\t\n\t        if (self.state.error_message) {\n\t            return React.createElement(\n\t                \"div\",\n\t                { id: \"datamonkey-error\", className: \"alert alert-danger alert-dismissible\", role: \"alert\" },\n\t                React.createElement(\n\t                    \"button\",\n\t                    { type: \"button\", className: \"close\", \"data-dismiss\": \"alert\", \"aria-label\": \"Close\" },\n\t                    React.createElement(\n\t                        \"span\",\n\t                        { \"aria-hidden\": \"true\" },\n\t                        \"\\xD7\"\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"strong\",\n\t                    null,\n\t                    self.state.error_message\n\t                ),\n\t                \" \",\n\t                React.createElement(\"span\", { id: \"datamonkey-error-text\" })\n\t            );\n\t        }\n\t\n\t        if (self.state.analysis_results) {\n\t\n\t            return React.createElement(\n\t                \"div\",\n\t                { className: \"tab-content\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"tab-pane\", id: \"summary_tab\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"row\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { id: \"summary-div\", className: \"col-md-12\" },\n\t                            React.createElement(SLACBanner, { analysis_results: self.state.analysis_results, pValue: self.state.pValue, pAdjuster: _.bind(self.dm_adjustPvalue, self) })\n\t                        )\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"row hidden-print\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { id: \"datamonkey-slac-tree-summary\", className: \"col-lg-4 col-md-6 col-sm-12\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"panel panel-default\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-heading\" },\n\t                                    React.createElement(\n\t                                        \"h3\",\n\t                                        { className: \"panel-title\" },\n\t                                        React.createElement(\"i\", { className: \"fa fa-puzzle-piece\" }),\n\t                                        \" Partition information\"\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-body\" },\n\t                                    React.createElement(\n\t                                        \"small\",\n\t                                        null,\n\t                                        React.createElement(DatamonkeyPartitionTable, {\n\t                                            pValue: self.state.pValue,\n\t                                            trees: self.state.analysis_results.trees,\n\t                                            partitions: self.state.analysis_results.partitions,\n\t                                            branchAttributes: self.state.analysis_results['branch attributes'],\n\t                                            siteResults: self.state.analysis_results.MLE,\n\t                                            accessorPositive: function accessorPositive(json, partition) {\n\t                                                return _.map(json[\"content\"][partition][\"by-site\"][\"AVERAGED\"], function (v) {\n\t                                                    return v[8];\n\t                                                });\n\t                                            },\n\t                                            accessorNegative: function accessorNegative(json, partition) {\n\t                                                return _.map(json[\"content\"][partition][\"by-site\"][\"AVERAGED\"], function (v) {\n\t                                                    return v[9];\n\t                                                });\n\t                                            }\n\t                                        })\n\t                                    )\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { id: \"datamonkey-slac-model-fits\", className: \"col-lg-5 col-md-6 col-sm-12\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"panel panel-default\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-heading\" },\n\t                                    React.createElement(\n\t                                        \"h3\",\n\t                                        { className: \"panel-title\" },\n\t                                        React.createElement(\"i\", { className: \"fa fa-table\" }),\n\t                                        \" Model fits\"\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-body\" },\n\t                                    React.createElement(\n\t                                        \"small\",\n\t                                        null,\n\t                                        React.createElement(DatamonkeyModelTable, { fits: self.state.analysis_results.fits })\n\t                                    )\n\t                                )\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { id: \"datamonkey-slac-timers\", className: \"col-lg-3 col-md-3 col-sm-12\" },\n\t                            React.createElement(\n\t                                \"div\",\n\t                                { className: \"panel panel-default\" },\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-heading\" },\n\t                                    React.createElement(\n\t                                        \"h3\",\n\t                                        { className: \"panel-title\" },\n\t                                        React.createElement(\"i\", { className: \"fa fa-clock-o\" }),\n\t                                        \" Execution time\"\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    \"div\",\n\t                                    { className: \"panel-body\" },\n\t                                    React.createElement(\n\t                                        \"small\",\n\t                                        null,\n\t                                        React.createElement(DatamonkeyTimersTable, { timers: self.state.analysis_results.timers, totalTime: \"Total time\" })\n\t                                    )\n\t                                )\n\t                            )\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"tab-pane active\", id: \"sites_tab\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"row\" },\n\t                        React.createElement(\n\t                            \"div\",\n\t                            { id: \"summary-div\", className: \"col-md-12\" },\n\t                            React.createElement(SLACSites, {\n\t                                headers: self.state.analysis_results.MLE.headers,\n\t                                mle: datamonkey.helpers.map(datamonkey.helpers.filter(self.state.analysis_results.MLE.content, function (value, key) {\n\t                                    return _.has(value, \"by-site\");\n\t                                }), function (value, key) {\n\t                                    return value[\"by-site\"];\n\t                                }),\n\t                                sample25: self.state.analysis_results[\"sample-2.5\"],\n\t                                sampleMedian: self.state.analysis_results[\"sample-median\"],\n\t                                sample975: self.state.analysis_results[\"sample-97.5\"],\n\t                                partitionSites: self.state.analysis_results.partitions\n\t                            })\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\"div\", { className: \"tab-pane\", id: \"tree_tab\" })\n\t            );\n\t        }\n\t        return null;\n\t    }\n\t\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_slac(url, element) {\n\t    ReactDOM.render(React.createElement(SLAC, { url: url }), document.getElementById(element));\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(2), __webpack_require__(41)))\n\n/***/ },\n\n/***/ 43:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(_, d3) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t\n\tvar DatamonkeyTableRow = React.createClass({\n\t    displayName: 'DatamonkeyTableRow',\n\t\n\t    /**\n\t        A single table row\n\t    \n\t        *rowData* is an array of cells\n\t            each cell can be one of\n\t                1. string: simply render the text as shown\n\t                2. object: a polymorphic case; can be rendered directly (if the object is a valid react.js element)\n\t                   or via a transformation of the value associated with the key 'value'\n\t    \n\t                   supported keys\n\t                    2.1. 'value' : the value to use to generate cell context\n\t                    2.2. 'format' : the function (returning something react.js can render directly) that will be called\n\t                    to transform 'value' into the object to be rendered\n\t                    2.3. 'span' : colSpan attribute\n\t                    2.4. 'style': CSS style attributes (JSX specification, i.e. {margin-top: '1em'} and not a string)\n\t                    2.5. 'classes': CSS classes to apply to the cell\n\t                    2.6. 'abbr': wrap cell value in <abbr> tags\n\t    \n\t                3. array: directly render array elements in the cell (must be renderable to react.js; note that plain\n\t                text elements will be wrapped in \"span\" which is not allowed to nest in <th/td>\n\t    \n\t    \n\t        *header* is a bool indicating whether the header is a header row (th cells) or a regular row (td cells)\n\t    */\n\t\n\t    /*propTypes: {\n\t     rowData: React.PropTypes.arrayOf (React.PropTypes.oneOfType ([React.PropTypes.string,React.PropTypes.number,React.PropTypes.object,React.PropTypes.array])).isRequired,\n\t     header:  React.PropTypes.bool,\n\t    },*/\n\t\n\t    dm_compareTwoValues: function dm_compareTwoValues(a, b) {\n\t        /**\n\t            compare objects by iterating over keys\n\t        */\n\t\n\t        var myType = typeof a === 'undefined' ? 'undefined' : _typeof(a),\n\t            self = this;\n\t\n\t        if (myType == (typeof b === 'undefined' ? 'undefined' : _typeof(b))) {\n\t            if (myType == \"string\" || myType == \"number\") {\n\t                return a == b ? 1 : 0;\n\t            }\n\t\n\t            if (_.isArray(a) && _.isArray(b)) {\n\t\n\t                if (a.length != b.length) {\n\t                    return 0;\n\t                }\n\t\n\t                var not_compared = 0;\n\t                var result = _.every(a, function (c, i) {\n\t                    var comp = self.dm_compareTwoValues(c, b[i]);if (comp < 0) {\n\t                        not_compared = comp;return false;\n\t                    }return comp == 1;\n\t                });\n\t\n\t                if (not_compared < 0) {\n\t                    return not_compared;\n\t                }\n\t\n\t                return result ? 1 : 0;\n\t            }\n\t\n\t            return -2;\n\t        }\n\t        return -1;\n\t    },\n\t\n\t    dm_log100times: _.before(100, function (v) {\n\t        console.log(v);\n\t        return 0;\n\t    }),\n\t\n\t    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n\t\n\t        var self = this;\n\t\n\t        if (this.props.header !== nextProps.header) {\n\t            return true;\n\t        }\n\t\n\t        var result = _.some(this.props.rowData, function (value, index) {\n\t            /** TO DO\n\t                check for format and other field equality\n\t            */\n\t            if (value === nextProps.rowData[index]) {\n\t                return false;\n\t            }\n\t\n\t            var compare = self.dm_compareTwoValues(value, nextProps.rowData[index]);\n\t            if (compare >= 0) {\n\t                return compare == 0;\n\t            }\n\t\n\t            if (compare == -2) {\n\t                if (_.has(value, \"value\") && _.has(nextProps.rowData[index], \"value\")) {\n\t                    return self.dm_compareTwoValues(value.value, nextProps.rowData[index].value) != 1;\n\t                }\n\t            }\n\t\n\t            return true;\n\t        });\n\t\n\t        if (result) {\n\t            this.dm_log100times([\"Old\", this.props.rowData, \"New\", nextProps.rowData]);\n\t        }\n\t\n\t        return result;\n\t    },\n\t\n\t    render: function render() {\n\t        return React.createElement(\n\t            'tr',\n\t            null,\n\t            this.props.rowData.map(_.bind(function (cell, index) {\n\t\n\t                var value = _.has(cell, \"value\") ? cell.value : cell;\n\t\n\t                if (_.isArray(value)) {\n\t                    if (!_.has(cell, \"format\")) {\n\t                        return value;\n\t                    }\n\t                } else {\n\t                    if (_.isObject(value)) {\n\t                        if (!React.isValidElement(value)) {\n\t                            return null;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (_.has(cell, \"format\")) {\n\t                    value = cell.format(value);\n\t                }\n\t\n\t                if (_.has(cell, \"abbr\")) {\n\t                    value = React.createElement(\n\t                        'abbr',\n\t                        { title: cell.abbr },\n\t                        value\n\t                    );\n\t                }\n\t\n\t                var cellProps = { key: index };\n\t\n\t                if (_.has(cell, \"span\")) {\n\t                    cellProps[\"colSpan\"] = cell.span;\n\t                }\n\t\n\t                if (_.has(cell, \"style\")) {\n\t                    cellProps[\"style\"] = cell.style;\n\t                }\n\t\n\t                if (_.has(cell, \"classes\")) {\n\t                    cellProps[\"className\"] = cell.classes;\n\t                }\n\t\n\t                return React.createElement(this.props.header ? \"th\" : \"td\", cellProps, value);\n\t            }, this))\n\t        );\n\t    }\n\t});\n\t\n\tvar DatamonkeyTable = React.createClass({\n\t    displayName: 'DatamonkeyTable',\n\t\n\t    /**\n\t        A table composed of rows\n\t            *headerData* -- an array of cells (see DatamonkeyTableRow) to render as the header\n\t            *bodyData* -- an array of arrays of cells (rows) to render\n\t            *classes* -- CSS classes to apply to the table element\n\t    */\n\t\n\t    /*propTypes: {\n\t        headerData: React.PropTypes.array,\n\t        bodyData: React.PropTypes.arrayOf (React.PropTypes.array),\n\t    },*/\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        return { classes: \"table table-condensed table-hover\",\n\t            rowHash: null,\n\t            sortableColumns: new Object(null),\n\t            initialSort: null\n\t        };\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { sortedOn: this.props.initialSort };\n\t    },\n\t\n\t    render: function render() {\n\t        var children = [];\n\t\n\t        if (this.props.headerData) {\n\t            if (_.isArray(this.props.headerData[0])) {\n\t                // multiple rows\n\t                children.push(React.createElement(\n\t                    'thead',\n\t                    { key: 0 },\n\t                    _.map(this.props.headerData, function (row, index) {\n\t                        return React.createElement(DatamonkeyTableRow, { rowData: row, header: true, key: index });\n\t                    })\n\t                ));\n\t            } else {\n\t                children.push(React.createElement(\n\t                    'thead',\n\t                    { key: 0 },\n\t                    React.createElement(DatamonkeyTableRow, { rowData: this.props.headerData, header: true })\n\t                ));\n\t            }\n\t        }\n\t\n\t        children.push(React.createElement(\"tbody\", { key: 1 }, _.map(this.props.bodyData, _.bind(function (componentData, index) {\n\t            return React.createElement(DatamonkeyTableRow, { rowData: componentData, key: this.props.rowHash ? this.props.rowHash(componentData) : index, header: false });\n\t        }, this))));\n\t\n\t        return React.createElement(\"table\", { className: this.props.classes }, children);\n\t    }\n\t});\n\t\n\tvar DatamonkeyRateDistributionTable = React.createClass({\n\t    displayName: 'DatamonkeyRateDistributionTable',\n\t\n\t\n\t    /** render a rate distribution table from JSON formatted like this\n\t    {\n\t         \"non-synonymous/synonymous rate ratio for *background*\":[ // name of distribution\n\t          [0.1701428265961598, 1] // distribution points (rate, weight)\n\t          ],\n\t         \"non-synonymous/synonymous rate ratio for *test*\":[\n\t          [0.1452686330406915, 1]\n\t          ]\n\t    }\n\t     */\n\t\n\t    propTypes: {\n\t        distribution: React.PropTypes.object.isRequired\n\t    },\n\t\n\t    dm_formatterRate: d3.format(\".3r\"),\n\t    dm_formatterProp: d3.format(\".3p\"),\n\t\n\t    dm_createDistributionTable: function dm_createDistributionTable(jsonRates) {\n\t        var rowData = [];\n\t        var self = this;\n\t        _.each(jsonRates, function (value, key) {\n\t            rowData.push([{ value: key, span: 3, classes: \"info\" }]);\n\t            _.each(value, function (rate, index) {\n\t                rowData.push([{ value: rate[1], format: self.dm_formatterProp }, '@', { value: rate[0], format: self.dm_formatterRate }]);\n\t            });\n\t        });\n\t        return rowData;\n\t    },\n\t\n\t    render: function render() {\n\t        return React.createElement(DatamonkeyTable, { bodyData: this.dm_createDistributionTable(this.props.distribution), classes: \"table table-condensed\" });\n\t    }\n\t\n\t});\n\t\n\tvar DatamonkeyPartitionTable = React.createClass({\n\t    displayName: 'DatamonkeyPartitionTable',\n\t\n\t\n\t    dm_formatterFloat: d3.format(\".3r\"),\n\t    dm_formatterProp: d3.format(\".3p\"),\n\t\n\t    propTypes: {\n\t        trees: React.PropTypes.object.isRequired,\n\t        partitions: React.PropTypes.object.isRequired,\n\t        branchAttributes: React.PropTypes.object.isRequired,\n\t        siteResults: React.PropTypes.object.isRequired,\n\t        accessorNegative: React.PropTypes.func.isRequired,\n\t        accessorPositive: React.PropTypes.func.isRequired,\n\t        pValue: React.PropTypes.number.isRequired\n\t    },\n\t\n\t    dm_computePartitionInformation: function dm_computePartitionInformation(trees, partitions, attributes, pValue) {\n\t\n\t        var partitionKeys = _.sortBy(_.keys(partitions), function (v) {\n\t            return v;\n\t        }),\n\t            matchingKey = null,\n\t            self = this;\n\t\n\t        var extractBranchLength = this.props.extractOn || _.find(attributes.attributes, function (value, key) {\n\t            matchingKey = key;return value[\"attribute type\"] == \"branch length\";\n\t        });\n\t        if (matchingKey) {\n\t            extractBranchLength = matchingKey;\n\t        }\n\t\n\t        return _.map(partitionKeys, function (key, index) {\n\t            var treeBranches = trees.tested[key],\n\t                tested = {};\n\t\n\t            _.each(treeBranches, function (value, key) {\n\t                if (value == \"test\") tested[key] = 1;\n\t            });\n\t\n\t            var testedLength = extractBranchLength ? datamonkey.helpers.sum(attributes[key], function (v, k) {\n\t                if (tested[k.toUpperCase()]) {\n\t                    return v[extractBranchLength];\n\t                }return 0;\n\t            }) : 0;\n\t            var totalLength = extractBranchLength ? datamonkey.helpers.sum(attributes[key], function (v) {\n\t                return v[extractBranchLength] || 0;\n\t            }) : 0; // || 0 is to resolve root node missing length\n\t\n\t\n\t            return _.map([index + 1, // 1-based partition index\n\t            partitions[key].coverage[0].length, // number of sites in the partition\n\t            _.size(tested), // tested branches\n\t            _.keys(treeBranches).length, // total branches\n\t            testedLength, testedLength / totalLength, totalLength, _.filter(self.props.accessorPositive(self.props.siteResults, key), function (p) {\n\t                return p <= pValue;\n\t            }).length, _.filter(self.props.accessorNegative(self.props.siteResults, key), function (p) {\n\t                return p <= pValue;\n\t            }).length], function (cell, index) {\n\t                if (index > 1) {\n\t                    var attributedCell = { value: cell,\n\t                        style: { textAlign: 'center' } };\n\t\n\t                    if (index == 4 || index == 6) {\n\t                        _.extend(attributedCell, { 'format': self.dm_formatterFloat });\n\t                    }\n\t                    if (index == 5) {\n\t                        _.extend(attributedCell, { 'format': self.dm_formatterProp });\n\t                    }\n\t\n\t                    return attributedCell;\n\t                }\n\t                return cell;\n\t            });\n\t        });\n\t    },\n\t\n\t    dm_makeHeaderRow: function dm_makeHeaderRow(pValue) {\n\t        return [_.map([\"Partition\", \"Sites\", \"Branches\", \"Branch Length\", \"Selected at p\" + String.fromCharCode(parseInt(\"2264\", 16)) + pValue], function (d, i) {\n\t            return _.extend({ value: d, style: { borderBottom: 0, textAlign: i > 1 ? 'center' : 'left' } }, i > 1 ? { 'span': i == 3 ? 3 : 2 } : {});\n\t        }), _.map([\"\", \"\", \"Tested\", \"Total\", \"Tested\", \"% of total\", \"Total\", \"Positive\", \"Negative\"], function (d, i) {\n\t            return { value: d, style: { borderTop: 0, textAlign: i > 1 ? 'center' : 'left' } };\n\t        })];\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            header: this.dm_makeHeaderRow(this.props.pValue),\n\t            rows: this.dm_computePartitionInformation(this.props.trees, this.props.partitions, this.props.branchAttributes, this.props.pValue)\n\t        };\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this.setState({\n\t            header: this.dm_makeHeaderRow(nextProps.pValue),\n\t            rows: this.dm_computePartitionInformation(nextProps.trees, nextProps.partitions, nextProps.branchAttributes, nextProps.pValue)\n\t        });\n\t    },\n\t\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'table-responsive' },\n\t            React.createElement(DatamonkeyTable, { headerData: this.state.header, bodyData: this.state.rows })\n\t        );\n\t    }\n\t});\n\t\n\tvar DatamonkeyModelTable = React.createClass({\n\t    displayName: 'DatamonkeyModelTable',\n\t\n\t\n\t    /** render a model fit table from a JSON object with entries like this\n\t            \"Global MG94xREV\":{ // model name\n\t               \"log likelihood\":-5453.527975908821,\n\t               \"parameters\":131,\n\t               \"AIC-c\":11172.05569160427,\n\t               \"rate distributions\":{\n\t                 \"non-synonymous/synonymous rate ratio for *background*\":[\n\t                  [0.1701428265961598, 1]\n\t                  ],\n\t                 \"non-synonymous/synonymous rate ratio for *test*\":[\n\t                  [0.1452686330406915, 1]\n\t                  ]\n\t                },\n\t               \"display order\":0\n\t              }\n\t       dm_supportedColumns controls which keys from model specification will be consumed;\n\t          * 'value' is the cell specification to be consumed by DatamonkeyTableRow\n\t          * 'order' is the column order in the resulting table (relative; doesn't have to be sequential)\n\t          * 'display_format' is a formatting function for cell entries\n\t          * 'transform' is a data trasformation function for cell entries\n\t     */\n\t\n\t    dm_numberFormatter: d3.format(\".2f\"),\n\t\n\t    dm_supportedColumns: { 'log likelihood': { order: 2,\n\t            value: { \"value\": \"log L\", \"abbr\": \"log likelihood\" },\n\t            display_format: d3.format(\".2f\") },\n\t        'parameters': { order: 3,\n\t            value: \"Parameters\" },\n\t        'AIC-c': { order: 1,\n\t            value: { value: React.createElement('span', null, ['AIC', React.createElement(\n\t                    'sub',\n\t                    { key: '0' },\n\t                    'C'\n\t                )]),\n\t                abbr: \"Small-sample corrected Akaike Information Score\" },\n\t            display_format: d3.format(\".2f\") },\n\t        'rate distributions': { order: 4,\n\t            value: \"Rate distributions\",\n\t            transform: function transform(value) {\n\t                return React.createElement(DatamonkeyRateDistributionTable, { distribution: value });\n\t            } }\n\t    },\n\t\n\t    propTypes: {\n\t        fits: React.PropTypes.object.isRequired\n\t    },\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            orderOn: \"display order\"\n\t        };\n\t    },\n\t\n\t    dm_extractFitsTable: function dm_extractFitsTable(jsonTable) {\n\t        var modelList = [];\n\t        var columnMap = null;\n\t        var columnMapIterator = [];\n\t        var valueFormat = {};\n\t        var valueTransform = {};\n\t        var rowData = [];\n\t        var self = this;\n\t\n\t        _.each(jsonTable, function (value, key) {\n\t            if (!columnMap) {\n\t                columnMap = {};\n\t                _.each(value, function (cellValue, cellName) {\n\t                    if (self.dm_supportedColumns[cellName]) {\n\t                        columnMap[cellName] = self.dm_supportedColumns[cellName];\n\t                        columnMapIterator[columnMap[cellName].order] = cellName;\n\t                        valueFormat[cellName] = self.dm_supportedColumns[cellName][\"display_format\"];\n\t                        if (_.isFunction(self.dm_supportedColumns[cellName][\"transform\"])) {\n\t                            valueTransform[cellName] = self.dm_supportedColumns[cellName][\"transform\"];\n\t                        }\n\t                    }\n\t                });\n\t                columnMapIterator = _.filter(columnMapIterator, function (v) {\n\t                    return v;\n\t                });\n\t            }\n\t\n\t            var thisRow = [{ value: key, style: { fontVariant: \"small-caps\" } }];\n\t\n\t            _.each(columnMapIterator, function (tag) {\n\t\n\t                var myValue = valueTransform[tag] ? valueTransform[tag](value[tag]) : value[tag];\n\t\n\t                if (valueFormat[tag]) {\n\t                    thisRow.push({ 'value': myValue, 'format': valueFormat[tag] });\n\t                } else {\n\t                    thisRow.push(myValue);\n\t                }\n\t            });\n\t\n\t            rowData.push([thisRow, _.isNumber(value[self.props.orderOn]) ? value[self.props.orderOn] : rowData.length]);\n\t        });\n\t\n\t        return { 'data': _.map(_.sortBy(rowData, function (value) {\n\t                return value[1];\n\t            }), function (r) {\n\t                return r[0];\n\t            }),\n\t            'columns': _.map(columnMapIterator, function (tag) {\n\t                return columnMap[tag].value;\n\t            }) };\n\t    },\n\t\n\t    dm_makeHeaderRow: function dm_makeHeaderRow(columnMap) {\n\t        var headerRow = ['Model'];\n\t        _.each(columnMap, function (v) {\n\t            headerRow.push(v);\n\t        });\n\t        return headerRow;\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t\n\t        var tableInfo = this.dm_extractFitsTable(this.props.fits);\n\t\n\t        return {\n\t            header: this.dm_makeHeaderRow(tableInfo.columns),\n\t            rows: tableInfo.data,\n\t            caption: null\n\t        };\n\t    },\n\t\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'table-responsive' },\n\t            React.createElement(DatamonkeyTable, { headerData: this.state.header, bodyData: this.state.rows })\n\t        );\n\t    }\n\t});\n\t\n\tvar DatamonkeyTimersTable = React.createClass({\n\t    displayName: 'DatamonkeyTimersTable',\n\t\n\t\n\t    dm_percentageFormatter: d3.format(\".2%\"),\n\t\n\t    propTypes: {\n\t        timers: React.PropTypes.object.isRequired\n\t    },\n\t\n\t    dm_formatSeconds: function dm_formatSeconds(seconds) {\n\t\n\t        var fields = [~~(seconds / 3600), ~~(seconds % 3600 / 60), seconds % 60];\n\t\n\t        return _.map(fields, function (d) {\n\t            return d < 10 ? \"0\" + d : \"\" + d;\n\t        }).join(':');\n\t    },\n\t\n\t    dm_extractTimerTable: function dm_extractTimerTable(jsonTable) {\n\t        var totalTime = 0.,\n\t            formattedRows = _.map(jsonTable, _.bind(function (value, key) {\n\t            if (this.props.totalTime) {\n\t                if (key == this.props.totalTime) {\n\t                    totalTime = value['timer'];\n\t                }\n\t            } else {\n\t                totalTime += value['timer'];\n\t            }\n\t            return [key, value['timer'], value['order']];\n\t        }, this));\n\t\n\t        formattedRows = _.sortBy(formattedRows, function (row) {\n\t            return row[2];\n\t        });\n\t\n\t        formattedRows = _.map(formattedRows, _.bind(function (row) {\n\t            var fraction = null;\n\t            if (this.props.totalTime === null || this.props.totalTime != row[0]) {\n\t                row[2] = { \"value\": row[1] / totalTime, \"format\": this.dm_percentageFormatter };\n\t            } else {\n\t                row[2] = \"\";\n\t            }\n\t            row[1] = this.dm_formatSeconds(row[1]);\n\t            return row;\n\t        }, this));\n\t\n\t        return formattedRows;\n\t    },\n\t\n\t    dm_makeHeaderRow: function dm_makeHeaderRow() {\n\t        return ['Task', 'Time', '%'];\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t\n\t        return {\n\t            header: this.dm_makeHeaderRow(),\n\t            rows: this.dm_extractTimerTable(this.props.timers),\n\t            caption: null\n\t        };\n\t    },\n\t\n\t    render: function render() {\n\t        return React.createElement(DatamonkeyTable, { headerData: this.state.header, bodyData: this.state.rows });\n\t    }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(38)))\n\n/***/ },\n\n/***/ 201:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t\n\tvar SLACSites = React.createClass({\n\t    displayName: 'SLACSites',\n\t\n\t    propTypes: {\n\t        headers: React.PropTypes.arrayOf(React.PropTypes.arrayOf(React.PropTypes.string)).isRequired,\n\t        mle: React.PropTypes.object.isRequired,\n\t        sample25: React.PropTypes.object,\n\t        sampleMedian: React.PropTypes.object,\n\t        sample975: React.PropTypes.object,\n\t        initialAmbigHandling: React.PropTypes.string.isRequired,\n\t        partitionSites: React.PropTypes.object.isRequired\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t        var canDoCI = this.props.sample25 && this.props.sampleMedian && this.props.sample975;\n\t\n\t        return {\n\t\n\t            ambigOptions: this.dm_AmbigOptions(this.props),\n\t            ambigHandling: this.props.initialAmbigHandling,\n\t            filters: new Object(null),\n\t            showIntervals: canDoCI,\n\t            hasCI: canDoCI\n\t        };\n\t    },\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t\n\t        return {\n\t            sample25: null,\n\t            sampleMedian: null,\n\t            sample975: null,\n\t            initialAmbigHandling: \"RESOLVED\"\n\t        };\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this.setState({\n\t\n\t            ambigOptions: this.dm_AmbigOptions(nextProps),\n\t            ambigHandling: nextProps.initialAmbigHandling\n\t        });\n\t    },\n\t\n\t    dm_formatNumber: d3.format(\".3r\"),\n\t    dm_formatNumberShort: d3.format(\".2r\"),\n\t\n\t    dm_log10times: _.before(10, function (v) {\n\t        console.log(v);\n\t        return 0;\n\t    }),\n\t\n\t    dm_formatInterval: function dm_formatInterval(values) {\n\t        //this.dm_log10times (values);\n\t\n\t        return this.dm_formatNumber(values[0]) + \" / \" + this.dm_formatNumber(values[2]) + \" [\" + this.dm_formatNumber(values[1]) + \" : \" + this.dm_formatNumber(values[3]) + \"]\";\n\t    },\n\t\n\t    dm_AmbigOptions: function dm_AmbigOptions(theseProps) {\n\t        return _.keys(theseProps.mle[0]);\n\t    },\n\t\n\t    dm_changeAmbig: function dm_changeAmbig(event) {\n\t\n\t        this.setState({\n\t            ambigHandling: event.target.value\n\t        });\n\t    },\n\t\n\t    dm_toggleIntervals: function dm_toggleIntervals(event) {\n\t        this.setState({\n\t            showIntervals: !this.state.showIntervals\n\t        });\n\t    },\n\t\n\t    dm_toggleVariableFilter: function dm_toggleVariableFilter(event) {\n\t\n\t        var filterState = new Object(null);\n\t        _.extend(filterState, this.state.filters);\n\t        filterState[\"variable\"] = this.state.filters[\"variable\"] == \"on\" ? \"off\" : \"on\";\n\t        this.setState({ filters: filterState });\n\t    },\n\t\n\t    dm_makeFilterFunction: function dm_makeFilterFunction() {\n\t\n\t        var filterFunction = null;\n\t\n\t        _.each(this.state.filters, function (value, key) {\n\t            var composeFunction = null;\n\t\n\t            switch (key) {\n\t                case \"variable\":\n\t                    {\n\t                        if (value == \"on\") {\n\t                            composeFunction = function composeFunction(f, partitionIndex, index, site, siteData) {\n\t                                return (!f || f(partitionIndex, index, site, siteData)) && siteData[2] + siteData[3] > 0;\n\t                            };\n\t                        }\n\t                        break;\n\t                    }\n\t            }\n\t\n\t            if (composeFunction) {\n\t                filterFunction = _.wrap(filterFunction, composeFunction);\n\t            }\n\t        });\n\t\n\t        return filterFunction;\n\t    },\n\t\n\t    dm_makeHeaderRow: function dm_makeHeaderRow() {\n\t\n\t        var headers = ['Partition', 'Site'],\n\t            doCI = this.state.showIntervals;\n\t\n\t        if (doCI) {\n\t            var secondRow = ['', ''];\n\t\n\t            _.each(this.props.headers, function (value) {\n\t                headers.push({ value: value[0], abbr: value[1], span: 4, style: { textAlign: 'center' } });\n\t                secondRow.push('MLE');\n\t                secondRow.push('Med');\n\t                secondRow.push('2.5%');\n\t                secondRow.push('97.5%');\n\t            });\n\t            return [headers, secondRow];\n\t        } else {\n\t\n\t            _.each(this.props.headers, function (value) {\n\t                headers.push({ value: value[0], abbr: value[1] });\n\t            });\n\t        }\n\t        return headers;\n\t    },\n\t\n\t    dm_makeDataRows: function dm_makeDataRows(filter) {\n\t\n\t        var rows = [],\n\t            partitionCount = datamonkey.helpers.countPartitionsJSON(this.props.partitionSites),\n\t            partitionIndex = 0,\n\t            self = this,\n\t            doCI = this.state.showIntervals;\n\t\n\t        while (partitionIndex < partitionCount) {\n\t\n\t            _.each(self.props.partitionSites[partitionIndex].coverage[0], function (site, index) {\n\t                var siteData = self.props.mle[partitionIndex][self.state.ambigHandling][index];\n\t                if (!filter || filter(partitionIndex, index, site, siteData)) {\n\t                    var thisRow = [partitionIndex + 1, site + 1];\n\t                    //secondRow = doCI ? ['',''] : null;\n\t\n\t                    _.each(siteData, function (estimate, colIndex) {\n\t\n\t                        if (doCI) {\n\t                            thisRow.push({ value: estimate, format: self.dm_formatNumber });\n\t                            thisRow.push({ value: self.props.sample25[partitionIndex][self.state.ambigHandling][index][colIndex], format: self.dm_formatNumberShort });\n\t                            thisRow.push({ value: self.props.sampleMedian[partitionIndex][self.state.ambigHandling][index][colIndex], format: self.dm_formatNumberShort });\n\t                            thisRow.push({ value: self.props.sample975[partitionIndex][self.state.ambigHandling][index][colIndex], format: self.dm_formatNumberShort });\n\t\n\t                            /*thisRow.push ({value: [estimate, self.props.sample25[partitionIndex][self.state.ambigHandling][index][colIndex],\n\t                                                             self.props.sampleMedian[partitionIndex][self.state.ambigHandling][index][colIndex],\n\t                                                             self.props.sample975[partitionIndex][self.state.ambigHandling][index][colIndex]],\n\t                                           format: self.dm_formatInterval,\n\t                                            }); */\n\t                        } else {\n\t                            thisRow.push({ value: estimate, format: self.dm_formatNumber });\n\t                        }\n\t                    });\n\t                    rows.push(thisRow);\n\t                    //if (secondRow) {\n\t                    //    rows.push (secondRow);\n\t                    //}\n\t                }\n\t            });\n\t\n\t            partitionIndex++;\n\t        }\n\t\n\t        return rows;\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        var self = this;\n\t\n\t        var result = React.createElement(\n\t            'div',\n\t            { className: 'table-responsive' },\n\t            React.createElement(\n\t                'form',\n\t                { className: 'form-inline navbar-form navbar-left' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'form-group' },\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'btn-group' },\n\t                        React.createElement(\n\t                            'button',\n\t                            { className: 'btn btn-default btn-sm dropdown-toggle', type: 'button', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },\n\t                            'Display Options ',\n\t                            React.createElement('span', { className: 'caret' })\n\t                        ),\n\t                        React.createElement(\n\t                            'ul',\n\t                            { className: 'dropdown-menu' },\n\t                            React.createElement(\n\t                                'li',\n\t                                { key: 'variable' },\n\t                                React.createElement(\n\t                                    'div',\n\t                                    { className: 'checkbox' },\n\t                                    React.createElement('input', { type: 'checkbox', checked: self.state.filters[\"variable\"] == \"on\" ? true : false, defaultChecked: self.state.filters[\"variable\"] == \"on\" ? true : false, onChange: self.dm_toggleVariableFilter }),\n\t                                    ' Variable sites only'\n\t                                )\n\t                            ),\n\t                            self.state.hasCI ? React.createElement(\n\t                                'li',\n\t                                { key: 'intervals' },\n\t                                React.createElement(\n\t                                    'div',\n\t                                    { className: 'checkbox' },\n\t                                    React.createElement('input', { type: 'checkbox', checked: self.state.showIntervals, defaultChecked: self.state.showIntervals, onChange: self.dm_toggleIntervals }),\n\t                                    ' Show sampling confidence intervals'\n\t                                )\n\t                            ) : null\n\t                        )\n\t                    ),\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'input-group' },\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'input-group-addon' },\n\t                            'Ambiguities are '\n\t                        ),\n\t                        React.createElement(\n\t                            'select',\n\t                            { className: 'form-control input-sm', defaultValue: self.state.ambigHandling, onChange: self.dm_changeAmbig },\n\t                            _.map(this.state.ambigOptions, function (value, index) {\n\t                                return React.createElement(\n\t                                    'option',\n\t                                    { key: index, value: value },\n\t                                    value\n\t                                );\n\t                            })\n\t                        )\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(DatamonkeyTable, { headerData: this.dm_makeHeaderRow(), bodyData: this.dm_makeDataRows(this.dm_makeFilterFunction()) })\n\t        );\n\t\n\t        return result;\n\t    }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41)))\n\n/***/ },\n\n/***/ 202:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(_, d3) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t\n\tvar SLACBanner = React.createClass({\n\t  displayName: 'SLACBanner',\n\t\n\t\n\t  dm_countSites: function dm_countSites(json, cutoff) {\n\t\n\t    var result = { all: 0,\n\t      positive: 0,\n\t      negative: 0 };\n\t\n\t    result.all = datamonkey.helpers.countSitesFromPartitionsJSON(json);\n\t\n\t    result.positive = datamonkey.helpers.sum(json[\"MLE\"][\"content\"], function (partition) {\n\t      return _.reduce(partition[\"by-site\"][\"RESOLVED\"], function (sum, row) {\n\t        return sum + (row[8] <= cutoff ? 1 : 0);\n\t      }, 0);\n\t    });\n\t\n\t    result.negative = datamonkey.helpers.sum(json[\"MLE\"][\"content\"], function (partition) {\n\t      return _.reduce(partition[\"by-site\"][\"RESOLVED\"], function (sum, row) {\n\t        return sum + (row[9] <= cutoff ? 1 : 0);\n\t      }, 0);\n\t    });\n\t\n\t    return result;\n\t  },\n\t\n\t  dm_computeState: function dm_computeState(state, pvalue) {\n\t    return {\n\t      sites: this.dm_countSites(state, pvalue)\n\t    };\n\t  },\n\t\n\t  dm_formatP: d3.format(\".3f\"),\n\t\n\t  getInitialState: function getInitialState() {\n\t    return this.dm_computeState(this.props.analysis_results, this.props.pValue);\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    this.setState(this.dm_computeState(nextProps.analysis_results, nextProps.pValue));\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'panel panel-primary' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'panel-heading' },\n\t        React.createElement(\n\t          'h3',\n\t          { className: 'panel-title' },\n\t          React.createElement(\n\t            'abbr',\n\t            { title: 'Single Likelihood Ancestor Counting' },\n\t            'SLAC'\n\t          ),\n\t          ' analysis summary'\n\t        )\n\t      ),\n\t      React.createElement(\n\t        'div',\n\t        { className: 'panel-body' },\n\t        React.createElement(\n\t          'span',\n\t          { className: 'lead' },\n\t          'Evidence',\n\t          React.createElement(\n\t            'sup',\n\t            null,\n\t            '\\u2020'\n\t          ),\n\t          ' of pervasive ',\n\t          React.createElement(\n\t            'span',\n\t            { className: 'hyphy-red' },\n\t            'diversifying'\n\t          ),\n\t          ' / ',\n\t          React.createElement(\n\t            'span',\n\t            { className: 'hyphy-navy' },\n\t            'purifying'\n\t          ),\n\t          ' selection was found at',\n\t          React.createElement(\n\t            'strong',\n\t            { className: 'hyphy-red' },\n\t            ' ',\n\t            this.state.sites.positive\n\t          ),\n\t          ' / ',\n\t          React.createElement(\n\t            'strong',\n\t            { className: 'hyphy-navy' },\n\t            this.state.sites.negative\n\t          ),\n\t          ' sites among ',\n\t          this.state.sites.all,\n\t          ' tested sites'\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { style: { marginBottom: '0em' } },\n\t          React.createElement(\n\t            'small',\n\t            null,\n\t            React.createElement(\n\t              'sup',\n\t              null,\n\t              '\\u2020'\n\t            ),\n\t            'Extended binomial test, p \\u2264 ',\n\t            this.dm_formatP(this.props.pValue),\n\t            React.createElement(\n\t              'div',\n\t              { className: 'dropdown hidden-print', style: { display: 'inline', marginLeft: '0.25em' } },\n\t              React.createElement(\n\t                'button',\n\t                { id: 'dm.pvalue.slider', type: 'button', className: 'btn btn-primary btn-xs dropdown-toggle', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'false' },\n\t                React.createElement('span', { className: 'caret' })\n\t              ),\n\t              React.createElement(\n\t                'ul',\n\t                { className: 'dropdown-menu', 'aria-labelledby': 'dm.pvalue.slider' },\n\t                React.createElement(\n\t                  'li',\n\t                  null,\n\t                  React.createElement(\n\t                    'a',\n\t                    { href: '#' },\n\t                    React.createElement('input', { type: 'range', min: '0', max: '1', value: this.props.pValue, step: '0.01', onChange: this.props.pAdjuster })\n\t                  )\n\t                )\n\t              )\n\t            ),\n\t            React.createElement(\n\t              'emph',\n\t              null,\n\t              ' not'\n\t            ),\n\t            ' corrected for multiple testing; ambiguous characters resolved to minimize substitution counts.',\n\t            React.createElement('br', null),\n\t            React.createElement('i', { className: 'fa fa-exclamation-circle' }),\n\t            ' Please cite ',\n\t            React.createElement(\n\t              'a',\n\t              { href: 'http://www.ncbi.nlm.nih.gov/pubmed/15703242', target: '_blank' },\n\t              'PMID 15703242'\n\t            ),\n\t            ' if you use this result in a publication, presentation, or other scientific work.'\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(38)))\n\n/***/ },\n\n/***/ 203:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, $) {'use strict';\n\t\n\tvar _absrel_summary = __webpack_require__(204);\n\t\n\tvar _model_fits = __webpack_require__(205);\n\t\n\tvar _tree_summary = __webpack_require__(206);\n\t\n\tvar _tree = __webpack_require__(207);\n\t\n\tvar _branch_table = __webpack_require__(209);\n\t\n\tvar React = __webpack_require__(44),\n\t    ReactDOM = __webpack_require__(211);\n\t\n\tvar datamonkey = __webpack_require__(37),\n\t    _ = __webpack_require__(41),\n\t    busted = __webpack_require__(212);\n\t\n\t__webpack_require__(208);\n\t__webpack_require__(219);\n\t\n\t\n\tvar React = __webpack_require__(44);\n\t\n\tvar BSREL = React.createClass({\n\t  displayName: 'BSREL',\n\t\n\t\n\t  float_format: d3.format(\".2f\"),\n\t\n\t  loadFromServer: function loadFromServer() {\n\t\n\t    var self = this;\n\t    d3.json(this.props.url, function (data) {\n\t\n\t      data[\"fits\"][\"MG94\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"MG94\");\n\t      data[\"fits\"][\"Full model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Full model\");\n\t\n\t      // GH-#18 Add omega annotation tag\n\t      data[\"fits\"][\"MG94\"][\"annotation-tag\"] = \"ω\";\n\t      data[\"fits\"][\"Full model\"][\"annotation-tag\"] = \"ω\";\n\t\n\t      var annotations = data[\"fits\"][\"Full model\"][\"branch-annotations\"],\n\t          json = data,\n\t          pmid = data[\"PMID\"],\n\t          test_results = data[\"test results\"];\n\t\n\t      self.setState({\n\t        annotations: annotations,\n\t        json: json,\n\t        pmid: pmid,\n\t        test_results: test_results\n\t      });\n\t    });\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t\n\t    var edgeColorizer = function edgeColorizer(element, data) {\n\t\n\t      var self = this;\n\t\n\t      var svg = d3.select(\"#tree_container svg\"),\n\t          svg_defs = d3.select(\".phylotree-definitions\");\n\t\n\t      if (svg_defs.empty()) {\n\t        svg_defs = svg.append(\"defs\").attr(\"class\", \"phylotree-definitions\");\n\t      }\n\t\n\t      // clear existing linearGradients\n\t\n\t      var scaling_exponent = 1.0 / 3,\n\t          omega_format = d3.format(\".3r\"),\n\t          prop_format = d3.format(\".2p\"),\n\t          fit_format = d3.format(\".2f\"),\n\t          p_value_format = d3.format(\".4f\");\n\t\n\t      self.omega_color = d3.scale.pow().exponent(scaling_exponent).domain([0, 0.25, 1, 5, 10]).range(self.options()[\"color-fill\"] ? [\"#DDDDDD\", \"#AAAAAA\", \"#888888\", \"#444444\", \"#000000\"] : [\"#6e4fa2\", \"#3288bd\", \"#e6f598\", \"#f46d43\", \"#9e0142\"]).clamp(true);\n\t\n\t      var createBranchGradient = function createBranchGradient(node) {\n\t\n\t        function generateGradient(svg_defs, grad_id, annotations, already_cumulative) {\n\t\n\t          var current_weight = 0;\n\t          var this_grad = svg_defs.append(\"linearGradient\").attr(\"id\", grad_id);\n\t\n\t          annotations.forEach(function (d, i) {\n\t\n\t            if (d.prop) {\n\t              var new_weight = current_weight + d.prop;\n\t              this_grad.append(\"stop\").attr(\"offset\", \"\" + current_weight * 100 + \"%\").style(\"stop-color\", self.omega_color(d.omega));\n\t              this_grad.append(\"stop\").attr(\"offset\", \"\" + new_weight * 100 + \"%\").style(\"stop-color\", self.omega_color(d.omega));\n\t              current_weight = new_weight;\n\t            }\n\t          });\n\t        }\n\t\n\t        // Create svg definitions\n\t        if (self.gradient_count == undefined) {\n\t          self.gradient_count = 0;\n\t        }\n\t\n\t        if (node.annotations) {\n\t\n\t          if (node.annotations.length == 1) {\n\t            node['color'] = self.omega_color(node.annotations[0][\"omega\"]);\n\t          } else {\n\t            self.gradient_count++;\n\t            var grad_id = \"branch_gradient_\" + self.gradient_count;\n\t            generateGradient(svg_defs, grad_id, node.annotations.omegas);\n\t            node['grad'] = grad_id;\n\t          }\n\t        }\n\t      };\n\t\n\t      var annotations = data.target.annotations,\n\t          alpha_level = 0.05,\n\t          tooltip = \"<b>\" + data.target.name + \"</b>\",\n\t          reference_omega_weight = prop_format(0),\n\t          distro = '';\n\t\n\t      if (annotations) {\n\t\n\t        reference_omega_weight = annotations.omegas[0].prop;\n\t\n\t        annotations.omegas.forEach(function (d, i) {\n\t\n\t          var omega_value = d.omega > 1e20 ? \"&infin;\" : omega_format(d.omega),\n\t              omega_weight = prop_format(d.prop);\n\t\n\t          tooltip += \"<br/>&omega;<sub>\" + (i + 1) + \"</sub> = \" + omega_value + \" (\" + omega_weight + \")\";\n\t\n\t          if (i) {\n\t            distro += \"<br/>\";\n\t          }\n\t\n\t          distro += \"&omega;<sub>\" + (i + 1) + \"</sub> = \" + omega_value + \" (\" + omega_weight + \")\";\n\t        });\n\t\n\t        tooltip += \"<br/><i>p = \" + omega_format(annotations[\"p\"]) + \"</i>\";\n\t\n\t        $(element[0][0]).tooltip({\n\t          'title': tooltip,\n\t          'html': true,\n\t          'trigger': 'hover',\n\t          'container': 'body',\n\t          'placement': 'auto'\n\t        });\n\t\n\t        createBranchGradient(data.target);\n\t\n\t        if (data.target.grad) {\n\t          element.style('stroke', 'url(#' + data.target.grad + ')');\n\t        } else {\n\t          element.style('stroke', data.target.color);\n\t        }\n\t\n\t        element.style('stroke-width', annotations[\"p\"] <= alpha_level ? '12' : '5').style('stroke-linejoin', 'round').style('stroke-linecap', 'round');\n\t      }\n\t    };\n\t\n\t    return {\n\t      edgeColorizer: edgeColorizer\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t\n\t    var tree_settings = {\n\t      'omegaPlot': {},\n\t      'tree-options': {\n\t        /* value arrays have the following meaning\n\t            [0] - the value of the attribute\n\t            [1] - does the change in attribute value trigger tree re-layout?\n\t        */\n\t        'hyphy-tree-model': ['Full model', true],\n\t        'hyphy-tree-highlight': [null, false],\n\t        'hyphy-tree-branch-lengths': [true, true],\n\t        'hyphy-tree-hide-legend': [false, true],\n\t        'hyphy-tree-fill-color': [false, true]\n\t      },\n\t      'suppress-tree-render': false,\n\t      'chart-append-html': true,\n\t      'edgeColorizer': this.props.edgeColorizer\n\t    };\n\t\n\t    return {\n\t      annotations: null,\n\t      json: null,\n\t      pmid: null,\n\t      settings: tree_settings,\n\t      test_results: null,\n\t      tree: null\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.loadFromServer();\n\t    this.setEvents();\n\t  },\n\t\n\t  setEvents: function setEvents() {\n\t\n\t    var self = this;\n\t\n\t    $(\"#datamonkey-absrel-json-file\").on(\"change\", function (e) {\n\t      var files = e.target.files; // FileList object\n\t\n\t      if (files.length == 1) {\n\t        var f = files[0];\n\t        var reader = new FileReader();\n\t\n\t        reader.onload = function (theFile) {\n\t          return function (e) {\n\t            var data = JSON.parse(this.result);\n\t            data[\"fits\"][\"MG94\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"MG94\");\n\t            data[\"fits\"][\"Full model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Full model\");\n\t\n\t            var annotations = data[\"fits\"][\"Full model\"][\"branch-annotations\"],\n\t                json = data,\n\t                pmid = data[\"PMID\"],\n\t                test_results = data[\"test results\"];\n\t\n\t            self.setState({\n\t              annotations: annotations,\n\t              json: json,\n\t              pmid: pmid,\n\t              test_results: test_results\n\t            });\n\t          };\n\t        }(f);\n\t        reader.readAsText(f);\n\t      }\n\t\n\t      $(\"#datamonkey-absrel-toggle-here\").dropdown(\"toggle\");\n\t      e.preventDefault();\n\t    });\n\t  },\n\t\n\t  formatBranchAnnotations: function formatBranchAnnotations(json, key) {\n\t\n\t    var initial_branch_annotations = json[\"fits\"][key][\"branch-annotations\"];\n\t\n\t    if (!initial_branch_annotations) {\n\t      initial_branch_annotations = json[\"fits\"][key][\"rate distributions\"];\n\t    }\n\t\n\t    // Iterate over objects\n\t    var branch_annotations = _.mapObject(initial_branch_annotations, function (val, key) {\n\t\n\t      var vals = [];\n\t      try {\n\t        vals = JSON.parse(val);\n\t      } catch (e) {\n\t        vals = val;\n\t      }\n\t\n\t      var omegas = { \"omegas\": _.map(vals, function (d) {\n\t          return _.object([\"omega\", \"prop\"], d);\n\t        }) };\n\t      var test_results = _.clone(json[\"test results\"][key]);\n\t      _.extend(test_results, omegas);\n\t      return test_results;\n\t    });\n\t\n\t    return branch_annotations;\n\t  },\n\t\n\t  initialize: function initialize() {\n\t\n\t    var model_fits_id = \"#hyphy-model-fits\",\n\t        omega_plots_id = \"#hyphy-omega-plots\",\n\t        summary_id = \"#hyphy-relax-summary\",\n\t        tree_id = \"#tree-tab\";\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    var self = this;\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'tab-content' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'tab-pane active', id: 'summary-tab' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { id: 'summary-div', className: 'col-md-12' },\n\t            React.createElement(_absrel_summary.BSRELSummary, { test_results: self.state.test_results,\n\t              pmid: self.state.pmid })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'row' },\n\t          React.createElement(\n\t            'div',\n\t            { id: 'hyphy-tree-summary', className: 'col-md-6' },\n\t            React.createElement(_tree_summary.TreeSummary, { json: self.state.json })\n\t          ),\n\t          React.createElement(\n\t            'div',\n\t            { id: 'hyphy-model-fits', className: 'col-md-6' },\n\t            React.createElement(_model_fits.ModelFits, { json: self.state.json })\n\t          )\n\t        )\n\t      ),\n\t      React.createElement(\n\t        'div',\n\t        { className: 'tab-pane', id: 'tree-tab' },\n\t        React.createElement(_tree.Tree, { json: self.state.json,\n\t          settings: self.state.settings })\n\t      ),\n\t      React.createElement(\n\t        'div',\n\t        { className: 'tab-pane', id: 'table_tab' },\n\t        React.createElement(_branch_table.BranchTable, { tree: self.state.tree,\n\t          test_results: self.state.test_results,\n\t          annotations: self.state.annotations })\n\t      )\n\t    );\n\t  }\n\t\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_absrel(url, element) {\n\t  React.render(React.createElement(BSREL, { url: url }), document.getElementById(element));\n\t}\n\t\n\tmodule.exports = render_absrel;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 204:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\t\n\tvar BSRELSummary = React.createClass({\n\t  displayName: 'BSRELSummary',\n\t\n\t\n\t  float_format: d3.format(\".2f\"),\n\t\n\t  countBranchesTested: function countBranchesTested(branches_tested) {\n\t\n\t    if (branches_tested) {\n\t      return branches_tested.split(';').length;\n\t    } else {\n\t      return 0;\n\t    }\n\t  },\n\t\n\t  getBranchesWithEvidence: function getBranchesWithEvidence(test_results) {\n\t\n\t    var self = this;\n\t    return _.filter(test_results, function (d) {\n\t      return d.p <= 0.05;\n\t    }).length;\n\t  },\n\t\n\t  getTestBranches: function getTestBranches(test_results) {\n\t\n\t    var self = this;\n\t    return _.filter(test_results, function (d) {\n\t      return d.tested > 0;\n\t    }).length;\n\t  },\n\t\n\t  getTotalBranches: function getTotalBranches(test_results) {\n\t\n\t    var self = this;\n\t    return _.keys(test_results).length;\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t\n\t    var self = this;\n\t\n\t    return {\n\t      branches_with_evidence: this.getBranchesWithEvidence(self.props.test_results),\n\t      test_branches: this.getTestBranches(self.props.test_results),\n\t      total_branches: this.getTotalBranches(self.props.test_results)\n\t    };\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t    this.setState({\n\t      branches_with_evidence: this.getBranchesWithEvidence(nextProps.test_results),\n\t      test_branches: this.getTestBranches(nextProps.test_results),\n\t      total_branches: this.getTotalBranches(nextProps.test_results)\n\t    });\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    var self = this;\n\t\n\t    return React.createElement(\n\t      'ul',\n\t      { className: 'list-group' },\n\t      React.createElement(\n\t        'li',\n\t        { className: 'list-group-item list-group-item-info' },\n\t        React.createElement(\n\t          'h3',\n\t          { className: 'list-group-item-heading' },\n\t          React.createElement('i', { className: 'fa fa-list' }),\n\t          React.createElement(\n\t            'span',\n\t            { id: 'summary-method-name' },\n\t            'Adaptive branch site REL'\n\t          ),\n\t          ' summary'\n\t        ),\n\t        React.createElement(\n\t          'p',\n\t          { className: 'list-group-item-text lead' },\n\t          'Evidence',\n\t          React.createElement(\n\t            'sup',\n\t            null,\n\t            '\\u2020'\n\t          ),\n\t          ' of episodic diversifying selection was found on',\n\t          React.createElement(\n\t            'strong',\n\t            null,\n\t            ' ',\n\t            self.state.branches_with_evidence\n\t          ),\n\t          ' out of',\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            ' ',\n\t            self.state.test_branches\n\t          ),\n\t          ' tested branches (',\n\t          React.createElement(\n\t            'span',\n\t            null,\n\t            self.state.total_branches\n\t          ),\n\t          ' total branches).'\n\t        ),\n\t        React.createElement(\n\t          'p',\n\t          null,\n\t          React.createElement(\n\t            'small',\n\t            null,\n\t            React.createElement(\n\t              'sup',\n\t              null,\n\t              '\\u2020'\n\t            ),\n\t            React.createElement(\n\t              'abbr',\n\t              { title: 'Likelihood Ratio Test' },\n\t              'LRT'\n\t            ),\n\t            ' p \\u2264 0.05, corrected for multiple testing.'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'p',\n\t          null,\n\t          React.createElement(\n\t            'small',\n\t            null,\n\t            'Please cite ',\n\t            React.createElement(\n\t              'a',\n\t              { href: 'http://www.ncbi.nlm.nih.gov/pubmed/25697341', id: 'summary-pmid', target: '_blank' },\n\t              'PMID 25697341'\n\t            ),\n\t            ' if you use this result in a publication, presentation, or other scientific work.'\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_absrel_summary(test_results, pmid, element) {\n\t  React.render(React.createElement(BSRELSummary, { test_results: test_results, pmid: pmid }), document.getElementById(element));\n\t}\n\t\n\tmodule.exports.BSRELSummary = BSRELSummary;\n\tmodule.exports.render_absrel_summary = render_absrel_summary;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41)))\n\n/***/ },\n\n/***/ 205:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _, $) {\"use strict\";\n\t\n\tvar React = __webpack_require__(44);\n\t\n\tvar ModelFits = React.createClass({\n\t  displayName: \"ModelFits\",\n\t\n\t\n\t  getInitialState: function getInitialState() {\n\t    var table_row_data = this.getModelRows(this.props.json),\n\t        table_columns = this.getModelColumns(table_row_data);\n\t\n\t    return {\n\t      table_row_data: table_row_data,\n\t      table_columns: table_columns\n\t    };\n\t  },\n\t\n\t  formatRuntime: function formatRuntime(seconds) {\n\t    var duration_string = \"\",\n\t        seconds = parseFloat(seconds);\n\t\n\t    var split_array = [Math.floor(seconds / (24 * 3600)), Math.floor(seconds / 3600) % 24, Math.floor(seconds / 60) % 60, seconds % 60],\n\t        quals = [\"d.\", \"hrs.\", \"min.\", \"sec.\"];\n\t\n\t    split_array.forEach(function (d, i) {\n\t      if (d) {\n\t        duration_string += \" \" + d + \" \" + quals[i];\n\t      }\n\t    });\n\t\n\t    return duration_string;\n\t  },\n\t\n\t  getLogLikelihood: function getLogLikelihood(this_model) {\n\t    return d3.format(\".2f\")(this_model['log-likelihood']);\n\t  },\n\t\n\t  getAIC: function getAIC(this_model) {\n\t    return d3.format(\".2f\")(this_model['AIC-c']);\n\t  },\n\t\n\t  getNumParameters: function getNumParameters(this_model) {\n\t    return this_model['parameters'];\n\t  },\n\t\n\t  getBranchLengths: function getBranchLengths(this_model) {\n\t\n\t    if (this_model[\"tree length\"]) {\n\t      return d3.format(\".2f\")(this_model[\"tree length\"]);\n\t    } else {\n\t      return d3.format(\".2f\")(d3.values(this_model[\"branch-lengths\"]).reduce(function (p, c) {\n\t        return p + c;\n\t      }, 0));\n\t    }\n\t  },\n\t\n\t  getRuntime: function getRuntime(this_model) {\n\t    //return this.formatRuntime(this_model['runtime']);\n\t    return this.formatRuntime(this_model['runtime']);\n\t  },\n\t\n\t  getDistributions: function getDistributions(m, this_model) {\n\t\n\t    var omega_distributions = {};\n\t    omega_distributions[m] = {};\n\t\n\t    var omega_format = d3.format(\".3r\"),\n\t        prop_format = d3.format(\".2p\"),\n\t        p_value_format = d3.format(\".4f\");\n\t\n\t    var distributions = [];\n\t\n\t    for (var d in this_model[\"rate-distributions\"]) {\n\t\n\t      var this_distro = this_model[\"rate-distributions\"][d];\n\t      var this_distro_entry = [d, \"\", \"\", \"\"];\n\t\n\t      omega_distributions[m][d] = this_distro.map(function (d) {\n\t        return {\n\t          'omega': d[0],\n\t          'weight': d[1]\n\t        };\n\t      });\n\t\n\t      for (var k = 0; k < this_distro.length; k++) {\n\t        this_distro_entry[k + 1] = omega_format(this_distro[k][0]) + \" (\" + prop_format(this_distro[k][1]) + \")\";\n\t      }\n\t\n\t      distributions.push(this_distro_entry);\n\t    }\n\t\n\t    distributions.sort(function (a, b) {\n\t      return a[0] < b[0] ? -1 : a[0] == b[0] ? 0 : 1;\n\t    });\n\t\n\t    return distributions;\n\t  },\n\t\n\t  getModelRows: function getModelRows(json) {\n\t\n\t    if (!json) {\n\t      return [];\n\t    }\n\t\n\t    var table_row_data = [];\n\t    var omega_format = d3.format(\".3r\");\n\t    var prop_format = d3.format(\".2p\");\n\t    var p_value_format = d3.format(\".4f\");\n\t\n\t    for (var m in json[\"fits\"]) {\n\t\n\t      var this_model_row = [],\n\t          this_model = json[\"fits\"][m];\n\t\n\t      this_model_row = [this_model['display-order'], \"\", m, this.getLogLikelihood(this_model), this.getNumParameters(this_model), this.getAIC(this_model), this.getRuntime(this_model), this.getBranchLengths(this_model)];\n\t\n\t      var distributions = this.getDistributions(m, this_model);\n\t\n\t      if (distributions.length) {\n\t\n\t        this_model_row = this_model_row.concat(distributions[0]);\n\t        this_model_row[1] = distributions[0][0];\n\t\n\t        table_row_data.push(this_model_row);\n\t\n\t        for (var d = 1; d < distributions.length; d++) {\n\t\n\t          var this_distro_entry = this_model_row.map(function (d, i) {\n\t            if (i) return \"\";\n\t            return d;\n\t          });\n\t\n\t          this_distro_entry[1] = distributions[d][0];\n\t\n\t          for (var k = this_distro_entry.length - 4; k < this_distro_entry.length; k++) {\n\t            this_distro_entry[k] = distributions[d][k - this_distro_entry.length + 4];\n\t          }\n\t\n\t          table_row_data.push(this_distro_entry);\n\t        }\n\t      } else {\n\t        table_row_data.push(this_model_row);\n\t      }\n\t    }\n\t\n\t    table_row_data.sort(function (a, b) {\n\t      if (a[0] == b[0]) {\n\t        return a[1] < b[1] ? -1 : a[1] == b[1] ? 0 : 1;\n\t      }\n\t      return a[0] - b[0];\n\t    });\n\t\n\t    table_row_data = table_row_data.map(function (r) {\n\t      return r.slice(2);\n\t    });\n\t\n\t    return table_row_data;\n\t  },\n\t\n\t  getModelColumns: function getModelColumns(table_row_data) {\n\t\n\t    var model_header = '<th>Model</th>',\n\t        logl_header = '<th><em> log </em>L</th>',\n\t        num_params_header = '<th><abbr title=\"Number of estimated model parameters\"># par.</abbr></th>',\n\t        aic_header = '<th><abbr title=\"Small Sample AIC\">AIC<sub>c</sub></abbr></th>',\n\t        runtime_header = '<th>Time to fit</th>',\n\t        branch_lengths_header = '<th><abbr title=\"Total tree length, expected substitutions/site\">L<sub>tree</sub></abbr></th>',\n\t        branch_set_header = '<th>Branch set</th>',\n\t        omega_1_header = '<th>&omega;<sub>1</sub></th>',\n\t        omega_2_header = '<th>&omega;<sub>2</sub></th>',\n\t        omega_3_header = '<th>&omega;<sub>3</sub></th>';\n\t\n\t    // inspect table_row_data and return header\n\t    var all_columns = [model_header, logl_header, num_params_header, aic_header, runtime_header, branch_lengths_header, branch_set_header, omega_1_header, omega_2_header, omega_3_header];\n\t\n\t    // validate each table row with its associated header\n\t    if (table_row_data.length == 0) {\n\t      return [];\n\t    }\n\t\n\t    // trim columns to length of table_row_data\n\t    var column_headers = _.take(all_columns, table_row_data[0].length);\n\t\n\t    // remove all columns that have 0, null, or undefined rows\n\t    var items = d3.transpose(table_row_data);\n\t\n\t    return column_headers;\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate() {\n\t\n\t    var model_columns = d3.select('#summary-model-header1');\n\t    model_columns = model_columns.selectAll(\"th\").data(this.state.table_columns);\n\t    model_columns.enter().append(\"th\");\n\t    model_columns.html(function (d) {\n\t      return d;\n\t    });\n\t\n\t    var model_rows = d3.select('#summary-model-table').selectAll(\"tr\").data(this.state.table_row_data);\n\t    model_rows.enter().append('tr');\n\t    model_rows.exit().remove();\n\t    model_rows = model_rows.selectAll(\"td\").data(function (d) {\n\t      return d;\n\t    });\n\t    model_rows.enter().append(\"td\");\n\t    model_rows.html(function (d) {\n\t      return d;\n\t    });\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t    var table_row_data = this.getModelRows(nextProps.json),\n\t        table_columns = this.getModelColumns(table_row_data);\n\t\n\t    this.setState({\n\t      table_row_data: table_row_data,\n\t      table_columns: table_columns\n\t    });\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    return React.createElement(\n\t      \"div\",\n\t      { className: \"col-lg-12\" },\n\t      React.createElement(\n\t        \"ul\",\n\t        { className: \"list-group\" },\n\t        React.createElement(\n\t          \"li\",\n\t          { className: \"list-group-item\" },\n\t          React.createElement(\n\t            \"h4\",\n\t            { className: \"list-group-item-heading\" },\n\t            React.createElement(\"i\", { className: \"fa fa-cubes\", styleFormat: \"margin-right: 10px\" }),\n\t            \"Model fits\"\n\t          ),\n\t          React.createElement(\n\t            \"table\",\n\t            { className: \"table table-hover table-condensed list-group-item-text\", styleFormat: \"margin-top:0.5em;\" },\n\t            React.createElement(\"thead\", { id: \"summary-model-header1\" }),\n\t            React.createElement(\"tbody\", { id: \"summary-model-table\" })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_model_fits(json, element) {\n\t  React.render(React.createElement(ModelFits, { json: json }), $(element)[0]);\n\t}\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction rerender_model_fits(json, element) {\n\t  $(element).empty();\n\t  render_model_fits(json, element);\n\t}\n\t\n\tmodule.exports.ModelFits = ModelFits;\n\tmodule.exports.render_model_fits = render_model_fits;\n\tmodule.exports.rerender_model_fits = rerender_model_fits;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 206:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, $) {'use strict';\n\t\n\tvar React = __webpack_require__(44),\n\t    _ = __webpack_require__(41);\n\t\n\tvar TreeSummary = React.createClass({\n\t  displayName: 'TreeSummary',\n\t\n\t\n\t  getInitialState: function getInitialState() {\n\t\n\t    var table_row_data = this.getSummaryRows(this.props.json),\n\t        table_columns = this.getTreeSummaryColumns(table_row_data);\n\t\n\t    return {\n\t      table_row_data: table_row_data,\n\t      table_columns: table_columns\n\t    };\n\t  },\n\t\n\t  getRateClasses: function getRateClasses(branch_annotations) {\n\t\n\t    // Get count of all rate classes\n\t    var all_branches = _.values(branch_annotations);\n\t\n\t    return _.countBy(all_branches, function (branch) {\n\t      return branch.omegas.length;\n\t    });\n\t  },\n\t\n\t  getBranchProportion: function getBranchProportion(rate_classes) {\n\t    var sum = _.reduce(_.values(rate_classes), function (memo, num) {\n\t      return memo + num;\n\t    });\n\t    return _.mapObject(rate_classes, function (val, key) {\n\t      return d3.format(\".2p\")(val / sum);\n\t    });\n\t  },\n\t\n\t  getBranchLengthProportion: function getBranchLengthProportion(rate_classes, branch_annotations, total_branch_length) {\n\t\n\t    var self = this;\n\t\n\t    // get branch lengths of each rate distribution\n\t    //return prop_format(d[2] / total_tree_length\n\t\n\t    // Get count of all rate classes\n\t    var branch_lengths = _.mapObject(rate_classes, function (d) {\n\t      return 0;\n\t    });\n\t\n\t    for (var key in branch_annotations) {\n\t      var node = self.tree.get_node_by_name(key);\n\t      branch_lengths[branch_annotations[key].omegas.length] += self.tree.branch_length()(node);\n\t    };\n\t\n\t    return _.mapObject(branch_lengths, function (val, key) {\n\t      return d3.format(\".2p\")(val / total_branch_length);\n\t    });\n\t  },\n\t\n\t  getNumUnderSelection: function getNumUnderSelection(rate_classes, branch_annotations, test_results) {\n\t\n\t    var num_under_selection = _.mapObject(rate_classes, function (d) {\n\t      return 0;\n\t    });\n\t\n\t    for (var key in branch_annotations) {\n\t      num_under_selection[branch_annotations[key].omegas.length] += test_results[key][\"p\"] <= 0.05;\n\t    };\n\t\n\t    return num_under_selection;\n\t  },\n\t\n\t  getSummaryRows: function getSummaryRows(json) {\n\t\n\t    var self = this;\n\t\n\t    // Will need to create a tree for each fits\n\t    var analysis_data = json;\n\t\n\t    if (!analysis_data) {\n\t      return [];\n\t    }\n\t\n\t    // Create an array of phylotrees from fits\n\t    var trees = _.map(analysis_data[\"fits\"], function (d) {\n\t      return d3.layout.phylotree(\"body\")(d[\"tree string\"]);\n\t    });\n\t    var tree = trees[0];\n\t\n\t    self.tree = tree;\n\t\n\t    //TODO : Do not hard code model here\n\t    var tree_length = analysis_data[\"fits\"][\"Full model\"][\"tree length\"];\n\t    var branch_annotations = analysis_data[\"fits\"][\"Full model\"][\"branch-annotations\"];\n\t    var test_results = analysis_data[\"test results\"];\n\t\n\t    var rate_classes = this.getRateClasses(branch_annotations),\n\t        proportions = this.getBranchProportion(rate_classes),\n\t        length_proportions = this.getBranchLengthProportion(rate_classes, branch_annotations, tree_length),\n\t        num_under_selection = this.getNumUnderSelection(rate_classes, branch_annotations, test_results);\n\t\n\t    // zip objects into matrix\n\t    var keys = _.keys(rate_classes);\n\t\n\t    var summary_rows = _.zip(keys, _.values(rate_classes), _.values(proportions), _.values(length_proportions), _.values(num_under_selection));\n\t\n\t    summary_rows.sort(function (a, b) {\n\t      if (a[0] == b[0]) {\n\t        return a[1] < b[1] ? -1 : a[1] == b[1] ? 0 : 1;\n\t      }\n\t      return a[0] - b[0];\n\t    });\n\t\n\t    return summary_rows;\n\t  },\n\t\n\t  getTreeSummaryColumns: function getTreeSummaryColumns(table_row_data) {\n\t\n\t    var omega_header = '<th>ω rate<br>classes</th>',\n\t        branch_num_header = '<th># of <br>branches</th>',\n\t        branch_prop_header = '<th>% of <br>branches</th>',\n\t        branch_prop_length_header = '<th>% of tree <br>length</th>',\n\t        under_selection_header = '<th># under <br>selection</th>';\n\t\n\t    // inspect table_row_data and return header\n\t    var all_columns = [omega_header, branch_num_header, branch_prop_header, branch_prop_length_header, under_selection_header];\n\t\n\t    // validate each table row with its associated header\n\t    if (table_row_data.length == 0) {\n\t      return [];\n\t    }\n\t\n\t    // trim columns to length of table_row_data\n\t    var column_headers = _.take(all_columns, table_row_data[0].length);\n\t\n\t    return column_headers;\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t    var table_row_data = this.getSummaryRows(nextProps.json),\n\t        table_columns = this.getTreeSummaryColumns(table_row_data);\n\t\n\t    this.setState({\n\t      table_row_data: table_row_data,\n\t      table_columns: table_columns\n\t    });\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate() {\n\t\n\t    d3.select('#summary-tree-header').empty();\n\t\n\t    var tree_summary_columns = d3.select('#summary-tree-header');\n\t\n\t    tree_summary_columns = tree_summary_columns.selectAll(\"th\").data(this.state.table_columns);\n\t    tree_summary_columns.enter().append(\"th\");\n\t    tree_summary_columns.html(function (d) {\n\t      return d;\n\t    });\n\t\n\t    var tree_summary_rows = d3.select('#summary-tree-table').selectAll(\"tr\").data(this.state.table_row_data);\n\t    tree_summary_rows.enter().append('tr');\n\t    tree_summary_rows.exit().remove();\n\t    tree_summary_rows = tree_summary_rows.selectAll(\"td\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    tree_summary_rows.enter().append(\"td\");\n\t    tree_summary_rows.html(function (d) {\n\t      return d;\n\t    });\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    return React.createElement(\n\t      'ul',\n\t      { className: 'list-group' },\n\t      React.createElement(\n\t        'li',\n\t        { className: 'list-group-item' },\n\t        React.createElement(\n\t          'h4',\n\t          { className: 'list-group-item-heading' },\n\t          React.createElement('i', { className: 'fa fa-tree' }),\n\t          'Tree'\n\t        ),\n\t        React.createElement(\n\t          'table',\n\t          { className: 'table table-hover table-condensed list-group-item-text' },\n\t          React.createElement('thead', { id: 'summary-tree-header' }),\n\t          React.createElement('tbody', { id: 'summary-tree-table' })\n\t        )\n\t      )\n\t    );\n\t  }\n\t\n\t});\n\t\n\t//TODO\n\t//<caption>\n\t//<p className=\"list-group-item-text text-muted\">\n\t//    Total tree length under the branch-site model is <strong id=\"summary-tree-length\">2.30</strong> expected substitutions per nucleotide site, and <strong id=\"summary-tree-length-mg94\">1.74</strong> under the MG94 model.\n\t//</p>\n\t//</caption>\n\t\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_tree_summary(json, element) {\n\t  React.render(React.createElement(TreeSummary, { json: json }), $(element)[0]);\n\t}\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction rerender_tree_summary(tree, element) {\n\t  $(element).empty();\n\t  render_tree_summary(tree, element);\n\t}\n\t\n\tmodule.exports.TreeSummary = TreeSummary;\n\tmodule.exports.render_tree_summary = render_tree_summary;\n\tmodule.exports.rerender_tree_summary = rerender_tree_summary;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _, $) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t__webpack_require__(208);\n\t\n\tvar Tree = React.createClass({\n\t    displayName: 'Tree',\n\t\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            json: this.props.json,\n\t            settings: this.props.settings\n\t        };\n\t    },\n\t\n\t    sortNodes: function sortNodes(asc) {\n\t\n\t        var self = this;\n\t\n\t        self.tree.traverse_and_compute(function (n) {\n\t            var d = 1;\n\t            if (n.children && n.children.length) {\n\t                d += d3.max(n.children, function (d) {\n\t                    return d[\"count_depth\"];\n\t                });\n\t            }\n\t            n[\"count_depth\"] = d;\n\t        });\n\t\n\t        self.tree.resort_children(function (a, b) {\n\t            return (a[\"count_depth\"] - b[\"count_depth\"]) * (asc ? 1 : -1);\n\t        });\n\t    },\n\t\n\t    getBranchLengths: function getBranchLengths() {\n\t\n\t        var self = this;\n\t\n\t        if (!this.state.json) {\n\t            return [];\n\t        }\n\t\n\t        var branch_lengths = self.settings[\"tree-options\"][\"hyphy-tree-branch-lengths\"][0] ? this.state.json[\"fits\"][this.which_model][\"branch-lengths\"] : null;\n\t\n\t        if (!branch_lengths) {\n\t\n\t            var nodes = _.filter(self.tree.get_nodes(), function (d) {\n\t                return d.parent;\n\t            });\n\t\n\t            branch_lengths = _.object(_.map(nodes, function (d) {\n\t                return d.name;\n\t            }), _.map(nodes, function (d) {\n\t                return parseFloat(d.attribute);\n\t            }));\n\t        }\n\t\n\t        return branch_lengths;\n\t    },\n\t\n\t    assignBranchAnnotations: function assignBranchAnnotations() {\n\t        if (this.state.json && this.state.json[\"fits\"][this.which_model]) {\n\t            this.tree.assign_attributes(this.state.json[\"fits\"][this.which_model][\"branch-annotations\"]);\n\t        }\n\t    },\n\t\n\t    renderDiscreteLegendColorScheme: function renderDiscreteLegendColorScheme(svg_container) {\n\t\n\t        var self = this,\n\t            svg = self.svg;\n\t\n\t        var color_fill = self.settings[\"tree-options\"][\"hyphy-tree-fill-color\"][0] ? \"black\" : \"red\";\n\t\n\t        var margins = {\n\t            'bottom': 30,\n\t            'top': 15,\n\t            'left': 40,\n\t            'right': 2\n\t        };\n\t\n\t        d3.selectAll(\"#color-legend\").remove();\n\t\n\t        var dc_legend = svg.append(\"g\").attr(\"id\", \"color-legend\").attr(\"class\", \"dc-legend\").attr(\"transform\", \"translate(\" + margins[\"left\"] + \",\" + margins[\"top\"] + \")\");\n\t\n\t        var fg_item = dc_legend.append(\"g\").attr(\"class\", \"dc-legend-item\").attr(\"transform\", \"translate(0,0)\");\n\t\n\t        fg_item.append(\"rect\").attr(\"width\", \"13\").attr(\"height\", \"13\").attr(\"fill\", color_fill);\n\t\n\t        fg_item.append(\"text\").attr(\"x\", \"15\").attr(\"y\", \"11\").text(\"Foreground\");\n\t\n\t        var bg_item = dc_legend.append(\"g\").attr(\"class\", \"dc-legend-item\").attr(\"transform\", \"translate(0,18)\");\n\t\n\t        bg_item.append(\"rect\").attr(\"width\", \"13\").attr(\"height\", \"13\").attr(\"fill\", \"gray\");\n\t\n\t        bg_item.append(\"text\").attr(\"x\", \"15\").attr(\"y\", \"11\").text(\"Background\");\n\t    },\n\t\n\t    renderLegendColorScheme: function renderLegendColorScheme(svg_container, attr_name, do_not_render) {\n\t\n\t        var self = this;\n\t\n\t        var branch_annotations = this.state.json[\"fits\"][this.which_model][\"branch-annotations\"];\n\t\n\t        var svg = self.svg;\n\t\n\t        // clear existing linearGradients\n\t        d3.selectAll(\".legend-definitions\").selectAll(\"linearGradient\").remove();\n\t        d3.selectAll(\"#color-legend\").remove();\n\t\n\t        if (branch_annotations && !do_not_render) {\n\t            var bar_width = 70,\n\t                bar_height = 300,\n\t                margins = {\n\t                'bottom': 30,\n\t                'top': 15,\n\t                'left': 40,\n\t                'right': 2\n\t            };\n\t\n\t            var this_grad = svg.append(\"defs\").attr(\"class\", \"legend-definitions\").append(\"linearGradient\").attr(\"id\", \"_omega_bar\").attr(\"x1\", \"0%\").attr(\"y1\", \"0%\").attr(\"x2\", \"0%\").attr(\"y2\", \"100%\");\n\t\n\t            var omega_scale = d3.scale.pow().exponent(this.scaling_exponent).domain(d3.extent(self.omega_color.domain())).range([0, 1]),\n\t                axis_scale = d3.scale.pow().exponent(this.scaling_exponent).domain(d3.extent(self.omega_color.domain())).range([0, bar_height - margins['top'] - margins['bottom']]);\n\t\n\t            self.omega_color.domain().forEach(function (d) {\n\t                this_grad.append(\"stop\").attr(\"offset\", \"\" + omega_scale(d) * 100 + \"%\").style(\"stop-color\", self.omega_color(d));\n\t            });\n\t\n\t            var g_container = svg.append(\"g\").attr(\"id\", \"color-legend\").attr(\"transform\", \"translate(\" + margins[\"left\"] + \",\" + margins[\"top\"] + \")\");\n\t\n\t            g_container.append(\"rect\").attr(\"x\", 0).attr(\"width\", bar_width - margins['left'] - margins['right']).attr(\"y\", 0).attr(\"height\", bar_height - margins['top'] - margins['bottom']).style(\"fill\", \"url(#_omega_bar)\");\n\t\n\t            var draw_omega_bar = d3.svg.axis().scale(axis_scale).orient(\"left\").tickFormat(d3.format(\".1r\")).tickValues([0, 0.01, 0.1, 0.5, 1, 2, 5, 10]);\n\t\n\t            var scale_bar = g_container.append(\"g\");\n\t\n\t            scale_bar.style(\"font-size\", \"14\").attr(\"class\", \"hyphy-omega-bar\").call(draw_omega_bar);\n\t\n\t            scale_bar.selectAll(\"text\").style(\"text-anchor\", \"right\");\n\t\n\t            var _label = '';\n\t            var x_label = _label = scale_bar.append(\"g\").attr(\"class\", \"hyphy-omega-bar\");\n\t            x_label = x_label.selectAll(\"text\").data([attr_name]);\n\t            x_label.enter().append(\"text\");\n\t            x_label.text(function (d) {\n\t                return $('<textarea />').html(d).text();\n\t            }).attr(\"transform\", \"translate(\" + (bar_width - margins['left'] - margins['right']) * 0.5 + \",\" + (bar_height - margins['bottom']) + \")\").style(\"text-anchor\", \"middle\").style(\"font-size\", \"18\").attr(\"dx\", \"0.0em\").attr(\"dy\", \"0.1em\");\n\t        }\n\t    },\n\t\n\t    setHandlers: function setHandlers() {\n\t\n\t        var self = this;\n\t\n\t        $(\"#hyphy-error-hide\").on(\"click\", function (e) {\n\t            d3.select(\"#hyphy-error\").style(\"display\", \"none\");\n\t            e.preventDefault();\n\t        });\n\t\n\t        $(\".hyphy-tree-trigger\").on(\"click\", function (e) {\n\t\n\t            self.renderTree();\n\t        });\n\t\n\t        $(\".tree-tab-btn\").on('click', function (e) {\n\t            self.tree.placenodes().update();\n\t        });\n\t\n\t        $(\"#export-phylo-svg\").on('click', function (e) {\n\t            datamonkey.save_image(\"svg\", \"#tree_container\");\n\t        });\n\t\n\t        $(\"#export-phylo-png\").on('click', function (e) {\n\t            datamonkey.save_image(\"png\", \"#tree_container\");\n\t        });\n\t\n\t        $(\"#export-phylo-nwk\").on('click', function (e) {\n\t            var nwk = self.tree.get_newick(function () {});\n\t            var pom = document.createElement('a');\n\t            pom.setAttribute('href', 'data:text/octet-stream;charset=utf-8,' + encodeURIComponent(nwk));\n\t            pom.setAttribute('download', 'nwk.txt');\n\t            $(\"body\").append(pom);\n\t            pom.click();\n\t            pom.remove();\n\t        });\n\t    },\n\t\n\t    setTreeHandlers: function setTreeHandlers() {\n\t\n\t        var self = this;\n\t        var tree_object = self.tree;\n\t\n\t        $(\"[data-direction]\").on(\"click\", function (e) {\n\t            var which_function = $(this).data(\"direction\") == 'vertical' ? tree_object.spacing_x : tree_object.spacing_y;\n\t            which_function(which_function() + +$(this).data(\"amount\")).update();\n\t        });\n\t\n\t        $(\".phylotree-layout-mode\").on(\"change\", function (e) {\n\t            if ($(this).is(':checked')) {\n\t                if (tree_object.radial() != ($(this).data(\"mode\") == \"radial\")) {\n\t                    tree_object.radial(!tree_object.radial()).placenodes().update();\n\t                }\n\t            }\n\t        });\n\t\n\t        $(\".phylotree-align-toggler\").on(\"change\", function (e) {\n\t            if ($(this).is(':checked')) {\n\t                if (tree_object.align_tips($(this).data(\"align\") == \"right\")) {\n\t                    tree_object.placenodes().update();\n\t                }\n\t            }\n\t        });\n\t\n\t        $(\"#sort_original\").on(\"click\", function (e) {\n\t            tree_object.resort_children(function (a, b) {\n\t                return a[\"original_child_order\"] - b[\"original_child_order\"];\n\t            });\n\t\n\t            e.preventDefault();\n\t        });\n\t\n\t        $(\"#sort_ascending\").on(\"click\", function (e) {\n\t            self.sortNodes(true);\n\t            e.preventDefault();\n\t        });\n\t\n\t        $(\"#sort_descending\").on(\"click\", function (e) {\n\t            self.sortNodes(false);\n\t            e.preventDefault();\n\t        });\n\t    },\n\t\n\t    setPartitionList: function setPartitionList() {\n\t\n\t        var self = this;\n\t\n\t        // Check if partition list exists\n\t        if (!self.props.json[\"partition\"]) {\n\t            d3.select(\"#hyphy-tree-highlight-div\").style(\"display\", \"none\");\n\t            d3.select(\"#hyphy-tree-highlight\").style(\"display\", \"none\");\n\t            return;\n\t        }\n\t\n\t        // set tree partitions\n\t        self.tree.set_partitions(self.props.json[\"partition\"]);\n\t\n\t        var partition_list = d3.select(\"#hyphy-tree-highlight-branches\").selectAll(\"li\").data([['None']].concat(d3.keys(self.props.json[\"partition\"]).map(function (d) {\n\t            return [d];\n\t        }).sort()));\n\t\n\t        partition_list.enter().append(\"li\");\n\t        partition_list.exit().remove();\n\t        partition_list = partition_list.selectAll(\"a\").data(function (d) {\n\t            return d;\n\t        });\n\t\n\t        partition_list.enter().append(\"a\");\n\t        partition_list.attr(\"href\", \"#\").on(\"click\", function (d, i) {\n\t            d3.select(\"#hyphy-tree-highlight\").attr(\"value\", d);\n\t            self.renderTree();\n\t        });\n\t\n\t        // set default to passed setting\n\t        partition_list.text(function (d) {\n\t            if (d == \"RELAX.test\") {\n\t                this.click();\n\t            }\n\t            return d;\n\t        });\n\t    },\n\t\n\t    setModelList: function setModelList() {\n\t\n\t        var self = this;\n\t\n\t        if (!this.state.json) {\n\t            return [];\n\t        }\n\t\n\t        this.state.settings['suppress-tree-render'] = true;\n\t\n\t        var def_displayed = false;\n\t\n\t        var model_list = d3.select(\"#hyphy-tree-model-list\").selectAll(\"li\").data(d3.keys(this.state.json[\"fits\"]).map(function (d) {\n\t            return [d];\n\t        }).sort());\n\t\n\t        model_list.enter().append(\"li\");\n\t        model_list.exit().remove();\n\t        model_list = model_list.selectAll(\"a\").data(function (d) {\n\t            return d;\n\t        });\n\t\n\t        model_list.enter().append(\"a\");\n\t\n\t        model_list.attr(\"href\", \"#\").on(\"click\", function (d, i) {\n\t            d3.select(\"#hyphy-tree-model\").attr(\"value\", d);\n\t            self.renderTree();\n\t        });\n\t\n\t        model_list.text(function (d) {\n\t\n\t            if (d == \"General Descriptive\") {\n\t                def_displayed = true;\n\t                this.click();\n\t            }\n\t\n\t            if (!def_displayed && d == \"Alternative\") {\n\t                def_displayed = true;\n\t                this.click();\n\t            }\n\t\n\t            if (!def_displayed && d == \"Partitioned MG94xREV\") {\n\t                def_displayed = true;\n\t                this.click();\n\t            }\n\t\n\t            if (!def_displayed && d == \"MG94\") {\n\t                def_displayed = true;\n\t                this.click();\n\t            }\n\t\n\t            if (!def_displayed && d == \"Full model\") {\n\t                def_displayed = true;\n\t                this.click();\n\t            }\n\t\n\t            return d;\n\t        });\n\t\n\t        this.settings['suppress-tree-render'] = false;\n\t    },\n\t\n\t    initialize: function initialize() {\n\t\n\t        var self = this;\n\t\n\t        this.settings = this.state.settings;\n\t\n\t        if (!this.settings) {\n\t            return null;\n\t        }\n\t\n\t        if (!this.state.json) {\n\t            return null;\n\t        }\n\t\n\t        $(\"#hyphy-tree-branch-lengths\").click();\n\t\n\t        this.scaling_exponent = 0.33;\n\t        this.omega_format = d3.format(\".3r\");\n\t        this.prop_format = d3.format(\".2p\");\n\t        this.fit_format = d3.format(\".2f\");\n\t        this.p_value_format = d3.format(\".4f\");\n\t\n\t        var json = this.state.json;\n\t        var analysis_data = json;\n\t\n\t        this.width = 800;\n\t        this.height = 600;\n\t\n\t        this.which_model = this.settings[\"tree-options\"][\"hyphy-tree-model\"][0];\n\t        this.legend_type = this.settings[\"hyphy-tree-legend-type\"];\n\t\n\t        this.setHandlers();\n\t        this.setModelList();\n\t        this.initializeTree();\n\t        this.setPartitionList();\n\t    },\n\t\n\t    initializeTree: function initializeTree() {\n\t\n\t        var self = this;\n\t\n\t        var analysis_data = self.state.json;\n\t\n\t        var width = this.width,\n\t            height = this.height,\n\t            alpha_level = 0.05,\n\t            branch_lengths = [];\n\t\n\t        if (!this.tree) {\n\t            this.tree = d3.layout.phylotree(\"body\").size([height, width]).separation(function (a, b) {\n\t                return 0;\n\t            });\n\t        }\n\t\n\t        this.setTreeHandlers();\n\t\n\t        // clear any existing svg\n\t        d3.select(\"#tree_container\").html(\"\");\n\t\n\t        this.svg = d3.select(\"#tree_container\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n\t\n\t        this.tree.branch_name(null);\n\t        this.tree.node_span('equal');\n\t        this.tree.options({\n\t            'draw-size-bubbles': false,\n\t            'selectable': false,\n\t            'left-right-spacing': 'fit-to-size',\n\t            'left-offset': 100,\n\t            'color-fill': this.settings[\"tree-options\"][\"hyphy-tree-fill-color\"][0]\n\t        }, false);\n\t\n\t        this.assignBranchAnnotations();\n\t\n\t        self.omega_color = d3.scale.pow().exponent(this.scaling_exponent).domain([0, 0.25, 1, 5, 10]).range(this.settings[\"tree-options\"][\"hyphy-tree-fill-color\"][0] ? [\"#DDDDDD\", \"#AAAAAA\", \"#888888\", \"#444444\", \"#000000\"] : [\"#5e4fa2\", \"#3288bd\", \"#e6f598\", \"#f46d43\", \"#9e0142\"]).clamp(true);\n\t\n\t        self.renderTree();\n\t\n\t        if (self.legend_type == 'discrete') {\n\t            self.renderDiscreteLegendColorScheme(\"tree_container\");\n\t        } else {\n\t            self.renderLegendColorScheme(\"tree_container\", analysis_data[\"fits\"][this.which_model][\"annotation-tag\"]);\n\t        }\n\t\n\t        if (this.settings.edgeColorizer) {\n\t            this.edgeColorizer = this.settings.edgeColorizer;\n\t        }\n\t\n\t        this.tree.style_edges(this.edgeColorizer);\n\t        this.tree.style_nodes(this.nodeColorizer);\n\t\n\t        this.tree.spacing_x(30, true);\n\t        this.tree.layout();\n\t        this.tree.placenodes().update();\n\t        this.tree.layout();\n\t    },\n\t\n\t    renderTree: function renderTree(skip_render) {\n\t\n\t        var self = this;\n\t        var analysis_data = this.state.json;\n\t        var svg = self.svg;\n\t\n\t        if (!this.settings['suppress-tree-render']) {\n\t\n\t            var do_layout = false;\n\t\n\t            for (var k in this.settings[\"tree-options\"]) {\n\t\n\t                //TODO : Check to make sure settings has a matching field\n\t                if (k == 'hyphy-tree-model') {\n\t\n\t                    var controller = d3.select(\"#\" + k),\n\t                        controller_value = controller.attr(\"value\") || controller.property(\"checked\");\n\t\n\t                    if (controller_value != this.settings[\"tree-options\"][k][0] && controller_value != false) {\n\t                        this.settings[\"tree-options\"][k][0] = controller_value;\n\t                        do_layout = do_layout || this.settings[\"tree-options\"][k][1];\n\t                    }\n\t                } else {\n\t                    var controller = d3.select(\"#\" + k),\n\t                        controller_value = controller.attr(\"value\") || controller.property(\"checked\");\n\t\n\t                    if (controller_value != this.settings[\"tree-options\"][k][0]) {\n\t                        this.settings[\"tree-options\"][k][0] = controller_value;\n\t                        do_layout = do_layout || this.settings[\"tree-options\"][k][1];\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Update which_model\n\t            if (self.which_model != this.settings[\"tree-options\"][\"hyphy-tree-model\"][0]) {\n\t                self.which_model = this.settings[\"tree-options\"][\"hyphy-tree-model\"][0];\n\t                self.initializeTree();\n\t                return;\n\t            }\n\t\n\t            if (_.indexOf(_.keys(analysis_data), \"tree\") > -1) {\n\t                this.tree(analysis_data[\"tree\"]).svg(svg);\n\t            } else {\n\t                this.tree(analysis_data[\"fits\"][self.which_model][\"tree string\"]).svg(svg);\n\t            }\n\t\n\t            this.branch_lengths = this.getBranchLengths();\n\t\n\t            this.tree.font_size(18);\n\t            this.tree.scale_bar_font_size(14);\n\t            this.tree.node_circle_size(0);\n\t\n\t            this.tree.branch_length(function (n) {\n\t                if (self.branch_lengths) {\n\t                    return self.branch_lengths[n.name] || 0;\n\t                }\n\t                return undefined;\n\t            });\n\t\n\t            this.assignBranchAnnotations();\n\t\n\t            if (_.findKey(analysis_data, \"partition\")) {\n\t                this.partition = (this.settings[\"tree-options\"][\"hyphy-tree-highlight\"] ? analysis_data[\"partition\"][this.settings[\"tree-options\"][\"hyphy-tree-highlight\"][0]] : null) || null;\n\t            } else {\n\t                this.partition = null;\n\t            }\n\t\n\t            self.omega_color = d3.scale.pow().exponent(self.scaling_exponent).domain([0, 0.25, 1, 5, 10]).range(self.settings[\"tree-options\"][\"hyphy-tree-fill-color\"][0] ? [\"#DDDDDD\", \"#AAAAAA\", \"#888888\", \"#444444\", \"#000000\"] : [\"#5e4fa2\", \"#3288bd\", \"#e6f598\", \"#f46d43\", \"#9e0142\"]).clamp(true);\n\t\n\t            self.tree.options({\n\t                'color-fill': self.settings[\"tree-options\"][\"hyphy-tree-fill-color\"][0]\n\t            }, false);\n\t\n\t            d3.select(\".phylotree-definitions\").selectAll(\"linearGradient\").remove();\n\t\n\t            // TODO: Should be a prop. Hide or show legend.\n\t            if (!this.settings[\"tree-options\"][\"hyphy-tree-hide-legend\"][0]) {\n\t                d3.select(\"#color-legend\").style(\"visibility\", \"visible\");\n\t\n\t                if (self.legend_type) {\n\t                    self.renderDiscreteLegendColorScheme(\"tree_container\");\n\t                } else {\n\t                    self.renderLegendColorScheme(\"tree_container\", self.state.json[\"fits\"][self.which_model][\"annotation-tag\"]);\n\t                }\n\t            } else {\n\t                d3.select(\"#color-legend\").style(\"visibility\", \"hidden\");\n\t            }\n\t\n\t            if (!skip_render) {\n\t                if (do_layout) {\n\t                    this.tree.update_layout();\n\t                }\n\t                //d3_phylotree_trigger_refresh(this.tree);\n\t                //this.tree.trigger_refresh();\n\t            }\n\t        }\n\t    },\n\t\n\t    componentDidMount: function componentDidMount() {\n\t        this.initialize();\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t        this.setState({\n\t            json: nextProps.json,\n\t            settings: nextProps.settings\n\t        });\n\t    },\n\t\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        this.initialize();\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        return React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'cold-md-12' },\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'input-group input-group-sm' },\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'input-group-btn' },\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default dropdown-toggle', 'data-toggle': 'dropdown' },\n\t                                'Export',\n\t                                React.createElement('span', { className: 'caret' })\n\t                            ),\n\t                            React.createElement(\n\t                                'ul',\n\t                                { className: 'dropdown-menu' },\n\t                                React.createElement(\n\t                                    'li',\n\t                                    { id: 'export-phylo-png' },\n\t                                    React.createElement(\n\t                                        'a',\n\t                                        { href: '#' },\n\t                                        React.createElement('i', { className: 'fa fa-image' }),\n\t                                        ' Image'\n\t                                    )\n\t                                ),\n\t                                React.createElement(\n\t                                    'li',\n\t                                    { id: 'export-phylo-nwk' },\n\t                                    React.createElement(\n\t                                        'a',\n\t                                        { href: '#' },\n\t                                        React.createElement('i', { className: 'fa fa-file-o' }),\n\t                                        ' Newick File'\n\t                                    )\n\t                                )\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', 'data-direction': 'vertical', 'data-amount': '1', title: 'Expand vertical spacing' },\n\t                                React.createElement('i', { className: 'fa fa-arrows-v' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', 'data-direction': 'vertical', 'data-amount': '-1', title: 'Compress vertical spacing' },\n\t                                React.createElement('i', { className: 'fa  fa-compress fa-rotate-135' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', 'data-direction': 'horizontal', 'data-amount': '1', title: 'Expand horizonal spacing' },\n\t                                React.createElement('i', { className: 'fa fa-arrows-h' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', 'data-direction': 'horizontal', 'data-amount': '-1', title: 'Compress horizonal spacing' },\n\t                                React.createElement('i', { className: 'fa  fa-compress fa-rotate-45' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', id: 'sort_ascending', title: 'Sort deepest clades to the bototm' },\n\t                                React.createElement('i', { className: 'fa fa-sort-amount-asc' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', id: 'sort_descending', title: 'Sort deepsest clades to the top' },\n\t                                React.createElement('i', { className: 'fa fa-sort-amount-desc' })\n\t                            ),\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default btn-sm', id: 'sort_original', title: 'Restore original order' },\n\t                                React.createElement('i', { className: 'fa fa-sort' })\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'input-group-btn', 'data-toggle': 'buttons' },\n\t                            React.createElement(\n\t                                'label',\n\t                                { className: 'btn btn-default active btn-sm' },\n\t                                React.createElement('input', { type: 'radio', name: 'options', className: 'phylotree-layout-mode', 'data-mode': 'linear', autoComplete: 'off', checked: '', title: 'Layout left-to-right' }),\n\t                                'Linear'\n\t                            ),\n\t                            React.createElement(\n\t                                'label',\n\t                                { className: 'btn btn-default  btn-sm' },\n\t                                React.createElement('input', { type: 'radio', name: 'options', className: 'phylotree-layout-mode', 'data-mode': 'radial', autoComplete: 'off', title: 'Layout radially' }),\n\t                                ' Radial'\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'input-group-btn', 'data-toggle': 'buttons' },\n\t                            React.createElement(\n\t                                'label',\n\t                                { className: 'btn btn-default active btn-sm' },\n\t                                React.createElement('input', { type: 'radio', className: 'phylotree-align-toggler', 'data-align': 'left', name: 'options-align', autoComplete: 'off', checked: '', title: 'Align tips labels to branches' }),\n\t                                React.createElement('i', { className: 'fa fa-align-left' })\n\t                            ),\n\t                            React.createElement(\n\t                                'label',\n\t                                { className: 'btn btn-default btn-sm' },\n\t                                React.createElement('input', { type: 'radio', className: 'phylotree-align-toggler', 'data-align': 'right', name: 'options-align', autoComplete: 'off', title: 'Align tips labels to the edge of the plot' }),\n\t                                React.createElement('i', { className: 'fa fa-align-right' })\n\t                            )\n\t                        ),\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'input-group-btn' },\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default dropdown-toggle', 'data-toggle': 'dropdown' },\n\t                                'Model',\n\t                                React.createElement('span', { className: 'caret' })\n\t                            ),\n\t                            React.createElement('ul', { className: 'dropdown-menu', id: 'hyphy-tree-model-list' })\n\t                        ),\n\t                        React.createElement('input', { type: 'text', className: 'form-control disabled', id: 'hyphy-tree-model', disabled: true }),\n\t                        React.createElement(\n\t                            'div',\n\t                            { id: 'hyphy-tree-highlight-div', className: 'input-group-btn' },\n\t                            React.createElement(\n\t                                'button',\n\t                                { type: 'button', className: 'btn btn-default dropdown-toggle', 'data-toggle': 'dropdown' },\n\t                                'Highlight branch set',\n\t                                React.createElement('span', { className: 'caret' })\n\t                            ),\n\t                            React.createElement('ul', { className: 'dropdown-menu', id: 'hyphy-tree-highlight-branches' })\n\t                        ),\n\t                        React.createElement('input', { type: 'text', className: 'form-control disabled', id: 'hyphy-tree-highlight', disabled: true }),\n\t                        React.createElement(\n\t                            'span',\n\t                            { className: 'input-group-addon' },\n\t                            'Use model branch lengths',\n\t                            React.createElement('input', { type: 'checkbox', id: 'hyphy-tree-branch-lengths', className: 'hyphy-tree-trigger' })\n\t                        ),\n\t                        React.createElement(\n\t                            'span',\n\t                            { className: 'input-group-addon' },\n\t                            'Hide legend',\n\t                            React.createElement('input', { type: 'checkbox', id: 'hyphy-tree-hide-legend', className: 'hyphy-tree-trigger' })\n\t                        ),\n\t                        React.createElement(\n\t                            'span',\n\t                            { className: 'input-group-addon' },\n\t                            'Grayscale',\n\t                            React.createElement('input', { type: 'checkbox', id: 'hyphy-tree-fill-color', className: 'hyphy-tree-trigger' })\n\t                        )\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'col-md-12' },\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'row' },\n\t                        React.createElement('div', { id: 'tree_container', className: 'tree-widget' })\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t\n\t});\n\t\n\tfunction render_tree(json, element, settings) {\n\t    return React.render(React.createElement(Tree, { json: json, settings: settings }), $(element)[0]);\n\t}\n\t\n\tfunction rerender_tree(json, element, settings) {\n\t    $(element).empty();\n\t    return render_tree(json, settings);\n\t}\n\t\n\tmodule.exports.Tree = Tree;\n\tmodule.exports.render_tree = render_tree;\n\tmodule.exports.rerender_tree = rerender_tree;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 209:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(_, d3, $) {'use strict';\n\t\n\tvar _prop_chart = __webpack_require__(210);\n\t\n\tvar React = __webpack_require__(44);\n\t\n\t\n\tvar BranchTable = React.createClass({\n\t  displayName: 'BranchTable',\n\t\n\t\n\t  getInitialState: function getInitialState() {\n\t\n\t    // add the following\n\t    var table_row_data = this.getBranchRows(this.props.tree, this.props.test_results, this.props.annotations),\n\t        table_columns = this.getBranchColumns(table_row_data),\n\t        initial_model_name = _.take(_.keys(this.props.annotations)),\n\t        initial_omegas = this.props.annotations ? this.props.annotations[initial_model_name][\"omegas\"] : null;\n\t\n\t    var distro_settings = {\n\t      dimensions: { width: 600, height: 400 },\n\t      margins: { 'left': 50, 'right': 15, 'bottom': 15, 'top': 35 },\n\t      legend: false,\n\t      domain: [0.00001, 10000],\n\t      do_log_plot: true,\n\t      k_p: null,\n\t      plot: null,\n\t      svg_id: \"prop-chart\"\n\t    };\n\t\n\t    return {\n\t      tree: this.props.tree,\n\t      test_results: this.props.test_results,\n\t      annotations: this.props.annotations,\n\t      table_row_data: table_row_data,\n\t      table_columns: table_columns,\n\t      current_model_name: initial_model_name,\n\t      current_omegas: initial_omegas,\n\t      distro_settings: distro_settings\n\t    };\n\t  },\n\t\n\t  getBranchLength: function getBranchLength(m) {\n\t\n\t    if (!this.state.tree) {\n\t      return '';\n\t    }\n\t\n\t    return d3.format(\".4f\")(this.state.tree.get_node_by_name(m).attribute);\n\t  },\n\t\n\t  getLRT: function getLRT(branch) {\n\t    var formatted = d3.format(\".4f\")(branch[\"LRT\"]);\n\t    if (formatted == \"NaN\") {\n\t      return branch[\"LRT\"];\n\t    } else {\n\t      return formatted;\n\t    }\n\t  },\n\t\n\t  getPVal: function getPVal(branch) {\n\t    return d3.format(\".4f\")(branch[\"p\"]);\n\t  },\n\t\n\t  getUncorrectedPVal: function getUncorrectedPVal(branch) {\n\t    return d3.format(\".4f\")(branch[\"uncorrected p\"]);\n\t  },\n\t\n\t  getOmegaDistribution: function getOmegaDistribution(m, annotations) {\n\t\n\t    if (!annotations) {\n\t      return '';\n\t    }\n\t\n\t    var omega_string = \"\";\n\t\n\t    for (var i in annotations[m][\"omegas\"]) {\n\t      var omega = parseFloat(annotations[m][\"omegas\"][i][\"omega\"]);\n\t      var formatted_omega = \"∞\";\n\t      if (omega < 1e+20) {\n\t        formatted_omega = d3.format(\".3r\")(omega);\n\t      }\n\t      omega_string += \"&omega;<sub>\" + (parseInt(i) + 1) + \"</sub> = \" + formatted_omega + \" (\" + d3.format(\".2p\")(annotations[m][\"omegas\"][i][\"prop\"]) + \")<br/>\";\n\t    }\n\t\n\t    return omega_string;\n\t  },\n\t\n\t  getBranchRows: function getBranchRows(tree, test_results, annotations) {\n\t\n\t    var self = this;\n\t\n\t    var table_row_data = [],\n\t        omega_format = d3.format(\".3r\"),\n\t        prop_format = d3.format(\".2p\");\n\t\n\t    for (var m in test_results) {\n\t\n\t      var branch_row = [];\n\t      var branch = test_results[m];\n\t\n\t      branch_row = [m, this.getBranchLength(m), this.getLRT(branch), this.getPVal(branch), this.getUncorrectedPVal(branch), this.getOmegaDistribution(m, annotations)];\n\t\n\t      table_row_data.push(branch_row);\n\t    }\n\t\n\t    table_row_data.sort(function (a, b) {\n\t\n\t      if (a[0] == b[0]) {\n\t        return a[1] < b[1] ? -1 : a[1] == b[1] ? 0 : 1;\n\t      }\n\t\n\t      return a[3] - b[3];\n\t    });\n\t\n\t    return table_row_data;\n\t  },\n\t\n\t  setEvents: function setEvents() {\n\t\n\t    var self = this;\n\t\n\t    if (self.state.annotations) {\n\t      var branch_table = d3.select('#table-branch-table').selectAll(\"tr\");\n\t\n\t      branch_table.on(\"click\", function (d) {\n\t        var label = d[0];\n\t        self.setState({\n\t          current_model_name: label,\n\t          current_omegas: self.state.annotations[label][\"omegas\"]\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  createDistroChart: function createDistroChart() {\n\t\n\t    var self = this;\n\t\n\t    this.settings = {\n\t      dimensions: { width: 600, height: 400 },\n\t      margins: { 'left': 50, 'right': 15, 'bottom': 15, 'top': 15 },\n\t      has_zeros: true,\n\t      legend_id: null,\n\t      do_log_plot: true,\n\t      k_p: null,\n\t      plot: null,\n\t      svg_id: \"prop-chart\"\n\t    };\n\t  },\n\t\n\t  getBranchColumns: function getBranchColumns(table_row_data) {\n\t\n\t    if (table_row_data.length <= 0) {\n\t      return null;\n\t    }\n\t\n\t    var name_header = '<th>Name</th>',\n\t        length_header = '<th><abbr title=\"Branch Length\">B</abbr></th>',\n\t        lrt_header = '<th><abbr title=\"Likelihood ratio test statistic\">LRT</abbr></th>',\n\t        pvalue_header = '<th>Test p-value</th>',\n\t        uncorrected_pvalue_header = '<th>Uncorrected p-value</th>',\n\t        omega_header = '<th>ω distribution over sites</th>';\n\t\n\t    // inspect table_row_data and return header\n\t    var all_columns = [name_header, length_header, lrt_header, pvalue_header, uncorrected_pvalue_header, omega_header];\n\t\n\t    // validate each table row with its associated header\n\t\n\t    // trim columns to length of table_row_data\n\t    var column_headers = _.take(all_columns, table_row_data[0].length);\n\t\n\t    // remove all columns that have 0, null, or undefined rows\n\t    var items = d3.transpose(table_row_data);\n\t\n\t    return column_headers;\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t    var table_row_data = this.getBranchRows(nextProps.tree, nextProps.test_results, nextProps.annotations),\n\t        table_columns = this.getBranchColumns(table_row_data),\n\t        initial_model_name = _.take(_.keys(nextProps.annotations)),\n\t        initial_omegas = nextProps.annotations ? nextProps.annotations[initial_model_name][\"omegas\"] : null;\n\t\n\t    var distro_settings = {\n\t      dimensions: { width: 600, height: 400 },\n\t      margins: { 'left': 50, 'right': 15, 'bottom': 15, 'top': 15 },\n\t      legend: false,\n\t      domain: [0.00001, 10000],\n\t      do_log_plot: true,\n\t      k_p: null,\n\t      plot: null,\n\t      svg_id: \"prop-chart\"\n\t    };\n\t\n\t    if (nextProps.test_results && nextProps.annotations) {\n\t      this.setState({\n\t        tree: nextProps.tree,\n\t        test_results: nextProps.test_results,\n\t        annotations: nextProps.annotations,\n\t        table_row_data: table_row_data,\n\t        table_columns: table_columns,\n\t        current_model_name: initial_model_name,\n\t        current_omegas: initial_omegas,\n\t        distro_settings: distro_settings\n\t      });\n\t    }\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate() {\n\t\n\t    var branch_columns = d3.select('#table-branch-header');\n\t    branch_columns = branch_columns.selectAll(\"th\").data(this.state.table_columns);\n\t    branch_columns.enter().append(\"th\");\n\t\n\t    branch_columns.html(function (d) {\n\t      return d;\n\t    });\n\t\n\t    var branch_rows = d3.select('#table-branch-table').selectAll(\"tr\").data(this.state.table_row_data);\n\t\n\t    branch_rows.enter().append('tr');\n\t    branch_rows.exit().remove();\n\t    branch_rows.style('font-weight', function (d) {\n\t      return d[3] <= 0.05 ? 'bold' : 'normal';\n\t    });\n\t\n\t    branch_rows = branch_rows.selectAll(\"td\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    branch_rows.enter().append(\"td\");\n\t    branch_rows.html(function (d) {\n\t      return d;\n\t    });\n\t\n\t    this.createDistroChart();\n\t    this.setEvents();\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    var self = this;\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'row' },\n\t      React.createElement(\n\t        'div',\n\t        { id: 'hyphy-branch-table', className: 'col-md-7' },\n\t        React.createElement(\n\t          'table',\n\t          { className: 'table table-hover table-condensed' },\n\t          React.createElement('thead', { id: 'table-branch-header' }),\n\t          React.createElement('tbody', { id: 'table-branch-table' })\n\t        )\n\t      ),\n\t      React.createElement(\n\t        'div',\n\t        { id: 'primary-omega-tag', className: 'col-md-5' },\n\t        React.createElement(_prop_chart.PropChart, { name: self.state.current_model_name, omegas: self.state.current_omegas,\n\t          settings: self.state.distro_settings })\n\t      )\n\t    );\n\t  }\n\t\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_branch_table(tree, test_results, annotations, element) {\n\t  React.render(React.createElement(BranchTable, { tree: tree, test_results: test_results, annotations: annotations }), $(element)[0]);\n\t}\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction rerender_branch_table(tree, test_results, annotations, element) {\n\t  $(element).empty();\n\t  render_branch_table(tree, test_results, annotations, element);\n\t}\n\t\n\tmodule.exports.BranchTable = BranchTable;\n\tmodule.exports.render_branch_table = render_branch_table;\n\tmodule.exports.rerender_branch_table = rerender_branch_table;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(38), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 210:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _, $) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\t\n\tvar PropChart = React.createClass({\n\t    displayName: 'PropChart',\n\t\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            svg_id: null,\n\t            dimensions: { width: 600, height: 400 },\n\t            margins: { 'left': 50, 'right': 15, 'bottom': 25, 'top': 35 },\n\t            has_zeros: false,\n\t            legend_id: null,\n\t            do_log_plot: true,\n\t            k_p: null,\n\t            plot: null\n\t        };\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            model_name: this.props.name,\n\t            omegas: this.props.omegas,\n\t            settings: this.props.settings\n\t        };\n\t    },\n\t\n\t    setEvents: function setEvents() {\n\t        var self = this;\n\t\n\t        d3.select(\"#\" + this.save_svg_id).on('click', function (e) {\n\t            datamonkey.save_image(\"svg\", \"#\" + self.svg_id);\n\t        });\n\t\n\t        d3.select(\"#\" + this.save_png_id).on('click', function (e) {\n\t            datamonkey.save_image(\"png\", \"#\" + self.svg_id);\n\t        });\n\t    },\n\t\n\t    initialize: function initialize() {\n\t\n\t        // clear svg\n\t        d3.select(\"#prop-chart\").html(\"\");\n\t\n\t        this.data_to_plot = this.state.omegas;\n\t\n\t        // Set props from settings\n\t        this.svg_id = this.props.settings.svg_id;\n\t        this.dimensions = this.props.settings.dimensions || this.props.dimensions;\n\t        this.margins = this.props.settings.margins || this.props.margins;\n\t        this.legend_id = this.props.settings.legend || this.props.legend_id;\n\t        this.do_log_plot = this.props.settings.log || this.props.do_log_plot;\n\t        this.k_p = this.props.settings.k || this.props.k_p;\n\t\n\t        var dimensions = this.props.dimensions;\n\t        var margins = this.props.margins;\n\t\n\t        if (this.props.do_log_plot) {\n\t            this.has_zeros = this.data_to_plot.some(function (d) {\n\t                return d.omega <= 0;\n\t            });\n\t        }\n\t\n\t        this.plot_width = dimensions[\"width\"] - margins['left'] - margins['right'], this.plot_height = dimensions[\"height\"] - margins['top'] - margins['bottom'];\n\t\n\t        var domain = this.state.settings[\"domain\"];\n\t\n\t        this.omega_scale = (this.do_log_plot ? this.has_zeros ? d3.scale.pow().exponent(0.2) : d3.scale.log() : d3.scale.linear()).range([0, this.plot_width]).domain(domain).nice();\n\t\n\t        this.proportion_scale = d3.scale.linear().range([this.plot_height, 0]).domain([-0.05, 1]).clamp(true);\n\t\n\t        // compute margins -- circle AREA is proportional to the relative weight\n\t        // maximum diameter is (height - text margin)\n\t        this.svg = d3.select(\"#\" + this.svg_id).attr(\"width\", dimensions.width + margins['left'] + margins['right']).attr(\"height\", dimensions.height + margins['top'] + margins['bottom']);\n\t\n\t        this.plot = this.svg.selectAll(\".container\");\n\t\n\t        this.svg.selectAll(\"defs\").remove();\n\t\n\t        this.svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 10) /*must be smarter way to calculate shift*/\n\t        .attr(\"refY\", 4).attr(\"markerWidth\", 10).attr(\"markerHeight\", 8).attr(\"orient\", \"auto\").attr(\"stroke\", \"#000\").attr(\"fill\", \"#000\").append(\"path\").attr(\"d\", \"M 0,0 V8 L10,4 Z\");\n\t\n\t        if (this.plot.empty()) {\n\t            this.plot = this.svg.append(\"g\").attr(\"class\", \"container\");\n\t        }\n\t\n\t        this.plot.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \" , \" + this.margins[\"top\"] + \")\");\n\t        this.reference_omega_lines = this.plot.selectAll(\".hyphy-omega-line-reference\"), this.displacement_lines = this.plot.selectAll(\".hyphy-displacement-line\");\n\t\n\t        this.createNeutralLine();\n\t        this.createXAxis();\n\t        this.createYAxis();\n\t        this.setEvents();\n\t        this.createOmegaLine(this.state.omegas);\n\t        console.log('initialized everything');\n\t        //_.map(this.props.omegas, function(d) { return this.createOmegaLine(d[\"omega\"],d[\"prop\"]); });\n\t\n\t        console.log(this.svg);\n\t    },\n\t\n\t    createOmegaLine: function createOmegaLine(omegas) {\n\t\n\t        var self = this;\n\t        var data_to_plot = this.data_to_plot;\n\t\n\t        // generate color wheel from omegas\n\t        self.colores_g = _.shuffle([\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"]);\n\t\n\t        // ** Omega Line (Red) ** //\n\t        var omega_lines = this.plot.selectAll(\".hyphy-omega-line\").data(omegas);\n\t        omega_lines.enter().append(\"line\");\n\t        omega_lines.exit().remove();\n\t\n\t        omega_lines.transition().attr(\"x1\", function (d) {\n\t            return self.omega_scale(d.omega);\n\t        }).attr(\"x2\", function (d) {\n\t            return self.omega_scale(d.omega);\n\t        }).attr(\"y1\", function (d) {\n\t            return self.proportion_scale(-0.05);\n\t        }).attr(\"y2\", function (d) {\n\t            return self.proportion_scale(d.prop);\n\t        }).style(\"stroke\", function (d) {\n\t            var color = _.take(self.colores_g);\n\t            self.colores_g = _.rest(self.colores_g);\n\t            return color;\n\t        }).attr(\"class\", \"hyphy-omega-line\");\n\t    },\n\t\n\t    createNeutralLine: function createNeutralLine() {\n\t        var self = this;\n\t\n\t        // ** Neutral Line (Blue) ** //\n\t        var neutral_line = this.plot.selectAll(\".hyphy-neutral-line\").data([1]);\n\t        neutral_line.enter().append(\"line\").attr(\"class\", \"hyphy-neutral-line\");\n\t        neutral_line.exit().remove();\n\t        neutral_line.transition().attr(\"x1\", function (d) {\n\t            return self.omega_scale(d);\n\t        }).attr(\"x2\", function (d) {\n\t            return self.omega_scale(d);\n\t        }).attr(\"y1\", 0).attr(\"y2\", this.plot_height);\n\t    },\n\t    createXAxis: function createXAxis() {\n\t\n\t        // *** X-AXIS *** //\n\t        var xAxis = d3.svg.axis().scale(this.omega_scale).orient(\"bottom\");\n\t\n\t        if (this.do_log_plot) {\n\t            xAxis.ticks(10, this.has_zeros ? \".2r\" : \".1r\");\n\t        }\n\t\n\t        var x_axis = this.svg.selectAll(\".x.axis\");\n\t        var x_label;\n\t\n\t        if (x_axis.empty()) {\n\t            x_axis = this.svg.append(\"g\").attr(\"class\", \"x hyphy-axis\");\n\t\n\t            x_label = x_axis.append(\"g\").attr(\"class\", \"hyphy-axis-label x-label\");\n\t        } else {\n\t            x_label = x_axis.select(\".axis-label.x-label\");\n\t        }\n\t\n\t        x_axis.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \",\" + (this.plot_height + this.margins[\"top\"]) + \")\").call(xAxis);\n\t        x_label = x_label.attr(\"transform\", \"translate(\" + this.plot_width + \",\" + this.margins[\"bottom\"] + \")\").selectAll(\"text\").data(['\\u03C9']);\n\t        x_label.enter().append(\"text\");\n\t        x_label.text(function (d) {\n\t            return d;\n\t        }).style(\"text-anchor\", \"end\").attr(\"dy\", \"0.0em\");\n\t    },\n\t    createYAxis: function createYAxis() {\n\t\n\t        // *** Y-AXIS *** //\n\t        var yAxis = d3.svg.axis().scale(this.proportion_scale).orient(\"left\").ticks(10, \".1p\");\n\t\n\t        var y_axis = this.svg.selectAll(\".y.hyphy-axis\");\n\t        var y_label;\n\t\n\t        if (y_axis.empty()) {\n\t            y_axis = this.svg.append(\"g\").attr(\"class\", \"y hyphy-axis\");\n\t            y_label = y_axis.append(\"g\").attr(\"class\", \"hyphy-axis-label y-label\");\n\t        } else {\n\t            y_label = y_axis.select(\".hyphy-axis-label.y-label\");\n\t        }\n\t        y_axis.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \",\" + this.margins[\"top\"] + \")\").call(yAxis);\n\t        y_label = y_label.attr(\"transform\", \"translate(\" + -this.margins[\"left\"] + \",\" + 0 + \")\").selectAll(\"text\").data([\"Proportion of sites\"]);\n\t        y_label.enter().append(\"text\");\n\t        y_label.text(function (d) {\n\t            return d;\n\t        }).style(\"text-anchor\", \"start\").attr(\"dy\", \"-1em\");\n\t    },\n\t\n\t    componentDidMount: function componentDidMount() {\n\t        try {\n\t            this.initialize();\n\t        } catch (e) {};\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t        this.setState({\n\t            model_name: nextProps.name,\n\t            omegas: nextProps.omegas\n\t        });\n\t    },\n\t\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        try {\n\t            this.initialize();\n\t        } catch (e) {};\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        this.save_svg_id = \"export-\" + this.svg_id + \"-svg\";\n\t        this.save_png_id = \"export-\" + this.svg_id + \"-png\";\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'panel panel-default', id: this.state.model_name },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'panel-heading' },\n\t                React.createElement(\n\t                    'h3',\n\t                    { className: 'panel-title' },\n\t                    React.createElement(\n\t                        'strong',\n\t                        null,\n\t                        this.state.model_name\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'p',\n\t                    null,\n\t                    '\\u03C9 distribution'\n\t                ),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'btn-group' },\n\t                    React.createElement(\n\t                        'button',\n\t                        { id: this.save_svg_id, type: 'button', className: 'btn btn-default btn-sm' },\n\t                        React.createElement('span', { className: 'glyphicon glyphicon-floppy-save' }),\n\t                        ' SVG'\n\t                    ),\n\t                    React.createElement(\n\t                        'button',\n\t                        { id: this.save_png_id, type: 'button', className: 'btn btn-default btn-sm' },\n\t                        React.createElement('span', { className: 'glyphicon glyphicon-floppy-save' }),\n\t                        ' PNG'\n\t                    )\n\t                )\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { className: 'panel-body' },\n\t                React.createElement('svg', { id: this.svg_id })\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tfunction render_prop_chart(model_name, omegas, settings) {\n\t    return React.render(React.createElement(PropChart, { name: model_name, omegas: omegas, settings: settings }), document.getElementById(\"primary-omega-tag\"));\n\t}\n\t\n\tfunction rerender_prop_chart(model_name, omeags, settings) {\n\t\n\t    $(\"#primary-omega-tag\").empty();\n\t    return render_prop_chart(model_name, omeags, settings);\n\t}\n\t\n\tmodule.exports.render_prop_chart = render_prop_chart;\n\tmodule.exports.rerender_prop_chart = rerender_prop_chart;\n\tmodule.exports.PropChart = PropChart;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 211:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(46);\n\n\n/***/ },\n\n/***/ 212:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, $) {'use strict';\n\t\n\t__webpack_require__(213);\n\t\n\tvar crossfilter = __webpack_require__(215),\n\t    dc = __webpack_require__(218),\n\t    datamonkey = __webpack_require__(37);\n\t\n\tfunction busted_render_summary(json) {\n\t\n\t    var fit_format = d3.format(\".2f\"),\n\t        prop_format = d3.format(\".2p\"),\n\t        omega_format = d3.format(\".3r\");\n\t\n\t    var format_run_time = function format_run_time(seconds) {\n\t\n\t        var duration_string = \"\";\n\t        seconds = parseFloat(seconds);\n\t        var split_array = [Math.floor(seconds / (24 * 3600)), Math.floor(seconds / 3600) % 24, Math.floor(seconds / 60) % 60, seconds % 60],\n\t            quals = [\"d.\", \"hrs.\", \"min.\", \"sec.\"];\n\t\n\t        split_array.forEach(function (d, i) {\n\t            if (d) {\n\t                duration_string += \" \" + d + \" \" + quals[i];\n\t            }\n\t        });\n\t\n\t        return duration_string;\n\t    };\n\t\n\t    var branch_p_values = {};\n\t\n\t    var rate_distro_by_branch = {},\n\t        branch_count = 1,\n\t        selected_count = 0,\n\t        tested_count = 0;\n\t\n\t    var for_branch_table = [];\n\t\n\t    //var tree_info = render_bs_rel_tree (json, \"Unconstrained model\");\n\t\n\t    //var branch_lengths   = tree_info[0],\n\t    //    tested_branches  = {};\n\t\n\t    for (var p in json[\"test results\"]) {\n\t        branch_p_values[p] = json[\"test results\"][\"p\"];\n\t        if (branch_p_values[p] <= 0.05) {\n\t            selected_count++;\n\t        }\n\t    }\n\t\n\t    var fitted_distributions = json[\"fits\"][\"Unconstrained model\"][\"rate distributions\"];\n\t\n\t    for (var b in fitted_distributions) {\n\t        //for_branch_table.push ([b + (tested_branches[b] ? \"\" : \"\"),branch_lengths[b],0,0,0]);\n\t        try {\n\t            for_branch_table[branch_count][2] = json[\"test results\"][b][\"LRT\"];\n\t            for_branch_table[branch_count][3] = json[\"test results\"][b][\"p\"];\n\t            for_branch_table[branch_count][4] = json[\"test results\"][b][\"uncorrected p\"];\n\t        } catch (e) {}\n\t\n\t        var rateD = fitted_distributions[b];\n\t        rate_distro_by_branch[b] = rateD;\n\t        //for_branch_table[branch_count].push (branch_omegas[b]['distro']);\n\t        branch_count += 1;\n\t    }\n\t\n\t    // render summary data\n\t    var total_tree_length = d3.format(\"g\")(json[\"fits\"][\"Unconstrained model\"][\"tree length\"]);\n\t\n\t    for_branch_table = for_branch_table.sort(function (a, b) {\n\t        return a[4] - b[4];\n\t    });\n\t\n\t    d3.select('#summary-test-result').text(json['test results']['p'] <= 0.05 ? \"evidence\" : \"no evidence\");\n\t    d3.select('#summary-test-pvalue').text(d3.format(\".3f\")(json['test results']['p']));\n\t    d3.select('#summary-pmid').text(\"PubMed ID \" + json['PMID']).attr(\"href\", \"http://www.ncbi.nlm.nih.gov/pubmed/\" + json['PMID']);\n\t    d3.select('#summary-total-runtime').text(format_run_time(json['timers']['overall']));\n\t    d3.select('#summary-total-branches').text(branch_count);\n\t    d3.select('#summary-tested-branches').text(tested_count);\n\t    d3.select('#summary-selected-branches').text(selected_count);\n\t\n\t    has_background = json['background'];\n\t\n\t    var model_rows = [[], []];\n\t\n\t    if (has_background) {\n\t        model_rows.push([]);\n\t    }\n\t\n\t    for (k = 0; k < 2 + has_background; k++) {\n\t\n\t        var access_key,\n\t            secondary_key,\n\t            only_distro = 0;\n\t\n\t        if (k === 0) {\n\t\n\t            access_key = 'Unconstrained model';\n\t            secondary_key = 'FG';\n\t            model_rows[k].push('Unconstrained Model');\n\t            only_distro = 0;\n\t        } else {\n\t\n\t            if (has_background && k == 1) {\n\t                model_rows[k].push('(background branches)');\n\t                secondary_key = 'BG';\n\t                only_distro = 1;\n\t            } else {\n\t                access_key = 'Constrained model';\n\t                if (!(access_key in json['fits'])) {\n\t                    break;\n\t                }\n\t                model_rows[k].push('Constrained Model');\n\t                secondary_key = 'FG';\n\t                only_distro = 0;\n\t            }\n\t        }\n\t\n\t        try {\n\t            model_rows[k].push(only_distro ? '' : fit_format(json['fits'][access_key]['log-likelihood']));\n\t            model_rows[k].push(only_distro ? '' : json['fits'][access_key]['parameters']);\n\t            model_rows[k].push(only_distro ? '' : fit_format(json['fits'][access_key]['AIC-c']));\n\t            model_rows[k].push(only_distro ? '' : format_run_time(json['fits'][access_key]['runtime']));\n\t            model_rows[k].push(only_distro ? '' : fit_format(json['fits'][access_key]['tree length']));\n\t\n\t            for (j = 0; j < 3; j++) {\n\t                model_rows[k].push(omega_format(json['fits'][access_key]['rate distributions'][secondary_key][j][0]) + \" (\" + prop_format(json['fits'][access_key]['rate distributions'][secondary_key][j][1]) + \")\");\n\t            }\n\t        } catch (e) {\n\t            datamonkey.errorModal(e);\n\t        }\n\t    }\n\t\n\t    model_rows = d3.select('#summary-model-table').selectAll(\"tr\").data(model_rows);\n\t    model_rows.enter().append('tr');\n\t    model_rows.exit().remove();\n\t    model_rows = model_rows.selectAll(\"td\").data(function (d) {\n\t        return d;\n\t    });\n\t    model_rows.enter().append(\"td\");\n\t    model_rows.html(function (d) {\n\t        return d;\n\t    });\n\t}\n\t\n\tfunction busted_render_histogram(c, json) {\n\t\n\t    var self = this;\n\t\n\t    // Massage data for use with crossfilter\n\t    if (d3.keys(json[\"evidence ratios\"]).length === 0) {\n\t        // no evidence ratios computed\n\t        d3.selectAll(c).style(\"display\", \"none\");\n\t        d3.selectAll(\".dc-data-table\").style(\"display\", \"none\");\n\t        //d3.selectAll ('[id^=\"export\"]').style (\"display\", \"none\");\n\t        d3.selectAll(\"#er-thresholds\").style(\"display\", \"none\");\n\t        d3.selectAll(\"#apply-thresholds\").style(\"display\", \"none\");\n\t        return;\n\t    } else {\n\t        d3.selectAll(c).style(\"display\", \"block\");\n\t        d3.selectAll(\".dc-data-table\").style(\"display\", \"table\");\n\t        //d3.selectAll ('[id^=\"export\"]').style (\"display\", \"block\");\n\t        d3.selectAll(\"#er-thresholds\").style(\"display\", \"block\");\n\t        d3.selectAll(\"#apply-thresholds\").style(\"display\", \"block\");\n\t    }\n\t\n\t    var erc = json[\"evidence ratios\"][\"constrained\"][0];\n\t    erc = erc.map(function (d) {\n\t        return Math.log(d);\n\t    });\n\t\n\t    var test_set = json[\"test set\"].split(\",\");\n\t    var model_results = [];\n\t\n\t    erc.forEach(function (elem, i) {\n\t        model_results.push({\n\t            \"site_index\": i + 1,\n\t            \"unconstrained\": json[\"profiles\"][\"unconstrained\"][0][i],\n\t            \"constrained\": json[\"profiles\"][\"constrained\"][0][i],\n\t            \"optimized_null\": json[\"profiles\"][\"optimized null\"][0][i],\n\t            \"er_constrained\": Math.log(json[\"evidence ratios\"][\"constrained\"][0][i]),\n\t            \"er_optimized_null\": Math.log(json[\"evidence ratios\"][\"optimized null\"][0][i])\n\t        });\n\t    });\n\t\n\t    var data = crossfilter(model_results);\n\t    var site_index = data.dimension(function (d) {\n\t        return d[\"site_index\"];\n\t    });\n\t\n\t    var sitesByConstrained = site_index.group().reduce(function (p, v) {\n\t        p.constrained_evidence += +v[\"er_constrained\"];\n\t        p.optimized_null_evidence += +v[\"er_optimized_null\"];\n\t        return p;\n\t    }, function (p, v) {\n\t        p.constrained_evidence -= +v[\"er_constrained\"];\n\t        p.optimized_null_evidence -= +v[\"er_optimized_null\"];\n\t        return p;\n\t    }, function () {\n\t        return { constrained_evidence: 0, optimized_null_evidence: 0 };\n\t    });\n\t\n\t    var sitesByON = site_index.group().reduce(function (p, v) {\n\t        p.optimized_null_evidence += +v[\"er_optimized_null\"];\n\t        return p;\n\t    }, function (p, v) {\n\t        p.optimized_null_evidence -= +v[\"er_optimized_null\"];\n\t        return p;\n\t    }, function () {\n\t        return { optimized_null_evidence: 0 };\n\t    });\n\t\n\t    // Set up new crossfilter dimensions to slice the table by constrained or ON evidence ratio.\n\t    var er_constrained = data.dimension(function (d) {\n\t        return d[\"er_constrained\"];\n\t    });\n\t    var er_optimized_null = data.dimension(function (d) {\n\t        return d[\"er_optimized_null\"];\n\t    });\n\t    self.er_constrained = er_constrained;\n\t    self.er_optimized_null = er_optimized_null;\n\t\n\t    var composite = dc.compositeChart(c);\n\t\n\t    composite.width($(window).width()).height(300).dimension(site_index).x(d3.scale.linear().domain([1, erc.length])).yAxisLabel(\"2 * Ln Evidence Ratio\").xAxisLabel(\"Site Location\").legend(dc.legend().x($(window).width() - 150).y(20).itemHeight(13).gap(5)).renderHorizontalGridLines(true).compose([dc.lineChart(composite).group(sitesByConstrained, \"Constrained\").colors(d3.scale.ordinal().range(['green'])).valueAccessor(function (d) {\n\t        return 2 * d.value.constrained_evidence;\n\t    }).keyAccessor(function (d) {\n\t        return d.key;\n\t    }), dc.lineChart(composite).group(sitesByON, \"Optimized Null\").valueAccessor(function (d) {\n\t        return 2 * d.value.optimized_null_evidence;\n\t    }).keyAccessor(function (d) {\n\t        return d.key;\n\t    }).colors(d3.scale.ordinal().range(['red']))]);\n\t\n\t    composite.xAxis().ticks(50);\n\t\n\t    var numberFormat = d3.format(\".4f\");\n\t\n\t    // Render the table\n\t    dc.dataTable(\".dc-data-table\").dimension(site_index)\n\t    // data table does not use crossfilter group but rather a closure\n\t    // as a grouping function\n\t    .group(function (d) {\n\t        return site_index.bottom(1)[0].site_index + \" - \" + site_index.top(1)[0].site_index;\n\t    }).size(site_index.groupAll().reduceCount().value()) // (optional) max number of records to be shown, :default = 25\n\t    // dynamic columns creation using an array of closures\n\t    .columns([function (d) {\n\t        return d.site_index;\n\t    }, function (d) {\n\t        return numberFormat(d[\"unconstrained\"]);\n\t    }, function (d) {\n\t        return numberFormat(d[\"constrained\"]);\n\t    }, function (d) {\n\t        return numberFormat(d[\"optimized_null\"]);\n\t    }, function (d) {\n\t        return numberFormat(d[\"er_constrained\"]);\n\t    }, function (d) {\n\t        return numberFormat(d[\"er_optimized_null\"]);\n\t    }])\n\t\n\t    // (optional) sort using the given field, :default = function(d){return d;}\n\t    .sortBy(function (d) {\n\t        return d.site_index;\n\t    })\n\t\n\t    // (optional) sort order, :default ascending\n\t    .order(d3.ascending)\n\t\n\t    // (optional) custom renderlet to post-process chart using D3\n\t    .renderlet(function (table) {\n\t        table.selectAll(\".dc-table-group\").classed(\"info\", true);\n\t    });\n\t\n\t    $(\"#export-csv\").on('click', function (e) {\n\t        datamonkey.export_csv_button(site_index.top(Infinity));\n\t    });\n\t\n\t    $(\"#export-chart-svg\").on('click', function (e) {\n\t        // class manipulation for the image to display correctly\n\t        $(\"#chart-id\").find(\"svg\")[0].setAttribute(\"class\", \"dc-chart\");\n\t        datamonkey.save_image(\"svg\", \"#chart-id\");\n\t        $(\"#chart-id\").find(\"svg\")[0].setAttribute(\"class\", \"\");\n\t    });\n\t\n\t    $(\"#export-chart-png\").on('click', function (e) {\n\t        // class manipulation for the image to display correctly\n\t        $(\"#chart-id\").find(\"svg\")[0].setAttribute(\"class\", \"dc-chart\");\n\t        datamonkey.save_image(\"png\", \"#chart-id\");\n\t        $(\"#chart-id\").find(\"svg\")[0].setAttribute(\"class\", \"\");\n\t    });\n\t    $(\"#apply-thresholds\").on('click', function (e) {\n\t        var erConstrainedThreshold = document.getElementById(\"er-constrained-threshold\").value;\n\t        var erOptimizedNullThreshold = document.getElementById(\"er-optimized-null-threshold\").value;\n\t        self.er_constrained.filter(function (d) {\n\t            return d >= erConstrainedThreshold;\n\t        });\n\t        self.er_optimized_null.filter(function (d) {\n\t            return d >= erOptimizedNullThreshold;\n\t        });\n\t        dc.renderAll();\n\t    });\n\t\n\t    dc.renderAll();\n\t}\n\t\n\tmodule.exports.render_summary = busted_render_summary;\n\tmodule.exports.render_histogram = busted_render_histogram;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 213:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 219:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 221:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, _, $) {\"use strict\";\n\t\n\tvar _tree = __webpack_require__(207);\n\t\n\tvar _model_fits = __webpack_require__(205);\n\t\n\tvar _tree_summary = __webpack_require__(206);\n\t\n\tvar _prop_chart = __webpack_require__(210);\n\t\n\t__webpack_require__(208);\n\t__webpack_require__(219);\n\t\n\tvar React = __webpack_require__(44),\n\t    ReactDOM = __webpack_require__(211);\n\t\n\tvar datamonkey = __webpack_require__(37),\n\t    busted = __webpack_require__(212);\n\t\n\tvar BUSTED = React.createClass({\n\t  displayName: \"BUSTED\",\n\t\n\t\n\t  float_format: d3.format(\".2f\"),\n\t  p_value_format: d3.format(\".4f\"),\n\t  fit_format: d3.format(\".2f\"),\n\t\n\t  loadFromServer: function loadFromServer() {\n\t\n\t    var self = this;\n\t\n\t    d3.json(this.props.url, function (data) {\n\t\n\t      data[\"fits\"][\"Unconstrained model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Unconstrained model\");\n\t      data[\"fits\"][\"Constrained model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Constrained model\");\n\t\n\t      // rename rate distributions\n\t      data[\"fits\"][\"Unconstrained model\"][\"rate-distributions\"] = data[\"fits\"][\"Unconstrained model\"][\"rate distributions\"];\n\t      data[\"fits\"][\"Constrained model\"][\"rate-distributions\"] = data[\"fits\"][\"Constrained model\"][\"rate distributions\"];\n\t\n\t      // set display order\n\t      data[\"fits\"][\"Unconstrained model\"][\"display-order\"] = 0;\n\t      data[\"fits\"][\"Constrained model\"][\"display-order\"] = 1;\n\t\n\t      var json = data,\n\t          pmid = \"25701167\",\n\t          pmid_text = \"PubMed ID \" + pmid,\n\t          pmid_href = \"http://www.ncbi.nlm.nih.gov/pubmed/\" + pmid,\n\t          p = json[\"test results\"][\"p\"],\n\t          test_result = p <= 0.05 ? \"evidence\" : \"no evidence\";\n\t\n\t      var fg_rate = json[\"fits\"][\"Unconstrained model\"][\"rate distributions\"][\"FG\"];\n\t      var mapped_omegas = { \"omegas\": _.map(fg_rate, function (d) {\n\t          return _.object([\"omega\", \"prop\"], d);\n\t        }) };\n\t\n\t      self.setState({\n\t        p: p,\n\t        test_result: test_result,\n\t        json: json,\n\t        omegas: mapped_omegas[\"omegas\"],\n\t        pmid_text: pmid_text,\n\t        pmid_href: pmid_href\n\t      });\n\t    });\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t\n\t    var edgeColorizer = function edgeColorizer(element, data) {\n\t\n\t      var is_foreground = data.target.annotations.is_foreground,\n\t          color_fill = this.options()[\"color-fill\"] ? \"black\" : \"red\";\n\t\n\t      element.style('stroke', is_foreground ? color_fill : 'gray').style('stroke-linejoin', 'round').style('stroke-linejoin', 'round').style('stroke-linecap', 'round');\n\t    };\n\t\n\t    var tree_settings = {\n\t      'omegaPlot': {},\n\t      'tree-options': {\n\t        /* value arrays have the following meaning\n\t            [0] - the value of the attribute\n\t            [1] - does the change in attribute value trigger tree re-layout?\n\t        */\n\t        'hyphy-tree-model': [\"Unconstrained model\", true],\n\t        'hyphy-tree-highlight': [\"RELAX.test\", false],\n\t        'hyphy-tree-branch-lengths': [true, true],\n\t        'hyphy-tree-hide-legend': [true, false],\n\t        'hyphy-tree-fill-color': [true, false]\n\t      },\n\t      'hyphy-tree-legend-type': 'discrete',\n\t      'suppress-tree-render': false,\n\t      'chart-append-html': true,\n\t      'edgeColorizer': edgeColorizer\n\t    };\n\t\n\t    var distro_settings = {\n\t      dimensions: { width: 600, height: 400 },\n\t      margins: { 'left': 50, 'right': 15, 'bottom': 35, 'top': 35 },\n\t      legend: false,\n\t      domain: [0.00001, 100],\n\t      do_log_plot: true,\n\t      k_p: null,\n\t      plot: null,\n\t      svg_id: \"prop-chart\"\n\t    };\n\t\n\t    return {\n\t      distro_settings: distro_settings,\n\t      tree_settings: tree_settings,\n\t      constrained_threshold: \"Infinity\",\n\t      null_threshold: \"-Infinity\",\n\t      model_name: \"FG\"\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      p: null,\n\t      test_result: null,\n\t      json: null,\n\t      omegas: null,\n\t      pmid_text: null,\n\t      pmid_href: null\n\t    };\n\t  },\n\t\n\t  setEvents: function setEvents() {\n\t\n\t    var self = this;\n\t\n\t    $(\"#json_file\").on(\"change\", function (e) {\n\t      var files = e.target.files; // FileList object\n\t      if (files.length == 1) {\n\t        var f = files[0];\n\t        var reader = new FileReader();\n\t        reader.onload = function (theFile) {\n\t          return function (e) {\n\t\n\t            var data = JSON.parse(this.result);\n\t            data[\"fits\"][\"Unconstrained model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Unconstrained model\");\n\t            data[\"fits\"][\"Constrained model\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Constrained model\");\n\t\n\t            // rename rate distributions\n\t            data[\"fits\"][\"Unconstrained model\"][\"rate-distributions\"] = data[\"fits\"][\"Unconstrained model\"][\"rate distributions\"];\n\t            data[\"fits\"][\"Constrained model\"][\"rate-distributions\"] = data[\"fits\"][\"Constrained model\"][\"rate distributions\"];\n\t\n\t            var json = data,\n\t                pmid = \"25701167\",\n\t                pmid_text = \"PubMed ID \" + pmid,\n\t                pmid_href = \"http://www.ncbi.nlm.nih.gov/pubmed/\" + pmid,\n\t                p = json[\"test results\"][\"p\"],\n\t                test_result = p <= 0.05 ? \"evidence\" : \"no evidence\";\n\t\n\t            var fg_rate = json[\"fits\"][\"Unconstrained model\"][\"rate distributions\"][\"FG\"];\n\t            var mapped_omegas = { \"omegas\": _.map(fg_rate, function (d) {\n\t                return _.object([\"omega\", \"prop\"], d);\n\t              }) };\n\t\n\t            self.setState({\n\t              p: p,\n\t              test_result: test_result,\n\t              json: json,\n\t              omegas: mapped_omegas[\"omegas\"],\n\t              pmid_text: pmid_text,\n\t              pmid_href: pmid_href\n\t            });\n\t          };\n\t        }(f);\n\t        reader.readAsText(f);\n\t      }\n\t      $(\"#datamonkey-absrel-toggle-here\").dropdown(\"toggle\");\n\t      e.preventDefault();\n\t    });\n\t  },\n\t\n\t  formatBranchAnnotations: function formatBranchAnnotations(json, key) {\n\t\n\t    // attach is_foreground to branch annotations\n\t    var foreground = json[\"test set\"].split(\",\");\n\t\n\t    var tree = d3.layout.phylotree(),\n\t        nodes = tree(json[\"fits\"][key][\"tree string\"]).get_nodes(),\n\t        node_names = _.map(nodes, function (d) {\n\t      return d.name;\n\t    });\n\t\n\t    // Iterate over objects\n\t    var branch_annotations = _.object(node_names, _.map(node_names, function (d) {\n\t      return { is_foreground: _.indexOf(foreground, d) > -1 };\n\t    }));\n\t\n\t    return branch_annotations;\n\t  },\n\t\n\t  initialize: function initialize() {\n\t\n\t    var json = this.state.json;\n\t\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    busted.render_histogram(\"#chart-id\", json);\n\t\n\t    // delete existing tree\n\t    d3.select('#tree_container').select(\"svg\").remove();\n\t\n\t    var fg_rate = json[\"fits\"][\"Unconstrained model\"][\"rate distributions\"][\"FG\"],\n\t        omegas = fg_rate.map(function (r) {\n\t      return r[0];\n\t    }),\n\t        weights = fg_rate.map(function (r) {\n\t      return r[1];\n\t    });\n\t\n\t    var dsettings = {\n\t      'log': true,\n\t      'legend': false,\n\t      'domain': [0.00001, 20],\n\t      'dimensions': { 'width': 325, 'height': 300 }\n\t    };\n\t\n\t    $(\"#export-dist-svg\").on('click', function (e) {\n\t      datamonkey.save_image(\"svg\", \"#primary-omega-dist\");\n\t    });\n\t\n\t    $(\"#export-dist-png\").on('click', function (e) {\n\t      datamonkey.save_image(\"png\", \"#primary-omega-dist\");\n\t    });\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.loadFromServer();\n\t    this.setEvents();\n\t  },\n\t\n\t  render: function render() {\n\t\n\t    var self = this;\n\t    self.initialize();\n\t\n\t    return React.createElement(\n\t      \"div\",\n\t      { className: \"tab-content\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"tab-pane active\", id: \"summary_tab\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\", styleName: \"margin-top: 5px\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-md-12\" },\n\t            React.createElement(\n\t              \"ul\",\n\t              { className: \"list-group\" },\n\t              React.createElement(\n\t                \"li\",\n\t                { className: \"list-group-item list-group-item-info\" },\n\t                React.createElement(\n\t                  \"h3\",\n\t                  { className: \"list-group-item-heading\" },\n\t                  React.createElement(\"i\", { className: \"fa fa-list\", styleName: \"margin-right: 10px\" }),\n\t                  React.createElement(\n\t                    \"span\",\n\t                    { id: \"summary-method-name\" },\n\t                    \"BUSTED\"\n\t                  ),\n\t                  \" summary\"\n\t                ),\n\t                \"There is \",\n\t                React.createElement(\n\t                  \"strong\",\n\t                  null,\n\t                  this.state.test_result\n\t                ),\n\t                \" of episodic diversifying selection, with LRT p-value of \",\n\t                this.state.p,\n\t                \".\",\n\t                React.createElement(\n\t                  \"p\",\n\t                  null,\n\t                  React.createElement(\n\t                    \"small\",\n\t                    null,\n\t                    \"Please cite \",\n\t                    React.createElement(\n\t                      \"a\",\n\t                      { href: this.state.pmid_href, id: \"summary-pmid\" },\n\t                      this.state.pmid_text\n\t                    ),\n\t                    \" if you use this result in a publication, presentation, or other scientific work.\"\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { id: \"hyphy-model-fits\", className: \"col-lg-12\" },\n\t            React.createElement(_model_fits.ModelFits, { json: self.state.json })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"button\",\n\t          { id: \"export-chart-svg\", type: \"button\", className: \"btn btn-default btn-sm pull-right btn-export\" },\n\t          React.createElement(\"span\", { className: \"glyphicon glyphicon-floppy-save\" }),\n\t          \" Export Chart to SVG\"\n\t        ),\n\t        React.createElement(\n\t          \"button\",\n\t          { id: \"export-chart-png\", type: \"button\", className: \"btn btn-default btn-sm pull-right btn-export\" },\n\t          React.createElement(\"span\", { className: \"glyphicon glyphicon-floppy-save\" }),\n\t          \" Export Chart to PNG\"\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row hyphy-busted-site-table\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { id: \"chart-id\", className: \"col-lg-8\" },\n\t            React.createElement(\n\t              \"strong\",\n\t              null,\n\t              \"Model Evidence Ratios Per Site\"\n\t            ),\n\t            React.createElement(\"div\", { className: \"clearfix\" })\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"row site-table\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-lg-12\" },\n\t            React.createElement(\n\t              \"form\",\n\t              { id: \"er-thresholds\" },\n\t              React.createElement(\n\t                \"div\",\n\t                { className: \"form-group\" },\n\t                React.createElement(\n\t                  \"label\",\n\t                  { \"for\": \"er-constrained-threshold\" },\n\t                  \"Constrained Evidence Ratio Threshold:\"\n\t                ),\n\t                React.createElement(\"input\", { type: \"text\", className: \"form-control\", id: \"er-constrained-threshold\", defaultValue: this.props.constrained_threshold })\n\t              ),\n\t              React.createElement(\n\t                \"div\",\n\t                { className: \"form-group\" },\n\t                React.createElement(\n\t                  \"label\",\n\t                  { \"for\": \"er-optimized-null-threshold\" },\n\t                  \"Optimized Null Evidence Ratio Threshold:\"\n\t                ),\n\t                React.createElement(\"input\", { type: \"text\", className: \"form-control\", id: \"er-optimized-null-threshold\", defaultValue: this.props.null_threshold })\n\t              )\n\t            ),\n\t            React.createElement(\n\t              \"button\",\n\t              { id: \"export-csv\", type: \"button\", className: \"btn btn-default btn-sm pull-right hyphy-busted-btn-export\" },\n\t              React.createElement(\"span\", { className: \"glyphicon glyphicon-floppy-save\" }),\n\t              \" Export Table to CSV\"\n\t            ),\n\t            React.createElement(\n\t              \"button\",\n\t              { id: \"apply-thresholds\", type: \"button\", className: \"btn btn-default btn-sm pull-right hyphy-busted-btn-export\" },\n\t              \"Apply Thresholds\"\n\t            ),\n\t            React.createElement(\n\t              \"table\",\n\t              { id: \"sites\", className: \"table sites dc-data-table\" },\n\t              React.createElement(\n\t                \"thead\",\n\t                null,\n\t                React.createElement(\n\t                  \"tr\",\n\t                  { className: \"header\" },\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Site Index\"\n\t                  ),\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Unconstrained Likelihood\"\n\t                  ),\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Constrained Likelihood\"\n\t                  ),\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Optimized Null Likelihood\"\n\t                  ),\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Constrained Evidence Ratio\"\n\t                  ),\n\t                  React.createElement(\n\t                    \"th\",\n\t                    null,\n\t                    \"Optimized Null Evidence Ratio\"\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"tab-pane\", id: \"tree_tab\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-md-12\" },\n\t          React.createElement(_tree.Tree, { json: self.state.json,\n\t            settings: self.props.tree_settings })\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { className: \"col-md-12\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { id: \"primary-omega-dist\", className: \"panel-body\" },\n\t            React.createElement(_prop_chart.PropChart, { name: self.props.model_name, omegas: self.state.omegas,\n\t              settings: self.props.distro_settings })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tvar render_busted = function render_busted(url, element) {\n\t  ReactDOM.render(React.createElement(BUSTED, { url: url }), document.getElementById(element));\n\t};\n\t\n\tmodule.exports = render_busted;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(41), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 222:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3, $) {\"use strict\";\n\t\n\tvar _model_fits = __webpack_require__(205);\n\t\n\tvar _tree_summary = __webpack_require__(206);\n\t\n\tvar _tree = __webpack_require__(207);\n\t\n\tvar _omega_plots = __webpack_require__(223);\n\t\n\tvar React = __webpack_require__(44);\n\tvar _ = __webpack_require__(41);\n\tvar RELAX = React.createClass({\n\t  displayName: \"RELAX\",\n\t\n\t\n\t  float_format: d3.format(\".2f\"),\n\t  p_value_format: d3.format(\".4f\"),\n\t  fit_format: d3.format(\".2f\"),\n\t\n\t  loadFromServer: function loadFromServer() {\n\t\n\t    var self = this;\n\t\n\t    d3.json(this.props.url, function (data) {\n\t\n\t      data[\"fits\"][\"Partitioned MG94xREV\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Partitioned MG94xREV\");\n\t      data[\"fits\"][\"General Descriptive\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"General Descriptive\");\n\t      data[\"fits\"][\"Null\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Null\");\n\t      data[\"fits\"][\"Alternative\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Alternative\");\n\t      data[\"fits\"][\"Partitioned Exploratory\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Partitioned Exploratory\");\n\t\n\t      var annotations = data[\"fits\"][\"Partitioned MG94xREV\"][\"branch-annotations\"],\n\t          json = data,\n\t          pmid = data[\"PMID\"],\n\t          test_results = data[\"relaxation_test\"];\n\t\n\t      var p = data[\"relaxation-test\"][\"p\"],\n\t          direction = data[\"fits\"][\"Alternative\"][\"K\"] > 1 ? 'intensification' : 'relaxation',\n\t          evidence = p <= self.props.alpha_level ? 'significant' : 'not significant',\n\t          pvalue = self.p_value_format(p),\n\t          lrt = self.fit_format(data[\"relaxation-test\"][\"LR\"]),\n\t          summary_k = self.fit_format(data[\"fits\"][\"Alternative\"][\"K\"]),\n\t          pmid_text = \"PubMed ID \" + pmid,\n\t          pmid_href = \"http://www.ncbi.nlm.nih.gov/pubmed/\" + pmid;\n\t\n\t      self.setState({\n\t        annotations: annotations,\n\t        json: json,\n\t        pmid: pmid,\n\t        test_results: test_results,\n\t        p: p,\n\t        direction: direction,\n\t        evidence: evidence,\n\t        pvalue: pvalue,\n\t        lrt: lrt,\n\t        summary_k: summary_k,\n\t        pmid_text: pmid_text,\n\t        pmid_href: pmid_href\n\t      });\n\t    });\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t\n\t    var edgeColorizer = function edgeColorizer(element, data) {\n\t\n\t      var self = this,\n\t          scaling_exponent = 0.33,\n\t          omega_format = d3.format(\".3r\");\n\t\n\t      var omega_color = d3.scale.pow().exponent(scaling_exponent).domain([0, 0.25, 1, 5, 10]).range(self.options()[\"color-fill\"] ? [\"#DDDDDD\", \"#AAAAAA\", \"#888888\", \"#444444\", \"#000000\"] : [\"#6e4fa2\", \"#3288bd\", \"#e6f598\", \"#f46d43\", \"#9e0142\"]).clamp(true);\n\t\n\t      if (data.target.annotations) {\n\t        element.style('stroke', omega_color(data.target.annotations.length) || null);\n\t        $(element[0][0]).tooltip('destroy');\n\t        $(element[0][0]).tooltip({\n\t          'title': omega_format(data.target.annotations.length),\n\t          'html': true,\n\t          'trigger': 'hover',\n\t          'container': 'body',\n\t          'placement': 'auto'\n\t        });\n\t      } else {\n\t        element.style('stroke', null);\n\t        $(element[0][0]).tooltip('destroy');\n\t      }\n\t\n\t      var selected_partition = $(\"#hyphy-tree-highlight\").attr(\"value\");\n\t\n\t      if (selected_partition && this.get_partitions()) {\n\t        var partitions = this.get_partitions()[selected_partition];\n\t\n\t        element.style('stroke-width', partitions && partitions[data.target.name] ? '8' : '4').style('stroke-linejoin', 'round').style('stroke-linecap', 'round');\n\t      }\n\t    };\n\t\n\t    return {\n\t      edgeColorizer: edgeColorizer,\n\t      alpha_level: 0.05\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t\n\t    var model_fits_id = \"#hyphy-model-fits\",\n\t        omega_plots_id = \"#hyphy-omega-plots\",\n\t        summary_id = \"#hyphy-relax-summary\",\n\t        tree_id = \"#tree-tab\";\n\t\n\t    var tree_settings = {\n\t      'omegaPlot': {},\n\t      'tree-options': {\n\t        /* value arrays have the following meaning\n\t            [0] - the value of the attribute\n\t            [1] - does the change in attribute value trigger tree re-layout?\n\t        */\n\t        'hyphy-tree-model': [\"Partitioned MG94xREV\", true],\n\t        'hyphy-tree-highlight': [\"RELAX.test\", false],\n\t        'hyphy-tree-branch-lengths': [true, true],\n\t        'hyphy-tree-hide-legend': [true, false],\n\t        'hyphy-tree-fill-color': [true, false]\n\t      },\n\t      'suppress-tree-render': false,\n\t      'chart-append-html': true,\n\t      'edgeColorizer': this.props.edgeColorizer\n\t    };\n\t\n\t    return {\n\t      annotations: null,\n\t      json: null,\n\t      pmid: null,\n\t      settings: tree_settings,\n\t      test_results: null,\n\t      tree: null,\n\t      p: null,\n\t      direction: 'unknown',\n\t      evidence: 'unknown',\n\t      pvalue: null,\n\t      lrt: null,\n\t      summary_k: 'unknown',\n\t      pmid_text: \"PubMed ID : Unknown\",\n\t      pmid_href: \"#\",\n\t      relaxation_K: \"unknown\"\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.loadFromServer();\n\t    this.setEvents();\n\t  },\n\t\n\t  setEvents: function setEvents() {\n\t\n\t    var self = this;\n\t\n\t    $(\"#datamonkey-relax-load-json\").on(\"change\", function (e) {\n\t      var files = e.target.files; // FileList object\n\t\n\t      if (files.length == 1) {\n\t        var f = files[0];\n\t        var reader = new FileReader();\n\t\n\t        reader.onload = function (theFile) {\n\t          return function (e) {\n\t\n\t            var data = JSON.parse(this.result);\n\t            data[\"fits\"][\"Partitioned MG94xREV\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Partitioned MG94xREV\");\n\t            data[\"fits\"][\"General Descriptive\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"General Descriptive\");\n\t            data[\"fits\"][\"Null\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Null\");\n\t            data[\"fits\"][\"Alternative\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Alternative\");\n\t            data[\"fits\"][\"Partitioned Exploratory\"][\"branch-annotations\"] = self.formatBranchAnnotations(data, \"Partitioned Exploratory\");\n\t\n\t            var annotations = data[\"fits\"][\"Partitioned MG94xREV\"][\"branch-annotations\"],\n\t                json = data,\n\t                pmid = data[\"PMID\"],\n\t                test_results = data[\"relaxation_test\"];\n\t\n\t            var p = data[\"relaxation-test\"][\"p\"],\n\t                direction = data[\"fits\"][\"Alternative\"][\"K\"] > 1 ? 'intensification' : 'relaxation',\n\t                evidence = p <= self.props.alpha_level ? 'significant' : 'not significant',\n\t                pvalue = self.p_value_format(p),\n\t                lrt = self.fit_format(data[\"relaxation-test\"][\"LR\"]),\n\t                summary_k = self.fit_format(data[\"fits\"][\"Alternative\"][\"K\"]),\n\t                pmid_text = \"PubMed ID \" + pmid,\n\t                pmid_href = \"http://www.ncbi.nlm.nih.gov/pubmed/\" + pmid;\n\t\n\t            self.setState({\n\t              annotations: annotations,\n\t              json: json,\n\t              pmid: pmid,\n\t              test_results: test_results,\n\t              p: p,\n\t              direction: direction,\n\t              evidence: evidence,\n\t              pvalue: pvalue,\n\t              lrt: lrt,\n\t              summary_k: summary_k,\n\t              pmid_text: pmid_text,\n\t              pmid_href: pmid_href\n\t            });\n\t          };\n\t        }(f);\n\t        reader.readAsText(f);\n\t      }\n\t\n\t      $(\"#datamonkey-absrel-toggle-here\").dropdown(\"toggle\");\n\t      e.preventDefault();\n\t    });\n\t  },\n\t\n\t  formatBranchAnnotations: function formatBranchAnnotations(json, key) {\n\t\n\t    var initial_branch_annotations = json[\"fits\"][key][\"branch-annotations\"];\n\t\n\t    if (!initial_branch_annotations) {\n\t      initial_branch_annotations = json[\"fits\"][key][\"rate distributions\"];\n\t    }\n\t\n\t    // Iterate over objects\n\t    var branch_annotations = _.mapObject(initial_branch_annotations, function (val, key) {\n\t      return { \"length\": val };\n\t    });\n\t\n\t    return branch_annotations;\n\t  },\n\t\n\t  initialize: function initialize() {},\n\t\n\t  render: function render() {\n\t\n\t    var self = this;\n\t\n\t    return React.createElement(\n\t      \"div\",\n\t      { className: \"tab-content\" },\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"tab-pane active\", id: \"datamonkey-relax-summary-tab\" },\n\t        React.createElement(\n\t          \"div\",\n\t          { id: \"hyphy-relax-summary\", className: \"row\" },\n\t          React.createElement(\n\t            \"div\",\n\t            { className: \"col-md-12\" },\n\t            React.createElement(\n\t              \"ul\",\n\t              { className: \"list-group\" },\n\t              React.createElement(\n\t                \"li\",\n\t                { className: \"list-group-item list-group-item-info\" },\n\t                React.createElement(\n\t                  \"h3\",\n\t                  { className: \"list-group-item-heading\" },\n\t                  React.createElement(\"i\", { className: \"fa fa-list\", styleFormat: \"margin-right: 10px\" }),\n\t                  React.createElement(\n\t                    \"span\",\n\t                    { id: \"summary-method-name\" },\n\t                    \"RELAX(ed selection test)\"\n\t                  ),\n\t                  \" summary\"\n\t                ),\n\t                React.createElement(\n\t                  \"p\",\n\t                  { className: \"list-group-item-text lead\", styleFormat: \"margin-top:0.5em; \" },\n\t                  \"Test for selection \",\n\t                  React.createElement(\n\t                    \"strong\",\n\t                    { id: \"summary-direction\" },\n\t                    this.state.direction\n\t                  ),\n\t                  \"(\",\n\t                  React.createElement(\n\t                    \"abbr\",\n\t                    { title: \"Relaxation coefficient\" },\n\t                    \"K\"\n\t                  ),\n\t                  \" = \",\n\t                  React.createElement(\n\t                    \"strong\",\n\t                    { id: \"summary-K\" },\n\t                    this.state.summary_k\n\t                  ),\n\t                  \") was \",\n\t                  React.createElement(\n\t                    \"strong\",\n\t                    { id: \"summary-evidence\" },\n\t                    this.state.evidence\n\t                  ),\n\t                  \"(p = \",\n\t                  React.createElement(\n\t                    \"strong\",\n\t                    { id: \"summary-pvalue\" },\n\t                    this.state.p\n\t                  ),\n\t                  \", \",\n\t                  React.createElement(\n\t                    \"abbr\",\n\t                    { title: \"Likelihood ratio statistic\" },\n\t                    \"LR\"\n\t                  ),\n\t                  \" = \",\n\t                  React.createElement(\n\t                    \"strong\",\n\t                    { id: \"summary-LRT\" },\n\t                    this.state.lrt\n\t                  ),\n\t                  \")\"\n\t                ),\n\t                React.createElement(\n\t                  \"p\",\n\t                  null,\n\t                  React.createElement(\n\t                    \"small\",\n\t                    null,\n\t                    \"Please cite \",\n\t                    React.createElement(\n\t                      \"a\",\n\t                      { href: this.state.pmid_href, id: \"summary-pmid\" },\n\t                      this.state.pmid_text\n\t                    ),\n\t                    \" if you use this result in a publication, presentation, or other scientific work.\"\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          )\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { id: \"hyphy-model-fits\", className: \"row\" },\n\t          React.createElement(_model_fits.ModelFits, { json: self.state.json })\n\t        ),\n\t        React.createElement(\n\t          \"div\",\n\t          { id: \"hyphy-omega-plots\", className: \"row\" },\n\t          React.createElement(_omega_plots.OmegaPlotGrid, { json: self.state.json })\n\t        )\n\t      ),\n\t      React.createElement(\n\t        \"div\",\n\t        { className: \"tab-pane\", id: \"tree-tab\" },\n\t        React.createElement(_tree.Tree, { json: self.state.json,\n\t          settings: self.state.settings })\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\t// Will need to make a call to this\n\t// omega distributions\n\tfunction render_relax(url, element) {\n\t  React.render(React.createElement(RELAX, { url: url }), document.getElementById(element));\n\t}\n\t\n\tmodule.exports = render_relax;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 223:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(d3) {'use strict';\n\t\n\tvar React = __webpack_require__(44);\n\tvar datamonkey = __webpack_require__(37);\n\tvar _ = __webpack_require__(41);\n\t\n\tvar OmegaPlot = React.createClass({\n\t    displayName: 'OmegaPlot',\n\t\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            svg_id: null,\n\t            dimensions: { width: 600, height: 400 },\n\t            margins: { 'left': 50, 'right': 15, 'bottom': 35, 'top': 35 },\n\t            has_zeros: false,\n\t            legend_id: null,\n\t            do_log_plot: true,\n\t            k_p: null,\n\t            plot: null\n\t        };\n\t    },\n\t\n\t    setEvents: function setEvents() {\n\t        var self = this;\n\t\n\t        d3.select(\"#\" + this.save_svg_id).on('click', function (e) {\n\t            datamonkey.save_image(\"svg\", \"#\" + self.svg_id);\n\t        });\n\t\n\t        d3.select(\"#\" + this.save_png_id).on('click', function (e) {\n\t            datamonkey.save_image(\"png\", \"#\" + self.svg_id);\n\t        });\n\t    },\n\t\n\t    initialize: function initialize() {\n\t\n\t        if (!this.state.omegas || !this.state.omegas[\"Reference\"]) {\n\t            return;\n\t        }\n\t\n\t        var data_to_plot = this.state.omegas[\"Reference\"];\n\t        var secondary_data = this.state.omegas[\"Test\"];\n\t\n\t        // Set props from settings\n\t        this.svg_id = this.props.settings.svg_id;\n\t        this.dimensions = this.props.settings.dimensions || this.props.dimensions;\n\t        this.legend_id = this.props.settings.legend || this.props.legend_id;\n\t        this.do_log_plot = this.props.settings.log || this.props.do_log_plot;\n\t        this.k_p = this.props.settings.k || this.props.k_p;\n\t\n\t        var dimensions = this.props.dimensions;\n\t        var margins = this.props.margins;\n\t\n\t        this.margins = margins;\n\t\n\t        if (this.do_log_plot) {\n\t            this.has_zeros = data_to_plot.some(function (d) {\n\t                return d.omega <= 0;\n\t            });\n\t            if (secondary_data) {\n\t                this.has_zeros = this.has_zeros || data_to_plot.some(function (d) {\n\t                    return d.omega <= 0;\n\t                });\n\t            }\n\t        }\n\t\n\t        this.plot_width = dimensions[\"width\"] - margins['left'] - margins['right'], this.plot_height = dimensions[\"height\"] - margins['top'] - margins['bottom'];\n\t\n\t        var domain = this.state.settings[\"domain\"] || d3.extent(secondary_data ? secondary_data.map(function (d) {\n\t            return d.omega;\n\t        }).concat(data_to_plot.map(function (d) {\n\t            return d.omega;\n\t        })) : data_to_plot.map(function (d) {\n\t            return d.omega;\n\t        }));\n\t\n\t        domain[0] *= 0.5;\n\t\n\t        this.omega_scale = (this.do_log_plot ? this.has_zeros ? d3.scale.pow().exponent(0.2) : d3.scale.log() : d3.scale.linear()).range([0, this.plot_width]).domain(domain).nice();\n\t\n\t        this.proportion_scale = d3.scale.linear().range([this.plot_height, 0]).domain([-0.05, 1]).clamp(true);\n\t\n\t        // compute margins -- circle AREA is proportional to the relative weight\n\t        // maximum diameter is (height - text margin)\n\t        this.svg = d3.select(\"#\" + this.svg_id).attr(\"width\", dimensions.width).attr(\"height\", dimensions.height);\n\t        this.plot = this.svg.selectAll(\".container\");\n\t\n\t        this.svg.selectAll(\"defs\").remove();\n\t        this.svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 10) /*must be smarter way to calculate shift*/\n\t        .attr(\"refY\", 4).attr(\"markerWidth\", 10).attr(\"markerHeight\", 8).attr(\"orient\", \"auto\").attr(\"stroke\", \"#000\").attr(\"fill\", \"#000\").append(\"path\").attr(\"d\", \"M 0,0 V8 L10,4 Z\");\n\t\n\t        if (this.plot.empty()) {\n\t            this.plot = this.svg.append(\"g\").attr(\"class\", \"container\");\n\t        }\n\t\n\t        this.plot.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \" , \" + this.margins[\"top\"] + \")\");\n\t        this.reference_omega_lines = this.plot.selectAll(\".hyphy-omega-line-reference\"), this.displacement_lines = this.plot.selectAll(\".hyphy-displacement-line\");\n\t\n\t        this.createDisplacementLine();\n\t        this.createNeutralLine();\n\t        this.createOmegaLine();\n\t        this.createReferenceLine();\n\t        this.createXAxis();\n\t        this.createYAxis();\n\t        this.setEvents();\n\t    },\n\t    makeSpring: function makeSpring(x1, x2, y1, y2, step, displacement) {\n\t\n\t        if (x1 == x2) {\n\t            y1 = Math.min(y1, y2);\n\t            return \"M\" + x1 + \",\" + (y1 - 40) + \"v20\";\n\t        }\n\t\n\t        var spring_data = [],\n\t            point = [x1, y1],\n\t            angle = Math.atan2(y2 - y1, x2 - x1);\n\t\n\t        var step = [step * Math.cos(angle), step * Math.sin(angle)];\n\t        var k = 0;\n\t\n\t        if (Math.abs(x1 - x2) < 15) {\n\t            spring_data.push(point);\n\t        } else {\n\t            while (x1 < x2 && point[0] < x2 - 15 || x1 > x2 && point[0] > x2 + 15) {\n\t                point = point.map(function (d, i) {\n\t                    return d + step[i];\n\t                });\n\t                if (k % 2) {\n\t                    spring_data.push([point[0], point[1] + displacement]);\n\t                } else {\n\t                    spring_data.push([point[0], point[1] - displacement]);\n\t                }\n\t                k++;\n\t                if (k > 100) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t\n\t        if (spring_data.length > 1) {\n\t            spring_data.pop();\n\t        }\n\t\n\t        spring_data.push([x2, y2]);\n\t        var line = d3.svg.line().interpolate(\"monotone\");\n\t        return line(spring_data);\n\t    },\n\t    createDisplacementLine: function createDisplacementLine() {\n\t\n\t        var self = this;\n\t        var data_to_plot = this.state.omegas[\"Reference\"];\n\t        var secondary_data = this.state.omegas[\"Test\"];\n\t\n\t        if (secondary_data) {\n\t            var diffs = data_to_plot.map(function (d, i) {\n\t                return {\n\t                    'x1': d.omega,\n\t                    'x2': secondary_data[i].omega,\n\t                    'y1': d.weight * 0.98,\n\t                    'y2': secondary_data[i].weight * 0.98\n\t                };\n\t            });\n\t\n\t            this.displacement_lines = this.displacement_lines.data(diffs);\n\t            this.displacement_lines.enter().append(\"path\");\n\t            this.displacement_lines.exit().remove();\n\t            this.displacement_lines.transition().attr(\"d\", function (d) {\n\t                return self.makeSpring(self.omega_scale(d.x1), self.omega_scale(d.x2), self.proportion_scale(d.y1 * 0.5), self.proportion_scale(d.y2 * 0.5), 5, 5);\n\t            }).attr(\"marker-end\", \"url(#arrowhead)\").attr(\"class\", \"hyphy-displacement-line\");\n\t        }\n\t    },\n\t    createReferenceLine: function createReferenceLine() {\n\t\n\t        var data_to_plot = this.state.omegas[\"Reference\"];\n\t        var secondary_data = this.state.omegas[\"Test\"];\n\t        var self = this;\n\t\n\t        if (secondary_data) {\n\t            this.reference_omega_lines = this.reference_omega_lines.data(data_to_plot);\n\t            this.reference_omega_lines.enter().append(\"line\");\n\t            this.reference_omega_lines.exit().remove();\n\t\n\t            this.reference_omega_lines.transition().attr(\"x1\", function (d) {\n\t                return self.omega_scale(d.omega);\n\t            }).attr(\"x2\", function (d) {\n\t                return self.omega_scale(d.omega);\n\t            }).attr(\"y1\", function (d) {\n\t                return self.proportion_scale(-0.05);\n\t            }).attr(\"y2\", function (d) {\n\t                return self.proportion_scale(d.weight);\n\t            }).style(\"stroke\", function (d) {\n\t                return \"#d62728\";\n\t            }).attr(\"class\", \"hyphy-omega-line-reference\");\n\t        } else {\n\t            this.reference_omega_lines.remove();\n\t            this.displacement_lines.remove();\n\t        }\n\t    },\n\t    createOmegaLine: function createOmegaLine() {\n\t\n\t        var data_to_plot = this.state.omegas[\"Reference\"];\n\t        var secondary_data = this.state.omegas[\"Test\"];\n\t        var self = this;\n\t\n\t        // ** Omega Line (Red) ** //\n\t        var omega_lines = this.plot.selectAll(\".hyphy-omega-line\").data(secondary_data ? secondary_data : data_to_plot);\n\t        omega_lines.enter().append(\"line\");\n\t        omega_lines.exit().remove();\n\t        omega_lines.transition().attr(\"x1\", function (d) {\n\t            return self.omega_scale(d.omega);\n\t        }).attr(\"x2\", function (d) {\n\t            return self.omega_scale(d.omega);\n\t        }).attr(\"y1\", function (d) {\n\t            return self.proportion_scale(-0.05);\n\t        }).attr(\"y2\", function (d) {\n\t            return self.proportion_scale(d.weight);\n\t        }).style(\"stroke\", function (d) {\n\t            return \"#1f77b4\";\n\t        }).attr(\"class\", \"hyphy-omega-line\");\n\t    },\n\t    createNeutralLine: function createNeutralLine() {\n\t        var self = this;\n\t\n\t        // ** Neutral Line (Blue) ** //\n\t        var neutral_line = this.plot.selectAll(\".hyphy-neutral-line\").data([1]);\n\t        neutral_line.enter().append(\"line\").attr(\"class\", \"hyphy-neutral-line\");\n\t        neutral_line.exit().remove();\n\t        neutral_line.transition().attr(\"x1\", function (d) {\n\t            return self.omega_scale(d);\n\t        }).attr(\"x2\", function (d) {\n\t            return self.omega_scale(d);\n\t        }).attr(\"y1\", 0).attr(\"y2\", this.plot_height);\n\t    },\n\t    createXAxis: function createXAxis() {\n\t\n\t        // *** X-AXIS *** //\n\t        var xAxis = d3.svg.axis().scale(this.omega_scale).orient(\"bottom\");\n\t\n\t        if (this.do_log_plot) {\n\t            xAxis.ticks(10, this.has_zeros ? \".2r\" : \".1r\");\n\t        }\n\t\n\t        var x_axis = this.svg.selectAll(\".x.axis\");\n\t        var x_label;\n\t\n\t        if (x_axis.empty()) {\n\t            x_axis = this.svg.append(\"g\").attr(\"class\", \"x hyphy-axis\");\n\t\n\t            x_label = x_axis.append(\"g\").attr(\"class\", \"hyphy-axis-label x-label\");\n\t        } else {\n\t            x_label = x_axis.select(\".axis-label.x-label\");\n\t        }\n\t\n\t        x_axis.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \",\" + (this.plot_height + this.margins[\"top\"]) + \")\").call(xAxis);\n\t        x_label = x_label.attr(\"transform\", \"translate(\" + this.plot_width + \",\" + this.margins[\"bottom\"] + \")\").selectAll(\"text\").data(['\\u03C9']);\n\t        x_label.enter().append(\"text\");\n\t        x_label.text(function (d) {\n\t            return d;\n\t        }).style(\"text-anchor\", \"end\").attr(\"dy\", \"0.0em\");\n\t    },\n\t    createYAxis: function createYAxis() {\n\t\n\t        // *** Y-AXIS *** //\n\t        var yAxis = d3.svg.axis().scale(this.proportion_scale).orient(\"left\").ticks(10, \".1p\");\n\t\n\t        var y_axis = this.svg.selectAll(\".y.hyphy-axis\");\n\t        var y_label;\n\t\n\t        if (y_axis.empty()) {\n\t            y_axis = this.svg.append(\"g\").attr(\"class\", \"y hyphy-axis\");\n\t            y_label = y_axis.append(\"g\").attr(\"class\", \"hyphy-axis-label y-label\");\n\t        } else {\n\t            y_label = y_axis.select(\".hyphy-axis-label.y-label\");\n\t        }\n\t        y_axis.attr(\"transform\", \"translate(\" + this.margins[\"left\"] + \",\" + this.margins[\"top\"] + \")\").call(yAxis);\n\t        y_label = y_label.attr(\"transform\", \"translate(\" + -this.margins[\"left\"] + \",\" + 0 + \")\").selectAll(\"text\").data([\"Proportion of sites\"]);\n\t        y_label.enter().append(\"text\");\n\t        y_label.text(function (d) {\n\t            return d;\n\t        }).style(\"text-anchor\", \"start\").attr(\"dy\", \"-1em\");\n\t    },\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            omegas: this.props.omegas,\n\t            settings: this.props.settings\n\t        };\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t        this.setState({\n\t            omegas: nextProps.omegas\n\t        });\n\t    },\n\t\n\t    componentDidUpdate: function componentDidUpdate() {\n\t        this.initialize();\n\t    },\n\t\n\t    componentDidMount: function componentDidMount() {\n\t        this.initialize();\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        var key = this.props.omegas.key,\n\t            label = this.props.omegas.label;\n\t\n\t        this.svg_id = key + \"-svg\";\n\t        this.save_svg_id = \"export-\" + key + \"-svg\";\n\t        this.save_png_id = \"export-\" + key + \"-png\";\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'col-lg-6' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'panel panel-default', id: key },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'panel-heading' },\n\t                    React.createElement(\n\t                        'h3',\n\t                        { className: 'panel-title' },\n\t                        '\\u03C9 distributions under the ',\n\t                        React.createElement(\n\t                            'strong',\n\t                            null,\n\t                            label\n\t                        ),\n\t                        ' model'\n\t                    ),\n\t                    React.createElement(\n\t                        'p',\n\t                        null,\n\t                        React.createElement(\n\t                            'small',\n\t                            null,\n\t                            'Test branches are shown in ',\n\t                            React.createElement(\n\t                                'span',\n\t                                { className: 'hyphy-blue' },\n\t                                'blue'\n\t                            ),\n\t                            ' and reference branches are shown in ',\n\t                            React.createElement(\n\t                                'span',\n\t                                { className: 'hyphy-red' },\n\t                                'red'\n\t                            )\n\t                        )\n\t                    ),\n\t                    React.createElement(\n\t                        'div',\n\t                        { className: 'btn-group' },\n\t                        React.createElement(\n\t                            'button',\n\t                            { id: this.save_svg_id, type: 'button', className: 'btn btn-default btn-sm' },\n\t                            React.createElement('span', { className: 'glyphicon glyphicon-floppy-save' }),\n\t                            ' SVG'\n\t                        ),\n\t                        React.createElement(\n\t                            'button',\n\t                            { id: this.save_png_id, type: 'button', className: 'btn btn-default btn-sm' },\n\t                            React.createElement('span', { className: 'glyphicon glyphicon-floppy-save' }),\n\t                            ' PNG'\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'panel-body' },\n\t                    React.createElement('svg', { id: this.svg_id })\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar OmegaPlotGrid = React.createClass({\n\t    displayName: 'OmegaPlotGrid',\n\t\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { omega_distributions: this.getDistributions(this.props.json) };\n\t    },\n\t\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t\n\t        this.setState({\n\t            omega_distributions: this.getDistributions(nextProps.json)\n\t        });\n\t    },\n\t\n\t    getDistributions: function getDistributions(json) {\n\t\n\t        var omega_distributions = {};\n\t\n\t        if (!json) {\n\t            return [];\n\t        }\n\t\n\t        for (var m in json[\"fits\"]) {\n\t            var this_model = json[\"fits\"][m];\n\t            omega_distributions[m] = {};\n\t            var distributions = [];\n\t            for (var d in this_model[\"rate-distributions\"]) {\n\t                var this_distro = this_model[\"rate-distributions\"][d];\n\t                var this_distro_entry = [d, \"\", \"\", \"\"];\n\t                omega_distributions[m][d] = this_distro.map(function (d) {\n\t                    return {\n\t                        'omega': d[0],\n\t                        'weight': d[1]\n\t                    };\n\t                });\n\t            }\n\t        }\n\t\n\t        _.each(omega_distributions, function (item, key) {\n\t            item.key = key.toLowerCase().replace(/ /g, '-');\n\t            item.label = key;\n\t        });\n\t\n\t        var omega_distributions = _.filter(omega_distributions, function (item) {\n\t            return _.isObject(item[\"Reference\"]);\n\t        });\n\t\n\t        return omega_distributions;\n\t    },\n\t\n\t    render: function render() {\n\t\n\t        var OmegaPlots = _.map(this.state.omega_distributions, function (item, key) {\n\t\n\t            var model_name = key;\n\t            var omegas = item;\n\t\n\t            var settings = {\n\t                svg_id: omegas.key + '-svg',\n\t                dimensions: { width: 600, height: 400 },\n\t                margins: { 'left': 50, 'right': 15, 'bottom': 35, 'top': 35 },\n\t                has_zeros: false,\n\t                legend_id: null,\n\t                do_log_plot: true,\n\t                k_p: null,\n\t                plot: null\n\t            };\n\t\n\t            return React.createElement(OmegaPlot, { name: model_name, omegas: omegas, settings: settings });\n\t        });\n\t\n\t        return React.createElement(\n\t            'div',\n\t            null,\n\t            OmegaPlots\n\t        );\n\t    }\n\t\n\t});\n\t\n\tmodule.exports.OmegaPlot = OmegaPlot;\n\tmodule.exports.OmegaPlotGrid = OmegaPlotGrid;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))\n\n/***/ }\n\n});\n//# sourceMappingURL=hyphyvision.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyphy-vision/dist/hyphyvision.js\n// module id = 30\n// module chunks = 0","import Bootstrap from 'bootstrap/dist/css/bootstrap.css';\nimport {\n  clusterNetwork,\n  graphSummary\n} from './clusternetwork.js';\nimport {\n  histogram,\n  histogramDistances\n} from './histogram.js';\nimport {\n  scatterPlot\n} from './scatterplot.js';\n\nvar misc = require('./misc.js');\nvar helpers = require('./helpers.js');\n\nmodule.exports.clusterNetwork = clusterNetwork;\nmodule.exports.graphSummary = graphSummary;\nmodule.exports.histogram = histogram;\nmodule.exports.histogramDistances = histogramDistances;\nmodule.exports.helpers = helpers;\nmodule.exports.misc = misc;\nmodule.exports.scatterPlot = scatterPlot;\n\n\n// WEBPACK FOOTER //\n// ./src/hivtrace.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bootstrap/dist/css/bootstrap.css\n// module id = 32\n// module chunks = 0","var d3 = require('d3'),\n  _ = require('underscore'),\n  misc = require('misc'),\n  helpers = require('helpers');\n\nvar _networkGraphAttrbuteID = \"patient_attribute_schema\";\nvar _networkNodeAttributeID = \"patient_attributes\";\nvar _networkMissing = 'missing';\nvar _networkMissingOpacity = '0.1';\nvar _networkMissingColor = '#999';\nvar _networkContinuousColorStops = 9;\nvar _networkShapeOrdering = ['circle', 'square', 'hexagon', 'diamond', 'cross', 'octagon'];\nvar _defaultFloatFormat = d3.format(\",.2r\");\nvar _defaultPercentFormat = d3.format(\",.3p\");\nvar _defaultDateFormat = d3.time.format(\"%Y-%m-%dT%H:%M:%S.%LZ\");\nvar _defaultDateViewFormat = d3.time.format(\"%B %d, %Y\");\nvar _defaultDateViewFormatShort = d3.time.format(\"%B %Y\");\nvar _networkCategorical = [\"#a6cee3\", \"#1f78b4\", \"#b2df8a\", \"#33a02c\", \"#fb9a99\", \"#e31a1c\", \"#fdbf6f\", \"#ff7f00\", \"#cab2d6\", \"#6a3d9a\", \"#ffff99\", \"#b15928\"];\nvar _maximumValuesInCategories = _networkCategorical.length;\n\nvar _networkSequentialColor = {\n  3: [\"#ffeda0\", \"#feb24c\", \"#f03b20\"],\n  4: [\"#ffffb2\", \"#fecc5c\", \"#fd8d3c\", \"#e31a1c\"],\n  5: [\"#ffffb2\", \"#fecc5c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"],\n  6: [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#f03b20\", \"#bd0026\"],\n  7: [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"],\n  8: [\"#ffffcc\", \"#ffeda0\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"],\n  9: [\"#ffffcc\", \"#ffeda0\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#bd0026\", \"#800026\"]\n};\n\n\nvar _networkPresetColorSchemes = {\n  'trans_categ': {\n    'Other-Male': '#999999',\n    'Heterosexual Contact-Male': '#e31a1c',\n    'Other-Child': '#ff7f00',\n    'Perinatal': '#ff7f00',\n    'MSM': '#1f78b4',\n    'IDU-Male': '#33a02c',\n    'Other-Female': '#999999',\n    'IDU-Female': '#33a02c',\n    'MSM & IDU': '#33a02c',\n    'Missing': '#999999',\n    'Heterosexual Contact-Female': '#e31a1c'\n  }\n};\n\n\nvar hivtrace_cluster_network_graph = function(json, network_container, network_status_string, network_warning_tag, button_bar_ui, attributes, filter_edges_toggle, clusters_table, nodes_table, parent_container, options) {\n\n  // [REQ] json                        :          the JSON object containing network nodes, edges, and meta-information\n  // [REQ] network_container           :          the CSS selector of the DOM element where the SVG containing the network will be placed (e.g. '#element')\n  // [OPT] network_status_string       :          the CSS selector of the DOM element where the text describing the current state of the network is shown (e.g. '#element')\n  // [OPT] network_warning_tag         :          the CSS selector of the DOM element where the any warning messages would go (e.g. '#element')\n  // [OPT] button_bar_ui               :          the ID of the control bar which can contain the following elements (prefix = button_bar_ui value)\n  //                                                - [prefix]_cluster_operations_container : a drop-down for operations on clusters\n  //                                                - [prefix]_attributes :  a drop-down for operations on attributes\n  //                                                - [prefix]_filter : a text box used to search the graph\n  // [OPT] network_status_string       :          the CSS selector of the DOM element where the text describing the current state of the network is shown (e.g. '#element')\n  // [OPT] attributes                  :          A JSON object with mapped node attributes\n\n\n\n\n\n  var self = {};\n\n\n  self._is_CDC_ = options && options['no_cdc'] ? false : true;\n  self.ww = options && options[\"width\"] ? options[\"width\"] : d3.select(parent_container).property(\"clientWidth\");\n  self.container = network_container;\n  self.nodes = [];\n  self.edges = [];\n  self.clusters = [];\n  self.cluster_sizes = [];\n  self.colorizer = {\n    'selected': function(d) {\n      return d == 'selected' ? d3.rgb(51, 122, 183) : '#FFF'\n    }\n  };\n  self.node_shaper = {\n    'id': null,\n    'shaper': function() {\n      return 'circle'\n    }\n  };\n  self.filter_edges = true,\n    self.hide_hxb2 = false,\n    self.charge_correction = 5,\n    self.margin = {\n      top: 20,\n      right: 10,\n      bottom: 30,\n      left: 10\n    },\n    self.width = self.ww - self.margin.left - self.margin.right,\n    self.height = self.width * 9 / 16,\n    self.cluster_table = d3.select(clusters_table),\n    self.node_table = d3.select(nodes_table),\n    self.needs_an_update = false,\n    self.json = json,\n    self.hide_unselected = false,\n    self.show_percent_in_pairwise_table = false,\n    self.gradient_id = 0;\n\n  self._additional_node_pop_fields = [];\n  /** this array contains fields that will be appended to node pop-overs in the network tab\n      they will precede all the fields that are shown based on selected labeling */\n\n  if (self._is_CDC_) {\n    self._additional_node_pop_fields.push('hiv_aids_dx_dt');\n  }\n\n  self._networkPredefinedAttributeTransforms = {\n    /** runtime computed node attributes, e.g. transforms of existing attributes */\n\n    'binned_vl_recent_value': {\n      'depends': 'vl_recent_value',\n      'label': 'binned_vl_recent_value',\n      'enum': [\"≤200\", \"200-10000\", \">10000\"],\n      'color_scale': function() {\n        return d3.scale.ordinal()\n          .domain([\"≤200\", \"200-10000\", \">10000\", _networkMissing])\n          .range(_.union(_networkSequentialColor[3], [_networkMissingColor]))\n      },\n\n      'map': function(node) {\n        var vl_value = attribute_node_value_by_id(node, 'vl_recent_value');\n        if (vl_value != _networkMissing) {\n          if (vl_value <= 200) {\n            return \"≤200\";\n          }\n          if (vl_value <= 10000) {\n            return \"200-10000\";\n          }\n          return \">10000\";\n        }\n        return _networkMissing;\n      }\n    },\n    'hiv_aids_dx_dt_year': {\n      'depends': 'hiv_aids_dx_dt',\n      'label': 'hiv_aids_dx_dt_year',\n      'type': \"String\",\n      'map': function(node) {\n        try {\n          var value = _defaultDateFormat.parse(attribute_node_value_by_id(node, 'hiv_aids_dx_dt'));\n          if (value) {\n            value = \"\" + value.getFullYear();\n          } else {\n            value = _networkMissing;\n          }\n          return value;\n        } catch (err) {\n          return _networkMissing;\n        }\n      },\n      'color_scale': function(attr) {\n        var range_without_missing = _.without(attr.value_range, _networkMissing);\n        var color_scale = _.compose(d3.interpolateRgb(\"#ffffcc\", \"#800026\"), d3.scale.linear().domain([range_without_missing[0], range_without_missing[range_without_missing.length - 1]]).range([0, 1]));\n        return function(v) {\n          if (v == _networkMissing) {\n            return _networkMissingColor;\n          }\n          return color_scale(v);\n        };\n      }\n    }\n  };\n\n  var cluster_mapping = {},\n    l_scale = 5000, // link scale\n    graph_data = self.json, // the raw JSON network object\n    max_points_to_render = 1024,\n    warning_string = \"\",\n    singletons = 0,\n    open_cluster_queue = [],\n    currently_displayed_objects,\n    gravity_scale = d3.scale.pow().exponent(0.5).domain([1, 100000]).range([0.1, 0.15]);\n\n  /*------------ D3 globals and SVG elements ---------------*/\n\n  var network_layout = d3.layout.force()\n    .on(\"tick\", tick)\n    .charge(function(d) {\n      if (d.cluster_id) return self.charge_correction * (-20 - 5 * Math.pow(d.children.length, 0.7));\n      return self.charge_correction * (-5 - 20 * Math.sqrt(d.degree));\n    })\n    .linkDistance(function(d) {\n      return Math.max(d.length, 0.005) * l_scale;\n    })\n    .linkStrength(function(d) {\n      if (d.support !== undefined) {\n        return 2 * (0.5 - d.support);\n      }\n      return 1;\n    })\n    .chargeDistance(l_scale * 0.25)\n    .gravity(gravity_scale(json.Nodes.length))\n    .friction(0.25);\n\n  d3.select(self.container).selectAll(\".my_progress\").remove();\n\n\n  d3.select(self.container).selectAll(\"svg\").remove();\n  self.node_table.selectAll(\"*\").remove();\n  self.cluster_table.selectAll(\"*\").remove();\n\n  var network_svg = d3.select(self.container).append(\"svg:svg\")\n    //.style (\"border\", \"solid black 1px\")\n    .attr(\"id\", \"network-svg\")\n    .attr(\"width\", self.width + self.margin.left + self.margin.right)\n    .attr(\"height\", self.height + self.margin.top + self.margin.bottom);\n\n  //.append(\"g\")\n  // .attr(\"transform\", \"translate(\" + self.margin.left + \",\" + self.margin.top + \")\");\n\n  var legend_svg = network_svg.append(\"g\").attr(\"transform\", \"translate(5,5)\");\n\n  network_svg.append(\"defs\").append(\"marker\")\n    .attr(\"id\", \"arrowhead\")\n    .attr(\"refX\", 9) /* there must be a smarter way to calculate shift*/\n    .attr(\"refY\", 2)\n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 4)\n    .attr(\"orient\", \"auto\")\n    .attr(\"stroke\", \"#666666\")\n    .attr(\"fill\", \"#AAAAAA\")\n    .append(\"path\")\n    .attr(\"d\", \"M 0,0 V 4 L6,2 Z\"); //this is actual shape for arrowhead\n\n\n  change_window_size();\n\n\n  /*------------ Network layout code ---------------*/\n  var handle_cluster_click = function(cluster, release) {\n\n    var container = d3.select(self.container);\n    var id = \"d3_context_menu_id\";\n    var menu_object = container.select(\"#\" + id);\n\n    if (menu_object.empty()) {\n      menu_object = container.append(\"ul\")\n        .attr(\"id\", id)\n        .attr(\"class\", \"dropdown-menu\")\n        .attr(\"role\", \"menu\");\n    }\n\n    menu_object.selectAll(\"li\").remove();\n\n    var already_fixed = cluster && cluster.fixed == 1;\n\n\n    if (cluster) {\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Expand cluster\")\n        .on(\"click\", function(d) {\n          cluster.fixed = 0;\n          expand_cluster_handler(cluster, true);\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Center on screen\")\n        .on(\"click\", function(d) {\n          cluster.fixed = 0;\n          center_cluster_handler(cluster);\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(function(d) {\n          if (cluster.fixed) return \"Allow cluster to float\";\n          return \"Hold cluster at current position\";\n        })\n        .on(\"click\", function(d) {\n          cluster.fixed = !cluster.fixed;\n          menu_object.style(\"display\", \"none\");\n        });\n\n      cluster.fixed = 1;\n\n      menu_object.style(\"position\", \"absolute\")\n        .style(\"left\", \"\" + d3.event.offsetX + \"px\")\n        .style(\"top\", \"\" + d3.event.offsetY + \"px\")\n        .style(\"display\", \"block\");\n\n    } else {\n      if (release) {\n        release.fixed = 0;\n      }\n      menu_object.style(\"display\", \"none\");\n    }\n\n    container.on(\"click\", function(d) {\n      handle_cluster_click(null, already_fixed ? null : cluster);\n    }, true);\n\n  };\n\n  var handle_node_click = function(node) {\n    var container = d3.select(self.container);\n    var id = \"d3_context_menu_id\";\n    var menu_object = container.select(\"#\" + id);\n\n    if (menu_object.empty()) {\n      menu_object = container.append(\"ul\")\n        .attr(\"id\", id)\n        .attr(\"class\", \"dropdown-menu\")\n        .attr(\"role\", \"menu\");\n    }\n\n    menu_object.selectAll(\"li\").remove();\n\n    if (node) {\n      node.fixed = 1;\n      menu_object.append(\"li\").append(\"a\")\n        .attr(\"tabindex\", \"-1\")\n        .text(\"Collapse cluster\")\n        .on(\"click\", function(d) {\n          node.fixed = 0;\n          collapse_cluster_handler(node, true)\n          menu_object.style(\"display\", \"none\");\n        });\n\n      menu_object.style(\"position\", \"absolute\")\n        .style(\"left\", \"\" + d3.event.offsetX + \"px\")\n        .style(\"top\", \"\" + d3.event.offsetY + \"px\")\n        .style(\"display\", \"block\");\n\n    } else {\n      menu_object.style(\"display\", \"none\");\n    }\n\n    container.on(\"click\", function(d) {\n      handle_node_click(null);\n    }, true);\n\n  };\n\n  function get_initial_xy(nodes, cluster_count, exclude) {\n    var d_clusters = {\n      'id': 'root',\n      'children': []\n    };\n    for (var k = 0; k < cluster_count; k += 1) {\n      if (exclude !== undefined && exclude[k + 1] !== undefined) {\n        continue;\n      }\n      d_clusters.children.push({\n        'cluster_id': k + 1,\n        'children': nodes.filter(function(v) {\n          return v.cluster == k + 1;\n        })\n      });\n    }\n\n    var treemap = d3.layout.pack()\n      .size([self.width, self.height])\n      //.sticky(true)\n      .children(function(d) {\n        return d.children;\n      })\n      .value(function(d) {\n        return 1;\n      });\n\n    return treemap.nodes(d_clusters);\n  }\n\n  function prepare_data_to_graph() {\n\n    var graphMe = {};\n    graphMe.all = [];\n    graphMe.edges = [];\n    graphMe.nodes = [];\n    graphMe.clusters = [];\n\n    var expandedClusters = [];\n    var drawnNodes = [];\n\n    self.clusters.forEach(function(x) {\n      // Check if hxb2_linked is in a child\n      var hxb2_exists = x.children.some(function(c) {\n        return c.hxb2_linked\n      }) && self.hide_hxb2;\n      if (!hxb2_exists) {\n        if (x.collapsed) {\n          graphMe.clusters.push(x);\n          graphMe.all.push(x);\n        } else {\n          expandedClusters[x.cluster_id] = true;\n        }\n      }\n    });\n\n    self.nodes.forEach(function(x, i) {\n      if (expandedClusters[x.cluster]) {\n        drawnNodes[i] = graphMe.nodes.length + graphMe.clusters.length;\n        graphMe.nodes.push(x);\n        graphMe.all.push(x);\n      }\n\n    });\n\n    self.edges.forEach(function(x) {\n\n      if (!(x.removed && self.filter_edges)) {\n        if (drawnNodes[x.source] !== undefined && drawnNodes[x.target] !== undefined) {\n\n          var y = {};\n          for (var prop in x) {\n            y[prop] = x[prop];\n          }\n\n          y.source = drawnNodes[x.source];\n          y.target = drawnNodes[x.target];\n          graphMe.edges.push(y);\n        }\n      }\n    });\n\n    return graphMe;\n\n  }\n\n  function default_layout(clusters, nodes, exclude_cluster_ids) {\n    var init_layout = get_initial_xy(nodes, self.cluster_sizes.length, exclude_cluster_ids);\n    clusters = init_layout.filter(function(v, i, obj) {\n      return !(typeof v.cluster_id === \"undefined\");\n    });\n\n    var sizes = network_layout.size();\n\n    _.each(nodes, function(n) {\n      n.x += n.dx / 2;\n      n.y += n.dy / 2;\n    });\n    clusters.forEach(collapse_cluster);\n    return [clusters, nodes];\n  }\n\n  function change_spacing(delta) {\n    self.charge_correction = self.charge_correction * delta;\n    network_layout.start();\n  }\n\n  function change_window_size(delta, trigger) {\n\n    if (delta) {\n\n      var x_scale = (self.width + delta / 2) / self.width;\n      var y_scale = (self.height + delta / 2) / self.height;\n\n      self.width += delta;\n      self.height += delta;\n\n      var rescale_x = d3.scale.linear().domain(d3.extent(network_layout.nodes(), function(node) {\n        return node.x;\n      }));\n      rescale_x.range(_.map(rescale_x.domain(), function(v) {\n        return v * x_scale;\n      }));\n      //.range ([50,self.width-50]),\n      var rescale_y = d3.scale.linear().domain(d3.extent(network_layout.nodes(), function(node) {\n        return node.y;\n      }));\n      rescale_y.range(_.map(rescale_y.domain(), function(v) {\n        return v * y_scale;\n      }));\n\n      _.each(network_layout.nodes(), function(node) {\n        node.x = rescale_x(node.x);\n        node.y = rescale_y(node.y);\n      });\n\n    }\n\n    self.width = Math.min(Math.max(self.width, 200), 4000);\n    self.height = Math.min(Math.max(self.height, 200), 4000);\n\n    network_layout.size([self.width, self.height]);\n    network_svg.attr(\"width\", self.width).attr(\"height\", self.height);\n\n    if (trigger) {\n      network_layout.start();\n    } else {\n      if (delta) {\n        self.update(true);\n      }\n    }\n  }\n\n  self.compute_adjacency_list = _.once(function() {\n\n    self.nodes.forEach(function(n) {\n      n.neighbors = d3.set();\n    });\n\n    self.edges.forEach(function(e) {\n      self.nodes[e.source].neighbors.add(e.target);\n      self.nodes[e.target].neighbors.add(e.source);\n    });\n\n  });\n\n  self.compute_local_clustering_coefficients = _.once(function() {\n\n    self.compute_adjacency_list();\n\n    self.nodes.forEach(function(n) {\n      _.defer(function(a_node) {\n        neighborhood_size = a_node.neighbors.size();\n        if (neighborhood_size < 2) {\n          a_node.lcc = misc.undefined;\n        } else {\n          if (neighborhood_size > 500) {\n            a_node.lcc = misc.too_large;\n          } else {\n            // count triangles\n            neighborhood = a_node.neighbors.values();\n            counter = 0;\n            for (n1 = 0; n1 < neighborhood_size; n1 += 1) {\n              for (n2 = n1 + 1; n2 < neighborhood_size; n2 += 1) {\n                if (self.nodes[neighborhood[n1]].neighbors.has(neighborhood[n2])) {\n                  counter++;\n                }\n              }\n            }\n\n            a_node.lcc = 2 * counter / neighborhood_size / (neighborhood_size - 1);\n          }\n        }\n\n      }, n);\n    });\n\n  });\n\n  self.get_node_by_id = function(id) {\n    return self.nodes.filter(function(n) {\n      return n.id == id;\n    })[0];\n\n\n  };\n\n  self.compute_local_clustering_coefficients_worker = _.once(function() {\n\n    var worker = new Worker('workers/lcc.js');\n\n    worker.onmessage = function(event) {\n\n      var nodes = event.data.Nodes;\n\n      nodes.forEach(function(n) {\n        node_to_update = self.get_node_by_id(n.id);\n        node_to_update.lcc = n.lcc ? n.lcc : misc.undefined;\n      });\n\n    };\n\n    var worker_obj = {};\n    worker_obj[\"Nodes\"] = self.nodes;\n    worker_obj[\"Edges\"] = self.edges;\n    worker.postMessage(worker_obj);\n\n  });\n\n  var estimate_cubic_compute_cost = _.memoize(function(c) {\n    self.compute_adjacency_list();\n    return _.reduce(_.first(_.pluck(c.children, \"degree\").sort(d3.descending), 3), function(memo, value) {\n      return memo * value;\n    }, 1);\n  }, function(c) {\n    return c.cluster_id;\n  });\n\n  self.compute_global_clustering_coefficients = _.once(function() {\n    self.compute_adjacency_list();\n\n    self.clusters.forEach(function(c) {\n      _.defer(function(a_cluster) {\n        cluster_size = a_cluster.children.length;\n        if (cluster_size < 3) {\n          a_cluster.cc = misc.undefined;\n        } else {\n          if (estimate_cubic_compute_cost(a_cluster, true) >= 5000000) {\n            a_cluster.cc = misc.too_large;\n          } else {\n            // pull out all the nodes that have this cluster id\n            member_nodes = [];\n\n            var triads = 0;\n            var triangles = 0;\n\n            self.nodes.forEach(function(n, i) {\n              if (n.cluster == a_cluster.cluster_id) {\n                member_nodes.push(i);\n              }\n            });\n            member_nodes.forEach(function(node) {\n              my_neighbors = self.nodes[node].neighbors.values().map(function(d) {\n                return +d;\n              }).sort(d3.ascending);\n              for (n1 = 0; n1 < my_neighbors.length; n1 += 1) {\n                for (n2 = n1 + 1; n2 < my_neighbors.length; n2 += 1) {\n                  triads += 1;\n                  if (self.nodes[my_neighbors[n1]].neighbors.has(my_neighbors[n2])) {\n                    triangles += 1;\n                  }\n                }\n              }\n            });\n\n            a_cluster.cc = triangles / triads;\n          }\n        }\n\n      }, c);\n    });\n  });\n\n  self.mark_nodes_as_processing = function(property) {\n    self.nodes.forEach(function(n) {\n      n[property] = misc.processing;\n    });\n  };\n\n  self.compute_graph_stats = function() {\n\n    d3.select(this).classed(\"disabled\", true).select(\"i\").classed({\n      \"fa-calculator\": false,\n      \"fa-cog\": true,\n      \"fa-spin\": true\n    });\n    self.mark_nodes_as_processing('lcc');\n    self.compute_local_clustering_coefficients_worker();\n    self.compute_global_clustering_coefficients();\n    d3.select(this).remove();\n\n  };\n\n\n  /*------------ Constructor ---------------*/\n  function initial_json_load() {\n    var connected_links = [];\n    var total = 0;\n    var exclude_cluster_ids = {};\n    self.has_hxb2_links = false;\n    self.cluster_sizes = [];\n\n    graph_data.Nodes.forEach(function(d) {\n      if (typeof self.cluster_sizes[d.cluster - 1] === \"undefined\") {\n        self.cluster_sizes[d.cluster - 1] = 1;\n      } else {\n        self.cluster_sizes[d.cluster - 1]++;\n      }\n      if (\"is_lanl\" in d) {\n        d.is_lanl = d.is_lanl == \"true\";\n      }\n\n\n      if (d.attributes.indexOf(\"problematic\") >= 0) {\n        self.has_hxb2_links = d.hxb2_linked = true;\n      }\n\n    });\n\n    /* add buttons and handlers */\n    /* clusters first */\n\n    if (button_bar_ui) {\n\n\n      $('#' + button_bar_ui + '_cluster_zoom').on('show.bs.modal', function(event) {\n        var link_clicked = $(event.relatedTarget);\n        var cluster_id = link_clicked.data(\"cluster\");\n        var modal = d3.select('#' + button_bar_ui + '_cluster_zoom');\n        modal.selectAll(\".modal-title\").text(\"Cluster \" + cluster_id);\n\n        $(\"#\" + button_bar_ui + \"_cluster_zoom_svg_export\").on(\"click\", function(e) {\n          helpers.save_image(\"png\", \"#\" + button_bar_ui + \"_cluster_zoom_svg\");\n        });\n\n        var node_indices = {};\n        var used_index = 0;\n\n        var only_this_cluster = {\n          \"Nodes\": _.map(_.filter(self.nodes, function(n, i) {\n            if (n.cluster == cluster_id) {\n              node_indices[i] = used_index++;\n              return true;\n            }\n            return false;\n          }), function(n) {\n            var nn = _.clone(n);\n            nn.cluster = 1;\n            delete nn[\"parent\"];\n            return nn;\n          }),\n          \"Edges\": _.map(_.filter(self.edges, function(e) {\n            if (e.source in node_indices && e.target in node_indices) {\n              return true;\n            }\n            return false;\n          }), function(e) {\n            var ne = _.clone(e);\n            ne.target = node_indices[ne.target];\n            ne.source = node_indices[ne.source];\n            return ne;\n          }),\n\n        };\n\n\n        only_this_cluster[_networkGraphAttrbuteID] = self.json[_networkGraphAttrbuteID];\n\n\n        hivtrace_cluster_network_graph(only_this_cluster, \"#\" + button_bar_ui + \"_cluster_zoom_svg\", null, null, null, null, null, null, null, \"#\" + button_bar_ui + \"_cluster_zoom_body\", {\n          \"expand\": [1],\n          \"charge\": 10,\n          \"colorizer\": self.colorizer,\n          \"node_shaper\": self.node_shaper,\n          \"width\": 600\n        });\n\n      });\n\n      function _cluster_list_view_render(cluster_id, group_by_attribute, the_list) {\n        the_list.selectAll('*').remove();\n        var allowed_types = {\n          \"String\": 1,\n          \"Date\": 1,\n          \"Number\": 1\n        };\n\n        var column_ids = _.filter(self.json[_networkGraphAttrbuteID], function(d) {\n          return d.type in allowed_types;\n        });\n\n        var cluster_nodes = _.filter(self.nodes, function(n) {\n          return n.cluster == cluster_id;\n        });\n\n        if (group_by_attribute) {\n          _.each(column_ids, function(column) {\n            var binned = _.groupBy(cluster_nodes, function(n) {\n              return attribute_node_value_by_id(n, column.raw_attribute_key);\n            });\n            var sorted_keys = _.keys(binned).sort();\n            var attribute_record = the_list.append(\"li\");\n            attribute_record.append(\"code\").text(column.raw_attribute_key);\n            var attribute_list = attribute_record.append(\"dl\").classed(\"dl-horizontal\", true);\n            _.each(sorted_keys, function(key) {\n              attribute_list.append(\"dt\").text(key);\n              attribute_list.append(\"dd\").text(_.map(binned[key], function(n) {\n                return n.id;\n              }).join(\", \"));\n            });\n\n          });\n        } else {\n          _.each(_.filter(self.nodes, function(n) {\n            return n.cluster == cluster_id;\n          }), function(node) {\n            var patient_record = the_list.append(\"li\");\n            patient_record.append(\"code\").text(node.id);\n            var patient_list = patient_record.append(\"dl\").classed(\"dl-horizontal\", true);\n            _.each(column_ids, function(column) {\n              patient_list.append(\"dt\").text(column.raw_attribute_key);\n              patient_list.append(\"dd\").text(attribute_node_value_by_id(node, column.raw_attribute_key));\n\n            });\n          });\n        }\n      }\n\n      d3.select('#' + button_bar_ui + '_cluster_list_view_toggle').on('click', function() {\n        d3.event.preventDefault();\n        var group_by_id = false;\n\n        var button_clicked = $(this);\n        if (button_clicked.data('view') == 'id') {\n          button_clicked.data('view', 'attribute');\n          button_clicked.text(\"Group by ID\");\n          group_by_id = false;\n        } else {\n          button_clicked.data('view', 'id');\n          button_clicked.text(\"Group by attribute\");\n          group_by_id = true;\n        }\n        _cluster_list_view_render(button_clicked.data('cluster'), !group_by_id, d3.select('#' + button_bar_ui + '_cluster_list_payload'));\n      });\n\n      $('#' + button_bar_ui + '_cluster_list').on('show.bs.modal', function(event) {\n        var link_clicked = $(event.relatedTarget);\n        var cluster_id = link_clicked.data(\"cluster\");\n        var modal = d3.select('#' + button_bar_ui + '_cluster_list');\n        modal.selectAll(\".modal-title\").text(\"Listing nodes in cluster \" + cluster_id);\n        $('#' + button_bar_ui + '_cluster_list_view_toggle').data('cluster', cluster_id);\n\n\n        _cluster_list_view_render(cluster_id, $('#' + button_bar_ui + '_cluster_list_view_toggle').data(\"view\") != \"id\", modal.select('#' + button_bar_ui + '_cluster_list_payload'));\n\n      });\n\n      var cluster_ui_container = d3.select(\"#\" + button_bar_ui + \"_cluster_operations_container\");\n\n      cluster_ui_container.selectAll(\"li\").remove();\n\n      var cluster_commands = [\n        [\"Expand All\", function() {\n          return self.expand_some_clusters()\n        }, true, 'hivtrace-expand-all'],\n        [\"Collapse All\", function() {\n          return self.collapse_some_clusters()\n        }, true, 'hivtrace-collapse-all'],\n        [\"Expand Filtered\", function() {\n          return self.expand_some_clusters(self.select_some_clusters(function(n) {\n            return n.match_filter;\n          }))\n        }, true, 'hivtrace-expand-filtered'],\n        [\"Collapse Filtered\", function() {\n          return self.collapse_some_clusters(self.select_some_clusters(function(n) {\n            return n.match_filter;\n          }))\n        }, true, 'hivtrace-collapse-filtered'],\n        [\"Hide problematic clusters\", function(item) {\n          d3.select(item).text(self.hide_hxb2 ? \"Hide problematic clusters\" : \"Show problematic clusters\");\n          self.toggle_hxb2();\n        }, self.has_hxb2_links, 'hivtrace-hide-problematic-clusters']\n      ];\n\n      if (!self._is_CDC_) {\n        cluster_commands.push([\"Show removed edges\", function(item) {\n          self.filter_edges = !self.filter_edges;\n          d3.select(item).text(self.filter_edges ? \"Show removed edges\" : \"Hide removed edges\");\n          self.update(false);\n        }, function() {\n          return _.some(self.edges, function(d) {\n            return d.removed;\n          });\n        }, 'hivtrace-show-removed-edges'])\n\n      }\n\n\n      cluster_commands.forEach(function(item, index) {\n        var handler_callback = item[1];\n        if (item[2]) {\n          this.append(\"li\").append(\"a\")\n            .text(item[0])\n            .attr(\"href\", \"#\")\n            .attr(\"id\", item[3])\n            .on(\"click\", function(e) {\n              handler_callback(this);\n              d3.event.preventDefault();\n            });\n        }\n      }, cluster_ui_container);\n\n\n      var button_group = d3.select(\"#\" + button_bar_ui + \"_button_group\");\n\n      if (!button_group.empty()) {\n        button_group.selectAll(\"button\").remove();\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Expand spacing\").on(\"click\", function(d) {\n          change_spacing(5 / 4);\n        }).append(\"i\").classed(\"fa fa-plus\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Compress spacing\").on(\"click\", function(d) {\n          change_spacing(4 / 5);\n        }).append(\"i\").classed(\"fa fa-minus\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Enlarge window\").on(\"click\", function(d) {\n          change_window_size(100, true);\n        }).append(\"i\").classed(\"fa fa-expand\", true);\n        button_group.append(\"button\").classed(\"btn btn-default btn-sm\", true).attr(\"title\", \"Shrink window\").on(\"click\", function(d) {\n          change_window_size(-100, true);\n        }).append(\"i\").classed(\"fa fa-compress\", true);\n\n\n        if (!self._is_CDC_) {\n          button_group.append(\"button\")\n            .classed(\"btn btn-default btn-sm\", true)\n            .attr(\"title\", \"Compute graph statistics\")\n            .attr(\"id\", \"hivtrace-compute-graph-statistics\")\n            .on(\"click\", function(d) {\n              _.bind(self.compute_graph_stats, this)();\n            })\n            .append(\"i\")\n            .classed(\"fa fa-calculator\", true);\n        }\n\n        button_group.append(\"button\")\n          .classed(\"btn btn-default btn-sm\", true)\n          .attr(\"title\", \"Save Image\")\n          .attr(\"id\", \"hivtrace-export-image\")\n          .on(\"click\", function(d) {\n            helpers.save_image(\"png\", \"#network-svg\");\n          })\n          .append(\"i\").classed(\"fa fa-image\", true);\n      }\n\n      $(\"#\" + button_bar_ui + \"_filter\").on(\"input propertychange\", _.throttle(function(e) {\n        var filter_value = $(this).val();\n        self.filter(filter_value.split(\" \").filter(function(d) {\n          return d.length > 0;\n        }).map(function(d) {\n          if (d.length > 2) {\n            if (d[0] == '\"' && d[d.length - 1] == '\"') {\n              return {\n                type: 're',\n                value: new RegExp(\"^\" + d.substr(1, d.length - 2) + \"$\", \"i\")\n              };\n            }\n            if (d[0] == '<') {\n              var distance_threshold = parseFloat(d.substr(1));\n              if (distance_threshold > 0) {\n                return {\n                  type: 'distance',\n                  value: distance_threshold\n                };\n              }\n            }\n\n          }\n          return {\n            type: 're',\n            value: new RegExp(d, \"i\")\n          };\n        }));\n\n      }, 250));\n\n      $(\"#\" + button_bar_ui + \"_hide_filter\").on(\"change\", _.throttle(function(e) {\n        self.hide_unselected = !self.hide_unselected;\n        self.filter_visibility();\n        self.update(true);\n      }, 250));\n\n\n      $(\"#\" + button_bar_ui + \"_pairwise_table_pecentage\").on(\"change\", _.throttle(function(e) {\n        self.show_percent_in_pairwise_table = !self.show_percent_in_pairwise_table;\n        render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n      }, 250));\n    }\n\n\n    if (_networkGraphAttrbuteID in json) {\n      attributes = json[_networkGraphAttrbuteID];\n    } else {\n      if (attributes && \"hivtrace\" in attributes) {\n        attributes = attributes[\"hivtrace\"];\n      }\n    }\n\n    if (attributes) {\n      /*\n         map attributes into nodes and into the graph object itself using\n         _networkGraphAttrbuteID as the key\n      */\n\n\n      if (\"attribute_map\" in attributes) {\n        var attribute_map = attributes[\"attribute_map\"];\n\n        if (\"map\" in attribute_map && attribute_map[\"map\"].length > 0) {\n          graph_data[_networkGraphAttrbuteID] = attribute_map[\"map\"].map(function(a, i) {\n            return {\n              'label': a,\n              'type': null,\n              'values': {},\n              'index': i,\n              'range': 0\n            };\n          });\n\n          graph_data.Nodes.forEach(function(n) {\n            n[_networkGraphAttrbuteID] = n.id.split(attribute_map[\"delimiter\"]);\n            n[_networkGraphAttrbuteID].forEach(function(v, i) {\n              if (i < graph_data[_networkGraphAttrbuteID].length) {\n                if (!(v in graph_data[_networkGraphAttrbuteID][i][\"values\"])) {\n                  graph_data[_networkGraphAttrbuteID][i][\"values\"][v] = graph_data[_networkGraphAttrbuteID][i][\"range\"];\n                  graph_data[_networkGraphAttrbuteID][i][\"range\"] += 1;\n                }\n              }\n              //graph_data [_networkGraphAttrbuteID][i][\"values\"][v] = 1 + (graph_data [_networkGraphAttrbuteID][i][\"values\"][v] ? graph_data [_networkGraphAttrbuteID][i][\"values\"][v] : 0);\n            });\n          });\n\n          graph_data[_networkGraphAttrbuteID].forEach(function(d) {\n            if (d['range'] < graph_data.Nodes.length && d['range'] > 1 && d['range'] <= 20) {\n              d['type'] = 'category';\n            }\n          });\n        }\n      }\n\n\n      _.each(self._networkPredefinedAttributeTransforms, function(computed, key) {\n        if (!computed['depends'] || _.has(graph_data[_networkGraphAttrbuteID], computed['depends'])) {\n          var extension = {};\n          extension[key] = computed;\n          _.extend(graph_data[_networkGraphAttrbuteID], extension);\n          _.each(graph_data.Nodes, function(node) {\n            inject_attribute_node_value_by_id(node, key, computed['map'](node));\n          });\n        }\n      });\n\n      // populate the UI elements\n      if (button_bar_ui) {\n        // decide if the variable can be considered categorical by examining its range\n\n\n        var valid_cats = _.filter(_.map(graph_data[_networkGraphAttrbuteID], function(d, k) {\n          d['raw_attribute_key'] = k;\n          if (d['type'] == \"String\") {\n            d['value_range'] = _.keys(_.countBy(graph_data.Nodes, function(nd) {\n              return attribute_node_value_by_id(nd, k);\n            }));\n            d['dimension'] = d[\"value_range\"].length;\n          } else {\n            if ('enum' in d) {\n              d[\"value_range\"] = _.clone(d[\"enum\"]);\n              d[\"value_range\"].push(_networkMissing);\n              d['dimension'] = d[\"value_range\"].length;\n              d['no-sort'] = true;\n            }\n          }\n          return d;\n        }), function(d) {\n          return 'value_range' in d && d['value_range'].length <= _maximumValuesInCategories;\n        });\n\n        var valid_shapes = _.filter(valid_cats, function(d) {\n          return d.dimension <= 5;\n        });\n\n\n        // sort values alphabetically for consistent coloring\n\n        _.each([valid_cats, valid_shapes], function(list) {\n          _.each(list, function(d) {\n            var values;\n            if (d['no-sort']) {\n              values = d['value_range'];\n            } else {\n\n              if (d['type'] == \"String\") {\n\n                values = d['value_range'].sort();\n\n                if (d.dimension <= _maximumValuesInCategories) {\n\n                  var string_hash = function(str) {\n                    var hash = 5801;\n                    for (var ci = 0; ci < str.length; ci++) {\n                      var charCode = str.charCodeAt(ci);\n                      hash = (hash << 5 + hash) + charCode;\n                    }\n                    return hash;\n                  };\n\n                  var hashed = _.map(values, string_hash);\n                  var available_keys = {};\n                  var reindexed = {};\n\n                  for (var i = 0; i < _maximumValuesInCategories; i++) {\n                    available_keys[i] = true;\n                  }\n\n\n\n                  _.each(hashed, function(value, index) {\n                    if (value < 0) {\n                      value = -value;\n                    }\n\n                    var first_try = value % _maximumValuesInCategories;\n                    if (first_try in available_keys) {\n                      reindexed[values[index]] = first_try;\n                      delete available_keys[first_try];\n                      return;\n                    }\n\n                    var second_try = Math.floor(value / _maximumValuesInCategories) % _maximumValuesInCategories;\n                    if (second_try in available_keys) {\n                      reindexed[values[index]] = second_try;\n                      delete available_keys[second_try];\n                      return;\n                    }\n\n                    var last_resort = parseInt(_.keys(available_keys).sort()[0]);\n                    reindexed[values[index]] = last_resort;\n                    delete available_keys[last_resort];\n                  });\n\n                  d['stable-ish order'] = reindexed;\n\n\n                }\n                //values = _.unzip(_.zip (d['value_range'], ordering_map).sort (function (a,b) { if (a[1] < b[1]) return -1; if (a[1] > b[1]) return 1; return 0}))[0]; //d['value_range'].sort ();\n\n\n              } else {\n                values = d['value_range'].sort();\n              }\n            }\n\n\n\n            var map = new Object;\n\n            _.each(values, function(d2, i) {\n              map[d2] = i;\n            });\n\n            d['value_map'] = function(v, key) {\n              return key ? (key == 'lookup' ? _.invert(map) : map) : map[v];\n            };\n\n          })\n        });\n\n\n        var valid_scales = _.filter(_.map(graph_data[_networkGraphAttrbuteID], function(d, k) {\n\n          function determine_scaling(d, values, scales) {\n            var low_var = Infinity;\n\n\n            _.each(scales, function(scl) {\n              d['value_range'] = d3.extent(values);\n              var bins = _.map(_.range(_networkContinuousColorStops), function() {\n                return 0.\n              });\n              scl.range([0, _networkContinuousColorStops - 1]).domain(d['value_range']);\n              _.each(values, function(v) {\n                bins[Math.floor(scl(v))]++;\n              });\n\n              var mean = values.length / _networkContinuousColorStops;\n              var vrnc = _.reduce(bins, function(p, c) {\n                return p + (c - mean) * (c - mean);\n              });\n\n              //console.log (d['value_range'], bins);\n\n              if (vrnc < low_var) {\n                low_var = vrnc;\n                d['scale'] = scl;\n              }\n\n            });\n          }\n\n          d['raw_attribute_key'] = k;\n          if (d.type == \"Number\") {\n            var values = _.filter(_.map(graph_data.Nodes, function(nd) {\n              return attribute_node_value_by_id(nd, k);\n            }), function(v) {\n              return v == _networkMissing ? null : v;\n            });\n            // automatically determine the scale and see what spaces the values most evenly\n            determine_scaling(d, values, [d3.scale.linear(), d3.scale.log(), d3.scale.pow().exponent(1 / 3), d3.scale.pow().exponent(0.25), d3.scale.pow().exponent(0.5), d3.scale.pow().exponent(1 / 8), d3.scale.pow().exponent(1 / 16)]);\n\n          } else {\n            if (d.type == \"Date\") {\n              var values = _.filter(_.map(graph_data.Nodes, function(nd) {\n                try {\n                  var a_date = attribute_node_value_by_id(nd, k);\n                  //console.log (k, a_date, _defaultDateFormat.parse (a_date));\n                  inject_attribute_node_value_by_id(nd, k, _defaultDateFormat.parse(a_date));\n                } catch (err) {\n                  inject_attribute_node_value_by_id(nd, k, _networkMissing);\n                }\n                return attribute_node_value_by_id(nd, k);\n\n              }), function(v) {\n                return v == _networkMissing ? null : v;\n              });\n              // automatically determine the scale and see what spaces the values most evenly\n              determine_scaling(d, values, [d3.time.scale()]);\n            }\n          }\n          return d;\n        }), function(d) {\n          return d.type == \"Number\" || d.type == \"Date\";\n        });\n\n\n\n\n        //valid_cats.splice (0,0, {'label' : 'None', 'index' : -1});\n\n        [d3.select(\"#\" + button_bar_ui + \"_attributes\"), d3.select(\"#\" + button_bar_ui + \"_attributes_cat\")].forEach(function(m) {\n\n          m.selectAll(\"li\").remove();\n\n          var menu_items = [\n            [\n              ['None', null, _.partial(handle_attribute_categorical, null)]\n            ],\n            [\n              ['Categorical', 'heading', null]\n            ]\n          ].concat(valid_cats.map(function(d, i) {\n            return [\n              [d['label'], d['raw_attribute_key'], _.partial(handle_attribute_categorical, d['raw_attribute_key'])]\n            ];\n          }));\n\n\n          if (valid_scales.length) {\n            menu_items = menu_items.concat([\n              [\n                ['Continuous', 'heading', null]\n              ]\n            ]).concat(valid_scales.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'],\n                  _.partial(handle_attribute_continuous, d['raw_attribute_key'])\n                ]\n              ];\n            }));\n          }\n\n          var cat_menu = m.selectAll(\"li\")\n            .data(menu_items);\n\n\n          cat_menu.enter().append(\"li\").classed(\"disabled\", function(d) {\n            return d[0][1] == 'heading';\n          }).style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (d[1] == 'heading') return 'font-style: italic';\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n        [d3.select(\"#\" + button_bar_ui + \"_shapes\")].forEach(function(m) {\n\n          m.selectAll(\"li\").remove();\n          var cat_menu = m.selectAll(\"li\")\n            .data([\n              [\n                ['None', null, _.partial(handle_shape_categorical, null)]\n              ]\n            ].concat(valid_shapes.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'], _.partial(handle_shape_categorical, d['raw_attribute_key'])]\n              ];\n            })));\n\n          cat_menu.enter().append(\"li\").style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n        $(\"#\" + button_bar_ui + \"_opacity_invert\").on(\"click\", function(e) {\n          if (self.colorizer['opacity_scale']) {\n            self.colorizer['opacity_scale'].range(self.colorizer['opacity_scale'].range().reverse());\n            self.update(true);\n            draw_attribute_labels();\n\n          }\n          $(this).toggleClass(\"btn-active btn-default\");\n\n        });\n\n        $(\"#\" + button_bar_ui + \"_attributes_invert\").on(\"click\", function(e) {\n          if (self.colorizer['category_id']) {\n            graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'].range(graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'].range().reverse());\n            self.clusters.forEach(function(the_cluster) {\n              the_cluster[\"gradient\"] = compute_cluster_gradient(the_cluster, self.colorizer['category_id']);\n            });\n            self.update(true);\n            draw_attribute_labels();\n\n          }\n          $(this).toggleClass(\"btn-active btn-default\");\n\n        });\n\n        [d3.select(\"#\" + button_bar_ui + \"_opacity\")].forEach(function(m) {\n\n\n          m.selectAll(\"li\").remove();\n          var cat_menu = m.selectAll(\"li\")\n            .data([\n              [\n                ['None', null, _.partial(handle_attribute_opacity, null)]\n              ]\n            ].concat(valid_scales.map(function(d, i) {\n              return [\n                [d['label'], d['raw_attribute_key'], _.partial(handle_attribute_opacity, d['raw_attribute_key'])]\n              ];\n            })));\n\n\n          cat_menu.enter().append(\"li\").style(\"font-variant\", function(d) {\n            return d[0][1] < -1 ? \"small-caps\" : \"normal\";\n          });\n          cat_menu.selectAll(\"a\").data(function(d) {\n              return d;\n            })\n            .enter()\n            .append(\"a\")\n            .text(function(d, i, j) {\n              return d[0];\n            })\n            .attr(\"style\", function(d, i, j) {\n              if (j == 0) {\n                return ' font-weight: bold;'\n              };\n              return null;\n            })\n            .attr('href', '#')\n            .on(\"click\", function(d) {\n              if (d[2]) {\n                d[2].call()\n              }\n            });\n        });\n\n      }\n    }\n\n    if (self.cluster_sizes.length > max_points_to_render) {\n      var sorted_array = self.cluster_sizes.map(function(d, i) {\n        return [d, i + 1];\n      }).sort(function(a, b) {\n        return a[0] - b[0];\n      });\n\n      for (var k = 0; k < sorted_array.length - max_points_to_render; k++) {\n        exclude_cluster_ids[sorted_array[k][1]] = 1;\n      }\n      warning_string = \"Excluded \" + (sorted_array.length -\n          max_points_to_render) + \" clusters (maximum size \" +\n        sorted_array[k - 1][0] + \" nodes) because only \" +\n        max_points_to_render + \" points can be shown at once.\";\n    }\n\n    // Initialize class attributes\n    singletons = graph_data.Nodes.filter(function(v, i) {\n      return v.cluster === null;\n    }).length;\n    self.nodes = graph_data.Nodes.filter(function(v, i) {\n      if (v.cluster && typeof exclude_cluster_ids[v.cluster] === \"undefined\") {\n        connected_links[i] = total++;\n        return true;\n      }\n      return false;\n    });\n    self.edges = graph_data.Edges.filter(function(v, i) {\n      return connected_links[v.source] != undefined && connected_links[v.target] != undefined\n    });\n    self.edges = self.edges.map(function(v, i) {\n      v.source = connected_links[v.source];\n      v.target = connected_links[v.target];\n      v.id = i;\n      return v;\n    });\n\n    compute_node_degrees(self.nodes, self.edges);\n\n    var r = default_layout(self.clusters, self.nodes, exclude_cluster_ids);\n    self.clusters = r[0];\n    self.nodes = r[1];\n    self.clusters.forEach(function(d, i) {\n      cluster_mapping[d.cluster_id] = i;\n      d.hxb2_linked = d.children.some(function(c) {\n        return c.hxb2_linked\n      });\n      var degrees = d.children.map(function(c) {\n        return c.degree;\n      });\n      degrees.sort(d3.ascending);\n      d.degrees = helpers.describe_vector(degrees);\n      d.distances = [];\n    });\n\n\n    self.edges.forEach(function(e, i) {\n      self.clusters[cluster_mapping[self.nodes[e.target].cluster]].distances.push(e.length);\n    });\n\n    self.clusters.forEach(function(d, i) {\n      d.distances = helpers.describe_vector(d.distances);\n    });\n    //self.clusters\n\n\n    self.update();\n\n  }\n\n  function sort_table_toggle_icon(element, value) {\n    if (value) {\n      $(element).data(\"sorted\", value);\n      d3.select(element).selectAll(\"i\").classed(\"fa-sort-amount-desc\", value == \"desc\").classed(\"fa-sort-amount-asc\", value == \"asc\").classed(\"fa-sort\", value == \"unsorted\");\n    } else {\n      var sorted_state = $(element).data(\"sorted\");\n      sort_table_toggle_icon(element, sorted_state == \"asc\" ? \"desc\" : \"asc\");\n      return sorted_state == \"asc\" ? d3.descending : d3.ascending;\n    }\n  }\n\n  function sort_table_by_column(element, datum) {\n    d3.event.preventDefault();\n    var table_element = $(element).closest(\"table\");\n    if (table_element.length) {\n      var sort_on = parseInt($(element).data(\"column-id\"));\n      var sort_key = $(element).data(\"sort-on\");\n      var sorted_state = ($(element).data(\"sorted\"));\n      var sorted_function = sort_table_toggle_icon(element);\n\n      var sort_accessor = sort_key ? function(x) {\n        var val = x[sort_key];\n        if (typeof(val) === \"function\") return val();\n        return val;\n      } : function(x) {\n        return x;\n      };\n\n      d3.select(table_element[0]).select(\"tbody\").selectAll(\"tr\").sort(function(a, b) {\n        return sorted_function(sort_accessor(a[sort_on]), sort_accessor(b[sort_on]));\n      });\n\n      // select all other elements from thead and toggle their icons\n\n      $(table_element).find(\"thead [data-column-id]\")\n        .filter(function() {\n          return parseInt($(this).data(\"column-id\")) != sort_on;\n        })\n        .each(function() {\n          sort_table_toggle_icon(this, \"unsorted\");\n        });\n    }\n  }\n\n  function format_a_cell(data, index, item) {\n\n    var this_sel = d3.select(item);\n    var current_value = typeof(data.value) === \"function\" ? data.value() : data.value;\n\n    if (\"callback\" in data) {\n      data.callback(item, current_value);\n    } else {\n      var repr = \"format\" in data ? data.format(current_value) : current_value;\n      if (\"html\" in data) this_sel.html(repr);\n      else this_sel.text(repr);\n      if (\"sort\" in data) {\n        var clicker = this_sel.append(\"a\").property(\"href\", \"#\").on(\"click\", function(d) {\n          sort_table_by_column(this, d);\n        }).attr(\"data-sorted\", \"unsorted\").attr(\"data-column-id\", index).attr(\"data-sort-on\", data.sort);\n        clicker.append(\"i\").classed(\"fa fa-sort\", true).style(\"margin-left\", \"0.2em\");\n      }\n    }\n    if (\"help\" in data) {\n      this_sel.attr(\"title\", data.help);\n    }\n\n  }\n\n  function add_a_sortable_table(container, headers, content) {\n\n    var thead = container.selectAll(\"thead\");\n    if (thead.empty()) {\n      thead = container.append(\"thead\");\n      thead.selectAll(\"tr\").data(headers).enter().append(\"tr\").selectAll(\"th\").data(function(d) {\n        return d;\n      }).enter().append(\"th\").\n      call(function(selection) {\n        return selection.each(function(d, i) {\n          format_a_cell(d, i, this);\n        })\n      });\n    }\n\n    var tbody = container.selectAll(\"tbody\");\n    if (tbody.empty()) {\n      tbody = container.append(\"tbody\");\n      tbody.selectAll(\"tr\").data(content).enter().append(\"tr\").selectAll(\"td\").data(function(d) {\n        return d;\n      }).enter().append(\"td\").call(function(selection) {\n        return selection.each(function(d, i) {\n          handle_cluster_click\n          format_a_cell(d, i, this);\n        })\n      });\n    }\n\n\n  }\n\n  function _cluster_table_draw_id(element, payload) {\n    var this_cell = d3.select(element);\n    this_cell.selectAll(\"*\").remove();\n    this_cell.append(\"span\").text(payload).style(\"padding-right\", \"0.5em\");\n    this_cell.append(\"button\").classed(\"btn btn-primary btn-xs pull-right\", true).text(\"Zoom\").attr(\"data-toggle\", \"modal\").attr(\"data-target\", \"#\" + button_bar_ui + \"_cluster_zoom\").attr(\"data-cluster\", payload);\n    this_cell.append(\"button\").classed(\"btn btn-xs pull-right\", true).text(\"List\").attr(\"data-toggle\", \"modal\").attr(\"data-target\", \"#\" + button_bar_ui + \"_cluster_list\").attr(\"data-cluster\", payload);\n  }\n\n  function _cluster_table_draw_buttons(element, payload) {\n\n    var this_cell = d3.select(element);\n    var labels = [\n      [payload[0] ? \"expand\" : \"collapse\", 0]\n    ];\n    if (payload[1]) {\n      labels.push([\"problematic\", 1]);\n    }\n    if (payload[2]) {\n      labels.push([\"match\", 1]);\n    }\n    var buttons = this_cell.selectAll(\"button\").data(labels);\n    buttons.enter().append(\"button\");\n    buttons.exit().remove();\n    buttons.classed(\"btn btn-primary btn-xs\", true).text(function(d) {\n        return d[0];\n      })\n      .attr(\"disabled\", function(d) {\n        return d[1] ? \"disabled\" : null\n      })\n      .on(\"click\", function(d) {\n        if (d[1] == 0) {\n          if (payload[0]) {\n            expand_cluster(self.clusters[payload[payload.length - 1] - 1], true);\n          } else {\n            collapse_cluster(self.clusters[payload[payload.length - 1] - 1]);\n          }\n          format_a_cell(d3.select(element).datum(), null, element);\n        }\n      });\n\n  };\n\n  function _node_table_draw_buttons(element, payload) {\n    var this_cell = d3.select(element);\n    var labels = [\n      [payload[0] ? \"hide\" : \"show\", 0]\n    ];\n\n    var buttons = this_cell.selectAll(\"button\").data(labels);\n    buttons.enter().append(\"button\");\n    buttons.exit().remove();\n    buttons.classed(\"btn btn-primary btn-xs btn-node-property\", true).text(function(d) {\n        return d[0];\n      })\n      .attr(\"disabled\", function(d) {\n        return d[1] ? \"disabled\" : null\n      })\n      .on(\"click\", function(d) {\n        if (d[1] == 0) {\n          if (payload[0]) {\n            collapse_cluster(self.clusters[payload[payload.length - 1] - 1], true);\n          } else {\n            expand_cluster(self.clusters[payload[payload.length - 1] - 1]);\n          }\n          format_a_cell(d3.select(element).datum(), null, element);\n        }\n      });\n\n  };\n\n  self.update_volatile_elements = function(container) {\n    container.selectAll(\"td\").filter(function(d, i) {\n      return (\"volatile\" in d);\n    }).each(function(d, i) {\n      format_a_cell(d, i, this);\n    });\n  };\n\n  function draw_node_table() {\n\n    if (self.node_table) {\n      add_a_sortable_table(self.node_table,\n        // headers\n        [\n          [{\n            value: \"ID\",\n            sort: \"value\",\n            help: \"Node ID\"\n          }, {\n            value: \"Status\",\n            sort: \"value\"\n          }, {\n            value: \"# of links\",\n            sort: \"value\",\n            help: \"Number of links (Node degree)\"\n          }, {\n            value: \"Cluster\",\n            sort: \"value\",\n            help: \"Which cluster does the node belong to\"\n          }]\n        ],\n        // rows\n        self.nodes.map(function(n, i) {\n          return [{\n            \"value\": n.id,\n            help: \"Node ID\"\n          }, {\n            \"value\": function() {\n              return [!self.clusters[n.cluster - 1].collapsed, n.cluster]\n            },\n            \"callback\": _node_table_draw_buttons,\n            \"volatile\": true\n          }, {\n            \"value\": n.degree,\n            help: \"Node degree\"\n          }, {\n            \"value\": n.cluster,\n            help: \"Which cluster does the node belong to\"\n          }];\n\n        }));\n    }\n  }\n\n  function draw_cluster_table() {\n    if (self.cluster_table) {\n      add_a_sortable_table(self.cluster_table,\n        // headers\n        [\n          [{\n            value: \"Cluster ID\",\n            sort: \"value\",\n            help: \"Unique cluster ID\"\n          }, {\n            value: \"Visibility\",\n            sort: \"value\",\n            help: \"Visibility in the network tab\"\n          }, {\n            value: \"Size\",\n            sort: \"value\",\n            help: \"Number of nodes in the cluster\"\n          }, {\n            value: \"# links/node<br>Mean [Median, IQR]\",\n            html: true\n          }, {\n            value: \"Genetic distance<br>Mean [Median, IQR]\",\n            help: \"Genetic distance among nodes in the cluster\",\n            html: true\n          }]\n        ],\n        self.clusters.map(function(d, i) {\n          // rows\n          return [{\n            value: d.cluster_id,\n            callback: _cluster_table_draw_id\n          }, {\n            value: function() {\n              return [d.collapsed, d.hxb2_linked, d.match_filter, d.cluster_id]\n            },\n            callback: _cluster_table_draw_buttons,\n            volatile: true\n          }, {\n            value: d.children.length\n          }, {\n            value: d.degrees,\n            format: function(d) {\n              return _defaultFloatFormat(d['mean']) + \" [\" + _defaultFloatFormat(d['median']) + \", \" + _defaultFloatFormat(d['Q1']) + \" - \" + _defaultFloatFormat(d['Q3']) + \"]\"\n            }\n          }, {\n            value: d.distances,\n            format: function(d) {\n              return _defaultFloatFormat(d['mean']) + \" [\" + _defaultFloatFormat(d['median']) + \", \" + _defaultFloatFormat(d['Q1']) + \" - \" + _defaultFloatFormat(d['Q3']) + \"]\"\n            }\n          }];\n\n        })\n      );\n    }\n  }\n\n  /*------------ Update layout code ---------------*/\n  function update_network_string(draw_me) {\n    if (network_status_string) {\n      var clusters_shown = self.clusters.length - draw_me.clusters.length,\n        clusters_removed = self.cluster_sizes.length - self.clusters.length,\n        nodes_removed = graph_data.Nodes.length - singletons - self.nodes.length;\n\n      /*var s = \"Displaying a network on <strong>\" + self.nodes.length + \"</strong> nodes, <strong>\" + self.clusters.length + \"</strong> clusters\"\n              + (clusters_removed > 0 ? \" (an additional \" + clusters_removed + \" clusters and \" + nodes_removed + \" nodes have been removed due to network size constraints)\" : \"\") + \". <strong>\"\n              + clusters_shown +\"</strong> clusters are expanded. Of <strong>\" + self.edges.length + \"</strong> edges, <strong>\" + draw_me.edges.length + \"</strong>, and of  <strong>\" + self.nodes.length  + \" </strong> nodes,  <strong>\" + draw_me.nodes.length + \" </strong> are displayed. \";\n      if (singletons > 0) {\n          s += \"<strong>\" +singletons + \"</strong> singleton nodes are not shown. \";\n      }*/\n\n      var s = \"<span class = 'badge'>\" + self.clusters.length + \"</span> clusters <span class = 'label label-primary'>\" + clusters_shown + \" expanded</span> <span class = 'badge'> \" +\n        self.nodes.length + \"</span> nodes <span class = 'label label-primary'>\" + draw_me.nodes.length + \" shown</span> \" +\n        \"<span class = 'badge'>\" + self.edges.length + \"</span> \" + (self._is_CDC_ ? \"links\" : \"edges\") + \" <span class = 'label label-primary'>\" + draw_me.edges.length + \" shown</span>\";\n\n\n      d3.select(network_status_string).html(s);\n    }\n  }\n\n\n  function draw_a_node(container, node) {\n    container = d3.select(container);\n\n    var symbol_type = (node.hxb2_linked && !node.is_lanl) ? \"cross\" : (node.is_lanl ? \"triangle-down\" : self.node_shaper['shaper'](node));\n\n    container.attr(\"d\", misc.symbol(symbol_type).size(node_size(node)))\n      .attr('class', 'node')\n      .classed('selected_object', function(d) {\n        return d.match_filter\n      })\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      })\n      .style('fill', function(d) {\n        return node_color(d);\n      })\n      .style('opacity', function(d) {\n        return node_opacity(d);\n      })\n      .style('display', function(d) {\n        if (d.is_hidden) return 'none';\n        return null;\n      })\n      .on('click', handle_node_click)\n      .on('mouseover', node_pop_on)\n      .on('mouseout', node_pop_off)\n      .call(network_layout.drag().on('dragstart', node_pop_off));\n\n  }\n\n\n  function draw_a_cluster(container, the_cluster) {\n\n    var container_group = d3.select(container);\n\n    var draw_from = the_cluster[\"binned_attributes\"] ? the_cluster[\"binned_attributes\"].map(function(d) {\n      return d.concat([0]);\n    }) : [\n      [null, 1, 0]\n    ];\n\n    if (the_cluster.match_filter) {\n      draw_from = draw_from.concat([\n        [\"selected\", the_cluster.match_filter, 1],\n        [\"not selected\", the_cluster.children.length - the_cluster.match_filter, 1]\n      ]);\n    }\n\n    var sums = [d3.sum(draw_from.filter(function(d) {\n        return d[2] == 0\n      }), function(d) {\n        return d[1];\n      }),\n      d3.sum(draw_from.filter(function(d) {\n        return d[2] != 0\n      }), function(d) {\n        return d[1];\n      })\n    ];\n\n    var running_totals = [0, 0];\n\n    draw_from = draw_from.map(function(d) {\n      var index = d[2];\n      var v = {\n        'container': container,\n        'cluster': the_cluster,\n        'startAngle': running_totals[index] / sums[index] * 2 * Math.PI,\n        'endAngle': (running_totals[index] + d[1]) / sums[index] * 2 * Math.PI,\n        'name': d[0],\n        'rim': index > 0\n      };\n      running_totals[index] += d[1];\n      return v;\n\n    });\n\n\n    var arc_radius = cluster_box_size(the_cluster) * 0.5;\n    var paths = container_group.selectAll(\"path\").data(draw_from);\n    paths.enter().append(\"path\");\n    paths.exit().remove();\n\n    paths.classed(\"cluster\", true)\n      .classed(\"hiv-trace-problematic\", function(d) {\n        return the_cluster.hxb2_linked && !d.rim;\n      })\n      .classed(\"hiv-trace-selected\", function(d) {\n        return d.rim;\n      })\n      .attr(\"d\", function(d) {\n        return (d.rim ? d3.svg.arc().innerRadius(arc_radius + 2).outerRadius(arc_radius + 5) : d3.svg.arc().innerRadius(0).outerRadius(arc_radius))(d);\n      })\n      .style(\"fill\", function(d, i) {\n        return d.rim ? self.colorizer['selected'](d.name) : (the_cluster[\"gradient\"] ? 'url(#' + the_cluster[\"gradient\"] + ')' : cluster_color(the_cluster, d.name));\n      })\n      .style('display', function(d) {\n        if (the_cluster.is_hidden) return 'none';\n        return null;\n      });\n\n\n\n  }\n\n  function handle_shape_categorical(cat_id) {\n    var set_attr = \"None\";\n\n    [\"#\" + button_bar_ui + \"_shapes\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Shape: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n\n    if (cat_id) {\n      var shape_mapper = d3.scale.ordinal().domain(_.range(0, graph_data[_networkGraphAttrbuteID][cat_id].dimension)).range(_networkShapeOrdering);\n      self.node_shaper['id'] = cat_id;\n      self.node_shaper['shaper'] = function(d) {\n        return shape_mapper(graph_data[_networkGraphAttrbuteID][cat_id]['value_map'](attribute_node_value_by_id(d, cat_id)));\n      };\n      self.node_shaper['category_map'] = graph_data[_networkGraphAttrbuteID][cat_id]['value_map'];\n    } else {\n      self.node_shaper.id = null;\n      self.node_shaper.shaper = function() {\n        return 'circle'\n      };\n      self.node_shaper['category_map'] = null;\n    }\n    //console.log (graph_data [_networkGraphAttrbuteID][cat_id]['value_map'], self.node_shaper.domain(), self.node_shaper.range());\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  function draw_attribute_labels() {\n\n    legend_svg.selectAll(\"g.hiv-trace-legend\").remove();\n    var offset = 10;\n\n    if (self.colorizer['category_id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Color: \" + self.colorizer['category_id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      if (self.colorizer[\"continuous\"]) {\n        var anchor_format = graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['type'] == \"Date\" ? _defaultDateViewFormatShort : d3.format(\",.4r\");\n        var scale = graph_data[_networkGraphAttrbuteID][self.colorizer['category_id']]['scale'];\n\n        _.each(_.range(_networkContinuousColorStops), function(value) {\n          var x = scale.invert(value);\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(anchor_format(x));\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n            .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", self.colorizer['category'](x));\n\n          offset += 18;\n        });\n\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(\"missing\");\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n          .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", _networkMissingColor);\n\n        offset += 18;\n      } else {\n        _.each(self.colorizer['category_map'](null, 'map'), function(value, key) {\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(key);\n          legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\").attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", self.colorizer['category'](key));\n\n          offset += 18;\n        });\n      }\n    }\n\n    if (self.node_shaper['id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Shape: \" + self.node_shaper['id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      var shape_mapper = d3.scale.ordinal().domain(_.range(0, graph_data[_networkGraphAttrbuteID][self.node_shaper['id']].dimension)).range(_networkShapeOrdering);\n\n      _.each(self.node_shaper['category_map'](null, 'map'), function(value, key) {\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(key);\n\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"path\")\n          .attr(\"transform\", \"translate(5,-5)\")\n          .attr(\"d\", misc.symbol(shape_mapper(value)).size(128))\n          .classed('legend', true)\n          .style('fill', 'none');\n\n        offset += 18;\n      });\n    }\n\n    if (self.colorizer['opacity_id']) {\n      legend_svg.append(\"g\").attr(\"transform\", \"translate(0,\" + offset + \")\").classed('hiv-trace-legend', true).append(\"text\").text(\"Opacity: \" + self.colorizer['opacity_id']).style(\"font-weight\", \"bold\");\n      offset += 18;\n\n      var anchor_format = graph_data[_networkGraphAttrbuteID][self.colorizer['opacity_id']]['type'] == \"Date\" ? _defaultDateViewFormatShort : d3.format(\",.4r\");\n      var scale = graph_data[_networkGraphAttrbuteID][self.colorizer['opacity_id']]['scale'];\n\n      _.each(_.range(_networkContinuousColorStops), function(value) {\n        var x = scale.invert(value);\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(anchor_format(x));\n        legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n          .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", \"black\").style(\"opacity\", self.colorizer['opacity'](x));\n\n        offset += 18;\n      });\n\n      legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(20,\" + offset + \")\").append(\"text\").text(\"missing\");\n      legend_svg.append(\"g\").classed('hiv-trace-legend', true).attr(\"transform\", \"translate(0,\" + offset + \")\").append(\"circle\").attr(\"cx\", \"8\")\n        .attr(\"cy\", \"-4\").attr(\"r\", \"8\").classed(\"legend\", true).style(\"fill\", \"black\").style(\"opacity\", _networkMissingOpacity);\n\n      offset += 18;\n    }\n  }\n\n  function compute_cluster_gradient(cluster, cat_id) {\n    if (cat_id) {\n      var id = \"hivtrace-cluster-gradient-\" + (self.gradient_id++);\n      var gradient = network_svg.selectAll(\"defs\").append(\"radialGradient\").attr(\"id\", id);\n      var values = _.map(cluster.children, function(node) {\n        var value = attribute_node_value_by_id(node, cat_id);\n        return value == _networkMissing ? Infinity : value;\n      }).sort(function(a, b) {\n        return (0 + a) - (0 + b);\n      });\n      var finite = _.filter(values, function(d) {\n        return d < Infinity;\n      });\n      var infinite = values.length - finite.length;\n\n\n      if (infinite) {\n        gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", _networkMissingColor);\n        gradient.append(\"stop\").attr(\"offset\", \"\" + (infinite / values.length * 100) + \"%\").attr(\"stop-color\", _networkMissingColor);\n      }\n\n\n      _.each(finite, function(value, index) {\n        gradient.append(\"stop\").attr(\"offset\", \"\" + ((1 + index + infinite) * 100) / values.length + \"%\").attr(\"stop-color\", self.colorizer['category'](value));\n      });\n      //gradient.append (\"stop\").attr (\"offset\", \"100%\").attr (\"stop-color\", self.colorizer['category'] (dom[1]));\n\n\n      return id;\n    }\n    return null;\n  }\n\n  function handle_attribute_opacity(cat_id) {\n    var set_attr = \"None\";\n\n    [\"#\" + button_bar_ui + \"_opacity\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Opacity: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    d3.select(\"#\" + button_bar_ui + \"_opacity_invert\").style(\"display\", set_attr == \"None\" ? \"none\" : \"inline\").classed(\"btn-active\", false).classed(\"btn-default\", true);\n\n\n\n    self.colorizer['opacity_id'] = cat_id;\n    if (cat_id) {\n      var scale = graph_data[_networkGraphAttrbuteID][cat_id]['scale'];\n      self.colorizer['opacity_scale'] = d3.scale.linear().domain([0, _networkContinuousColorStops - 1]).range([0.25, 1]);\n      self.colorizer['opacity'] = function(v) {\n        if (v == _networkMissing) {\n          return _networkMissingOpacity;\n        }\n        return self.colorizer['opacity_scale'](scale(v));\n      };\n    } else {\n      self.colorizer['opacity'] = null;\n      self.colorizer['opacity_scale'] = null;\n    }\n\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  function handle_attribute_continuous(cat_id) {\n    var set_attr = \"None\";\n\n    render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", null, null);\n    render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", null, null);\n\n    network_svg.selectAll(\"radialGradient\").remove();\n\n    self.clusters.forEach(function(the_cluster) {\n      delete the_cluster['binned_attributes'];\n      delete the_cluster[\"gradient\"]\n    });\n\n    [\"#\" + button_bar_ui + \"_attributes\", \"#\" + button_bar_ui + \"_attributes_cat\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Color: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    d3.select(\"#\" + button_bar_ui + \"_attributes_invert\").style(\"display\", set_attr == \"None\" ? \"none\" : \"inline\").classed(\"btn-active\", false).classed(\"btn-default\", true);\n\n    if (cat_id) {\n      //console.log (graph_data [_networkGraphAttrbuteID][cat_id]);\n\n\n      self.colorizer['category'] = _.wrap(d3.scale.linear().range([\"#fff7ec\", \"#fee8c8\", \"#fdd49e\", \"#fdbb84\", \"#fc8d59\", \"#ef6548\", \"#d7301f\", \"#b30000\", \"#7f0000\"]).domain(_.range(_networkContinuousColorStops)),\n        function(func, arg) {\n          return func(graph_data[_networkGraphAttrbuteID][cat_id]['scale'](arg));\n        }); //console.log (self.colorizer['category'].exponent ());\n\n      //console.log (self.colorizer['category'] (graph_data [_networkGraphAttrbuteID][cat_id]['value_range'][0]), self.colorizer['category'] (d['value_range'][1]));\n\n      self.colorizer['category_id'] = cat_id;\n      self.colorizer['continuous'] = true;\n      self.clusters.forEach(function(the_cluster) {\n        the_cluster[\"gradient\"] = compute_cluster_gradient(the_cluster, cat_id);\n      });\n\n\n      var points = [];\n\n      _.each(self.edges, function(e) {\n\n\n        var src = attribute_node_value_by_id(self.nodes[e.source], cat_id),\n          tgt = attribute_node_value_by_id(self.nodes[e.target], cat_id);\n\n        if (src != _networkMissing && tgt != _networkMissing) {\n          points.push({\n            x: src,\n            y: tgt,\n            title: self.nodes[e.source].id + \" (\" + src + \") -- \" + self.nodes[e.target].id + \" (\" + tgt + \")\"\n          });\n        }\n      });\n      d3.select(\"#\" + button_bar_ui + \"_aux_svg_holder_enclosed\").style(\"display\", null);\n\n      scatterPlot(points, 400, 400, \"#\" + button_bar_ui + \"_aux_svg_holder\", {\n        x: \"Source\",\n        y: \"Target\"\n      }, graph_data[_networkGraphAttrbuteID][cat_id]['type'] == \"Date\");\n\n    } else {\n      self.colorizer['category'] = null;\n      self.colorizer['category_id'] = null;\n      self.colorizer['continuous'] = false;\n      self.colorizer['category_pairwise'] = null;\n      self.colorizer['category_map'] = null;\n    }\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n\n  }\n\n  function handle_attribute_categorical(cat_id) {\n\n    //console.log (cat_id, graph_data [_networkGraphAttrbuteID]);\n\n    var set_attr = \"None\";\n    d3.select(\"#\" + button_bar_ui + \"_attributes_invert\").style(\"display\", \"none\");\n\n    network_svg.selectAll(\"radialGradient\").remove();\n\n    [\"#\" + button_bar_ui + \"_attributes\", \"#\" + button_bar_ui + \"_attributes_cat\"].forEach(function(m) {\n      d3.select(m).selectAll(\"li\").selectAll(\"a\").attr(\"style\", function(d, i) {\n        if (d[1] == cat_id) {\n          set_attr = d[0];\n          return ' font-weight: bold;'\n        };\n        return null;\n      });\n      d3.select(m + \"_label\").html(\"Color: \" + set_attr + ' <span class=\"caret\"></span>');\n    });\n\n    self.clusters.forEach(function(the_cluster) {\n      delete the_cluster[\"gradient\"];\n      the_cluster['binned_attributes'] = stratify(attribute_cluster_distribution(the_cluster, cat_id));\n    });\n\n\n    self.colorizer['continuous'] = false;\n\n    if (cat_id) {\n      if (cat_id in _networkPresetColorSchemes) {\n        var domain = [],\n          range = [];\n        _.each(_networkPresetColorSchemes[cat_id], function(value, key) {\n          domain.push(key);\n          range.push(value);\n        });\n        self.colorizer['category'] = d3.scale.ordinal().domain(domain).range(range);\n\n      } else {\n        if (graph_data[_networkGraphAttrbuteID][cat_id]['color_scale']) {\n          self.colorizer['category'] = graph_data[_networkGraphAttrbuteID][cat_id]['color_scale'](graph_data[_networkGraphAttrbuteID][cat_id]);\n        } else {\n\n\n          self.colorizer['category'] = d3.scale.ordinal().range(_networkCategorical);\n          var extended_range = _.clone(self.colorizer['category'].range());\n          extended_range.push(_networkMissingColor);\n\n          self.colorizer['category'].domain(_.range(_maximumValuesInCategories + 1));\n          self.colorizer['category'].range(extended_range);\n\n          if (graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order']) {\n            self.colorizer['category'] = _.wrap(self.colorizer['category'], function(func, arg) {\n              if (arg == _networkMissing) {\n                return func(_maximumValuesInCategories);\n              }\n              return func(graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order'][arg]);\n            });\n            //console.log (graph_data[_networkGraphAttrbuteID][cat_id]['stable-ish order']);\n          }\n\n        }\n      }\n      self.colorizer['category_id'] = cat_id;\n      self.colorizer['category_map'] = graph_data[_networkGraphAttrbuteID][cat_id]['value_map'];\n      //self.colorizer['category_map'][null] =  graph_data [_networkGraphAttrbuteID][cat_id]['range'];\n      self.colorizer['category_pairwise'] = attribute_pairwise_distribution(cat_id, graph_data[_networkGraphAttrbuteID][cat_id].dimension, self.colorizer['category_map']);\n\n\n\n      render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n      render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", self.colorizer['category_map'], self.colorizer['category_pairwise']);\n    } else {\n      self.colorizer['category'] = null;\n      self.colorizer['category_id'] = null;\n      self.colorizer['category_pairwise'] = null;\n      self.colorizer['category_map'] = null;\n      render_chord_diagram(\"#\" + button_bar_ui + \"_aux_svg_holder\", null, null);\n      render_binned_table(\"#\" + button_bar_ui + \"_attribute_table\", null, null);\n    }\n\n    draw_attribute_labels();\n    self.update(true);\n    d3.event.preventDefault();\n  }\n\n  self.filter_visibility = function() {\n    self.clusters.forEach(function(c) {\n      c.is_hidden = self.hide_unselected && !c.match_filter;\n    });\n    self.nodes.forEach(function(n) {\n      n.is_hidden = self.hide_unselected && !n.match_filter;\n    });\n  };\n\n\n  self.filter = function(conditions, skip_update) {\n\n    var anything_changed = false;\n\n\n    conditions = _.map(['re', 'distance'], function(cnd) {\n      return _.map(_.filter(conditions, function(v) {\n        return v.type == cnd;\n      }), function(v) {\n        return v.value;\n      });\n    });\n\n\n    if (conditions[1].length) {\n      self.nodes.forEach(function(n) {\n        n.length_filter = false;\n      });\n\n      _.each(self.edges, function(e) {\n        var did_match = _.some(conditions[1], function(d) {\n          return e.length <= d;\n        });\n\n        if (did_match) {\n          self.nodes[e.source].length_filter = true;\n          self.nodes[e.target].length_filter = true;\n        }\n      });\n    }\n\n\n    self.clusters.forEach(function(c) {\n      c.match_filter = 0;\n    });\n\n    self.nodes.forEach(function(n) {\n\n      var did_match = _.some(conditions[0], function(regexp) {\n        return regexp.test(n.id) || _.some(n[_networkNodeAttributeID], function(attr) {\n          return regexp.test(attr)\n        });\n      });\n\n      did_match = did_match || n.length_filter;\n\n      if (did_match != n.match_filter) {\n        n.match_filter = did_match;\n        anything_changed = true;\n      }\n\n      if (n.match_filter) {\n        n.parent.match_filter += 1;\n      }\n    });\n\n\n    if (anything_changed && !skip_update) {\n      if (self.hide_unselected) {\n        self.filter_visibility();\n      }\n\n      self.update(true);\n    }\n\n  }\n\n  self.update = function(soft, friction) {\n\n    self.needs_an_update = false;\n\n    if (friction) {\n      network_layout.friction(friction);\n    }\n    if (network_warning_tag) {\n      if (warning_string.length) {\n        d3.select(network_warning_tag).text(warning_string).style(\"display\", \"block\");\n        warning_string = \"\";\n      } else {\n        d3.select(network_warning_tag).style(\"display\", \"none\");\n      }\n    }\n\n    var rendered_nodes,\n      rendered_clusters,\n      link;\n\n    if (!soft) {\n\n      var draw_me = prepare_data_to_graph();\n\n\n      network_layout.nodes(draw_me.all)\n        .links(draw_me.edges)\n        .start();\n\n      update_network_string(draw_me);\n\n      link = network_svg.selectAll(\".link\")\n        .data(draw_me.edges, function(d) {\n          return d.id;\n        });\n\n      link.enter().append(\"line\")\n        .classed(\"link\", true);\n      link.exit().remove();\n\n      link.classed(\"removed\", function(d) {\n          return d.removed;\n        })\n        .classed(\"unsupported\", function(d) {\n          return \"support\" in d && d[\"support\"] > 0.05;\n        })\n        .on(\"mouseover\", edge_pop_on)\n        .on(\"mouseout\", edge_pop_off)\n        .filter(function(d) {\n          return d.directed;\n        })\n        .attr(\"marker-end\", \"url(#arrowhead)\");\n\n\n      rendered_nodes = network_svg.selectAll('.node')\n        .data(draw_me.nodes, function(d) {\n          return d.id;\n        });\n      rendered_nodes.exit().remove();\n      rendered_nodes.enter().append(\"path\");\n\n      rendered_clusters = network_svg.selectAll(\".cluster-group\").\n      data(draw_me.clusters.map(function(d) {\n        return d;\n      }), function(d) {\n        return d.cluster_id;\n      });\n\n      rendered_clusters.exit().remove();\n      rendered_clusters.enter().append(\"g\").attr(\"class\", \"cluster-group\")\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        })\n        .on(\"click\", handle_cluster_click)\n        .on(\"mouseover\", cluster_pop_on)\n        .on(\"mouseout\", cluster_pop_off)\n        .call(network_layout.drag().on(\"dragstart\", cluster_pop_off));\n\n      draw_cluster_table();\n      draw_node_table();\n\n    } else {\n      rendered_nodes = network_svg.selectAll('.node');\n      rendered_clusters = network_svg.selectAll(\".cluster-group\");\n      link = network_svg.selectAll(\".link\");\n    }\n\n    rendered_nodes.each(function(d) {\n      draw_a_node(this, d);\n    });\n\n    rendered_clusters.each(function(d) {\n      draw_a_cluster(this, d);\n    });\n\n    link.style(\"opacity\", function(d) {\n      return Math.max(node_opacity(d.target), node_opacity(d.source))\n    })\n    link.style(\"display\", function(d) {\n      if (d.target.is_hidden || d.source.is_hidden) {\n        return 'none'\n      };\n      return null;\n    })\n\n\n    if (!soft) {\n      currently_displayed_objects = rendered_clusters[0].length + rendered_nodes[0].length;\n\n      network_layout.on(\"tick\", function() {\n        var sizes = network_layout.size();\n\n        rendered_nodes.attr(\"transform\", function(d) {\n          return \"translate(\" + (d.x = Math.max(10, Math.min(sizes[0] - 10, d.x))) + \",\" + (d.y = Math.max(10, Math.min(sizes[1] - 10, d.y))) + \")\";\n        });\n        rendered_clusters.attr(\"transform\", function(d) {\n          return \"translate(\" + (d.x = Math.max(10, Math.min(sizes[0] - 10, d.x))) + \",\" + (d.y = Math.max(10, Math.min(sizes[1] - 10, d.y))) + \")\";\n        });\n\n        link.attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          });\n      });\n    } else {\n      link.each(function(d) {\n        d3.select(this).attr(\"x1\", function(d) {\n            return d.source.x;\n          })\n          .attr(\"y1\", function(d) {\n            return d.source.y;\n          })\n          .attr(\"x2\", function(d) {\n            return d.target.x;\n          })\n          .attr(\"y2\", function(d) {\n            return d.target.y;\n          })\n      });\n    }\n  }\n\n  function tick() {\n    var sizes = network_layout.size();\n\n    node.attr(\"cx\", function(d) {\n        return d.x = Math.max(10, Math.min(sizes[0] - 10, d.x));\n      })\n      .attr(\"cy\", function(d) {\n        return d.y = Math.max(10, Math.min(sizes[1] - 10, d.y));\n      });\n\n    link.attr(\"x1\", function(d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function(d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function(d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function(d) {\n        return d.target.y;\n      });\n\n  }\n\n  /*------------ Node Methods ---------------*/\n  function compute_node_degrees(nodes, edges) {\n    for (var n in nodes) {\n      nodes[n].degree = 0;\n    }\n\n    for (var e in edges) {\n      nodes[edges[e].source].degree++;\n      nodes[edges[e].target].degree++;\n    }\n  }\n\n\n  function attribute_node_value_by_id(d, id) {\n    if (_networkNodeAttributeID in d && id) {\n      if (id in d[_networkNodeAttributeID]) {\n        var v = d[_networkNodeAttributeID][id];\n\n        if (_.isString(v) && v.length == 0) {\n          return _networkMissing;\n        }\n        return v;\n      }\n    }\n    return _networkMissing;\n  }\n\n  function inject_attribute_node_value_by_id(d, id, value) {\n    if (_networkNodeAttributeID in d && id) {\n      d[_networkNodeAttributeID][id] = value;\n    }\n  }\n\n  function node_size(d) {\n    var r = 5 + Math.sqrt(d.degree); //return (d.match_filter ? 10 : 4)*r*r;\n    return 4 * r * r;\n  }\n\n  function node_color(d) {\n\n    /*if (d.match_filter) {\n        return \"white\";\n    }*/\n\n    if (self.colorizer['category_id']) {\n      var v = attribute_node_value_by_id(d, self.colorizer['category_id']);\n      if (self.colorizer['continuous']) {\n        if (v == _networkMissing) {\n          return _networkMissingColor;\n        }\n        //console.log (v, self.colorizer['category'](v));\n      }\n      return self.colorizer['category'](v);\n\n    }\n    return d.hxb2_linked ? \"black\" : (d.is_lanl ? \"red\" : \"gray\");\n  }\n\n  function node_opacity(d) {\n    if (self.colorizer['opacity']) {\n      return self.colorizer['opacity'](attribute_node_value_by_id(d, self.colorizer['opacity_id']));\n    }\n    return 1.;\n  }\n\n  function cluster_color(d, type) {\n    if (d[\"binned_attributes\"]) {\n      return self.colorizer['category'](type);\n    }\n    return \"#bdbdbd\";\n  }\n\n  function hxb2_node_color(d) {\n    return \"black\";\n  }\n\n  function node_info_string(n) {\n    var str;\n\n    if (!self._is_CDC_) {\n      str = \"Degree <em>\" + n.degree + \"</em><br>Clustering coefficient <em> \" + misc.format_value(n.lcc, _defaultFloatFormat) + \"</em>\";\n    } else {\n      str = \"# links <em>\" + n.degree + \"</em>\";\n    }\n\n    _.each(_.union(self._additional_node_pop_fields, [self.colorizer['category_id'], self.node_shaper['id'], self.colorizer['opacity_id']]),\n      function(key) {\n        if (key) {\n          if (key in graph_data[_networkGraphAttrbuteID]) {\n            var attribute = attribute_node_value_by_id(n, key);\n\n            if (graph_data[_networkGraphAttrbuteID][key]['type'] == \"Date\") {\n              try {\n                attribute = _defaultDateViewFormat(attribute);\n              } catch (err) {\n\n              }\n            }\n            if (attribute) {\n              str += \"<br>\" + key + \" <em>\" + attribute + \"</em>\"\n            }\n          }\n\n        }\n      });\n\n\n    return str;\n  }\n\n  function edge_info_string(n) {\n    var str = \"Length <em>\" + _defaultFloatFormat(n.length) + \"</em>\";\n    if (\"support\" in n) {\n      str += \"<br>Worst triangle-based support (p): <em>\" + _defaultFloatFormat(n.support) + \"</em>\";\n    }\n\n    var attribute = attribute_node_value_by_id(n, self.colorizer['category_id']);\n\n    return str;\n  }\n\n  function node_pop_on(d) {\n    toggle_tooltip(this, true, (self._is_CDC_ ? \"Individual \" : \"Node \") + d.id, node_info_string(d), self.container);\n  }\n\n  function node_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n  function edge_pop_on(e) {\n    toggle_tooltip(this, true, e.source.id + \" - \" + e.target.id, edge_info_string(e), self.container);\n  }\n\n  function edge_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n\n  /*------------ Cluster Methods ---------------*/\n\n  function compute_cluster_centroids(clusters) {\n    for (var c in clusters) {\n      var cls = clusters[c];\n      cls.x = 0.;\n      cls.y = 0.;\n      cls.children.forEach(function(x) {\n        cls.x += x.x;\n        cls.y += x.y;\n      });\n      cls.x /= cls.children.length;\n      cls.y /= cls.children.length;\n    }\n  }\n\n  function collapse_cluster(x, keep_in_q) {\n    self.needs_an_update = true;\n    x.collapsed = true;\n    currently_displayed_objects -= self.cluster_sizes[x.cluster_id - 1] - 1;\n    if (!keep_in_q) {\n      var idx = open_cluster_queue.indexOf(x.cluster_id);\n      if (idx >= 0) {\n        open_cluster_queue.splice(idx, 1);\n      }\n    }\n    compute_cluster_centroids([x]);\n    return x.children.length;\n  }\n\n  function expand_cluster(x, copy_coord) {\n    self.needs_an_update = true;\n    x.collapsed = false;\n    currently_displayed_objects += self.cluster_sizes[x.cluster_id - 1] - 1;\n    open_cluster_queue.push(x.cluster_id);\n    if (copy_coord) {\n      x.children.forEach(function(n) {\n        n.x = x.x + (Math.random() - 0.5) * x.children.length;\n        n.y = x.y + (Math.random() - 0.5) * x.children.length;\n      });\n    } else {\n      x.children.forEach(function(n) {\n        n.x = self.width * 0.25 + (Math.random() - 0.5) * x.children.length;\n        n.y = 0.25 * self.height + (Math.random() - 0.5) * x.children.length;\n      })\n    }\n  }\n\n  function render_binned_table(id, the_map, matrix) {\n\n    var the_table = d3.select(id);\n\n    the_table.selectAll(\"thead\").remove();\n    the_table.selectAll(\"tbody\").remove();\n\n    d3.select(id + \"_enclosed\").style(\"display\", matrix ? null : \"none\");\n\n    if (matrix) {\n\n      var fill = self.colorizer['category'];\n      var lookup = the_map(null, 'lookup');\n\n\n      var headers = the_table.append(\"thead\").append(\"tr\")\n        .selectAll(\"th\").data([\"\"].concat(matrix[0].map(function(d, i) {\n          return lookup[i];\n        })));\n\n      headers.enter().append(\"th\");\n      headers.html(function(d) {\n        return \"<span>&nbsp;\" + d + \"</span>\";\n      }).each(\n        function(d, i) {\n          if (i) {\n            d3.select(this).insert(\"i\", \":first-child\")\n              .classed(\"fa fa-circle\", true)\n              .style(\"color\", function() {\n                return fill(d);\n              });\n          }\n        }\n      );\n\n      if (self.show_percent_in_pairwise_table) {\n        var sum = _.map(matrix, function(row) {\n          return _.reduce(row, function(p, c) {\n            return p + c;\n          }, 0);\n        });\n\n        matrix = _.map(matrix, function(row, row_index) {\n          return _.map(row, function(c) {\n            return c / sum[row_index];\n          });\n        });\n      }\n\n\n\n\n      var rows = the_table.append(\"tbody\").selectAll(\"tr\").data(matrix.map(function(d, i) {\n        return [lookup[i]].concat(d);\n      }));\n\n      rows.enter().append(\"tr\");\n      rows.selectAll(\"td\").data(function(d) {\n        return d\n      }).enter().append(\"td\").html(function(d, i) {\n        return i == 0 ? (\"<span>&nbsp;\" + d + \"</span>\") : (self.show_percent_in_pairwise_table ? _defaultPercentFormat(d) : d);\n      }).each(function(d, i) {\n        if (i == 0) {\n          d3.select(this).insert(\"i\", \":first-child\")\n            .classed(\"fa fa-circle\", true)\n            .style(\"color\", function() {\n              return fill(d);\n            });\n        }\n\n      });\n\n\n\n    }\n  }\n\n  function render_chord_diagram(id, the_map, matrix) {\n\n    d3.select(id).selectAll(\"svg\").remove();\n\n    d3.select(id + \"_enclosed\").style(\"display\", matrix ? null : \"none\");\n\n    if (matrix) {\n\n      var lookup = the_map(null, 'lookup');\n\n\n      var svg = d3.select(id).append(\"svg\");\n\n\n      var chord = d3.layout.chord()\n        .padding(.05)\n        .sortSubgroups(d3.descending)\n        .matrix(matrix);\n\n      var text_offset = 20,\n        width = 450,\n        height = 450,\n        innerRadius = Math.min(width, height - text_offset) * .41,\n        outerRadius = innerRadius * 1.1;\n\n      var fill = self.colorizer['category'],\n        font_size = 12;\n\n      var text_label = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height - text_offset) + \")\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", font_size)\n        .text(\"\");\n\n      svg = svg.attr(\"width\", width)\n        .attr(\"height\", height - text_offset)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + (height - text_offset) / 2 + \")\");\n\n\n      svg.append(\"g\").selectAll(\"path\")\n        .data(chord.groups)\n        .enter().append(\"path\")\n        .style(\"fill\", function(d) {\n          return fill(lookup[d.index]);\n        })\n        .style(\"stroke\", function(d) {\n          return fill(lookup[d.index]);\n        })\n        .attr(\"d\", d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius))\n        .on(\"mouseover\", fade(0.1, true))\n        .on(\"mouseout\", fade(1, false));\n\n      svg.append(\"g\")\n        .attr(\"class\", \"chord\")\n        .selectAll(\"path\")\n        .data(chord.chords)\n        .enter().append(\"path\")\n        .attr(\"d\", d3.svg.chord().radius(innerRadius))\n        .style(\"fill\", function(d) {\n          return fill(d.target.index);\n        })\n        .style(\"opacity\", 1);\n\n      // Returns an event handler for fading a given chord group.\n      function fade(opacity, t) {\n        return function(g, i) {\n          text_label.text(t ? lookup[i] : \"\");\n          svg.selectAll(\".chord path\")\n            .filter(function(d) {\n              return d.source.index != i && d.target.index != i;\n            })\n            .transition()\n            .style(\"opacity\", opacity);\n        };\n      }\n    }\n  }\n\n  function attribute_pairwise_distribution(id, dim, the_map, only_expanded) {\n    var scan_from = only_expanded ? draw_me.edges : self.edges;\n    var the_matrix = [];\n    for (var i = 0; i < dim; i += 1) {\n      the_matrix.push([]);\n      for (var j = 0; j < dim; j += 1) {\n        the_matrix[i].push(0);\n      }\n    }\n\n\n    _.each(scan_from,\n      function(edge) {\n        //console.log (attribute_node_value_by_id(self.nodes[edge.source], id), attribute_node_value_by_id(self.nodes[edge.target], id));\n        the_matrix[the_map(attribute_node_value_by_id(self.nodes[edge.source], id))][the_map(attribute_node_value_by_id(self.nodes[edge.target], id))] += 1;\n      });\n    // check if there are null values\n\n    var haz_null = the_matrix.some(function(d, i) {\n      if (i == dim - 1) {\n        return d.some(function(d2) {\n          return d2 > 0;\n        });\n      }\n      return d[dim - 1] > 0;\n    });\n    if (!haz_null) {\n      the_matrix.pop();\n      for (i = 0; i < dim - 1; i += 1) {\n        the_matrix[i].pop();\n      }\n    }\n\n    // symmetrize the matrix\n\n    dim = the_matrix.length;\n\n    for (i = 0; i < dim; i += 1) {\n      for (j = i; j < dim; j += 1) {\n        the_matrix[i][j] += the_matrix[j][i];\n        the_matrix[j][i] = the_matrix[i][j];\n      }\n    }\n\n    return the_matrix;\n  }\n\n  function attribute_cluster_distribution(the_cluster, attribute_id) {\n    if (attribute_id && the_cluster) {\n      return the_cluster.children.map(function(d) {\n        return attribute_node_value_by_id(d, attribute_id);\n      });\n    }\n    return null;\n  }\n\n  function cluster_info_string(id) {\n    var the_cluster = self.clusters[id - 1],\n      attr_info = the_cluster[\"binned_attributes\"];\n\n\n\n    var str;\n\n    if (self._is_CDC_) {\n      str = \"<strong>\" + self.cluster_sizes[id - 1] + \"</strong> individuals.\" +\n        \"<br>Mean links/individual <em> = \" + _defaultFloatFormat(the_cluster.degrees['mean']) + \"</em>\" +\n        \"<br>Max links/individual <em> = \" + the_cluster.degrees['max'] + \"</em>\";\n    } else {\n      str = \"<strong>\" + self.cluster_sizes[id - 1] + \"</strong> nodes.\" +\n        \"<br>Mean degree <em>\" + _defaultFloatFormat(the_cluster.degrees['mean']) + \"</em>\" +\n        \"<br>Max degree <em>\" + the_cluster.degrees['max'] + \"</em>\" +\n        \"<br>Clustering coefficient <em> \" + misc.format_value(the_cluster.cc, _defaultFloatFormat) + \"</em>\";\n    }\n\n    if (attr_info) {\n      attr_info.forEach(function(d) {\n        str += \"<br>\" + d[0] + \" <em>\" + d[1] + \"</em>\"\n      });\n    }\n\n    return str;\n  }\n\n  function cluster_pop_on(d) {\n    toggle_tooltip(this, true, \"Cluster \" + d.cluster_id, cluster_info_string(d.cluster_id), self.container);\n  }\n\n  function cluster_pop_off(d) {\n    toggle_tooltip(this, false);\n  }\n\n  function expand_cluster_handler(d, do_update, move_out) {\n    if (d.collapsed) {\n      var new_nodes = self.cluster_sizes[d.cluster_id - 1] - 1;\n\n      if (new_nodes > max_points_to_render) {\n        warning_string = \"This cluster is too large to be displayed\";\n      } else {\n        var leftover = new_nodes + currently_displayed_objects - max_points_to_render;\n        if (leftover > 0) {\n          for (k = 0; k < open_cluster_queue.length && leftover > 0; k++) {\n            var cluster = self.clusters[cluster_mapping[open_cluster_queue[k]]];\n            leftover -= cluster.children.length - 1;\n            collapse_cluster(cluster, true);\n          }\n          if (k || open_cluster_queue.length) {\n            open_cluster_queue.splice(0, k);\n          }\n        }\n\n        if (leftover <= 0) {\n          expand_cluster(d, !move_out);\n        }\n      }\n\n      if (do_update) {\n        self.update(false, 0.6);\n      }\n    }\n    return \"\";\n  }\n\n  function collapse_cluster_handler(d, do_update) {\n    collapse_cluster(self.clusters[cluster_mapping[d.cluster]]);\n    if (do_update) {\n      self.update(false, 0.4);\n    }\n\n  }\n\n  function center_cluster_handler(d) {\n    d.x = self.width / 2;\n    d.y = self.height / 2;\n    self.update(false, 0.4);\n  }\n\n  function cluster_box_size(c) {\n    return 8 * Math.sqrt(c.children.length);\n  }\n\n  self.expand_some_clusters = function(subset) {\n    subset = subset || self.clusters;\n    subset.forEach(function(x) {\n      expand_cluster_handler(x, false);\n    });\n    self.update();\n  }\n\n  self.select_some_clusters = function(condition) {\n    return self.clusters.filter(function(c, i) {\n      return _.some(c.children, (function(n) {\n        return condition(n);\n      }));\n    });\n  }\n\n  self.collapse_some_clusters = function(subset) {\n    subset = subset || self.clusters;\n    subset.forEach(function(x) {\n      if (!x.collapsed) collapse_cluster(x);\n    });\n    self.update();\n  }\n\n  self.toggle_hxb2 = function() {\n    self.hide_hxb2 = !self.hide_hxb2;\n    self.update();\n  }\n\n  $('#reset_layout').click(function(e) {\n    default_layout(clusters, nodes);\n    self.update();\n    e.preventDefault(); // prevent the default anchor functionality\n  });\n\n  function stratify(array) {\n    if (array) {\n      var dict = {},\n        stratified = [];\n\n      array.forEach(function(d) {\n        if (d in dict) {\n          dict[d] += 1;\n        } else {\n          dict[d] = 1;\n        }\n      });\n      for (var uv in dict) {\n        stratified.push([uv, dict[uv]]);\n      }\n      return stratified.sort(function(a, b) {\n        return a[0] - b[0];\n      });\n    }\n    return array;\n  }\n\n  /*------------ Event Functions ---------------*/\n  function toggle_tooltip(element, turn_on, title, tag, container) {\n    //if (d3.event.defaultPrevented) return;\n\n    if (turn_on && !element.tooltip) {\n\n      // check to see if there are any other tooltips shown\n      ($(\"[role='tooltip']\")).each(function(d) {\n        $(this).remove();\n      });\n\n      var this_box = $(element);\n      var this_data = d3.select(element).datum();\n      element.tooltip = this_box.tooltip({\n        title: title + \"<br>\" + tag,\n        html: true,\n        container: container ? container : 'body',\n      });\n\n      //this_data.fixed = true;\n\n      _.delay(_.bind(element.tooltip.tooltip, element.tooltip), 500, 'show');\n    } else {\n      if (turn_on == false && element.tooltip) {\n        element.tooltip.tooltip('destroy');\n        element.tooltip = undefined;\n      }\n    }\n  }\n\n  initial_json_load();\n  if (options) {\n    if (_.isNumber(options[\"charge\"])) {\n      self.charge_correction = options[\"charge\"];\n    }\n\n    if (\"colorizer\" in options) {\n      self.colorizer = options[\"colorizer\"];\n    }\n\n    if (\"node_shaper\" in options) {\n      self.node_shaper = options[\"node_shaper\"];\n    }\n\n    draw_attribute_labels();\n    network_layout.start();\n\n    if (_.isArray(options[\"expand\"])) {\n      self.expand_some_clusters(_.filter(self.clusters, function(c) {\n        return options[\"expand\"].indexOf(c.cluster_id) >= 0;\n      }));\n    }\n  }\n  return self;\n}\n\n\n\nvar hivtrace_cluster_graph_summary = function(graph, tag) {\n\n  var summary_table = d3.select(tag);\n\n  summary_table = d3.select(tag).select(\"tbody\");\n  if (summary_table.empty()) {\n    summary_table = d3.select(tag).append(\"tbody\");\n  }\n\n\n  var table_data = [];\n\n  if (!summary_table.empty()) {\n    _.each(graph[\"Network Summary\"], function(value, key) {\n      if (self._is_CDC_ && key == \"Edges\") {\n        key = \"Links\";\n      }\n      table_data.push([key, value]);\n    });\n  }\n\n  var degrees = [];\n  _.each(graph[\"Degrees\"][\"Distribution\"], function(value, index) {\n    for (var k = 0; k < value; k++) {\n      degrees.push(index + 1);\n    }\n  });\n  degrees = helpers.describe_vector(degrees);\n  table_data.push(['Links/node', '']);\n  table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultFloatFormat(degrees['mean'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultFloatFormat(degrees['median'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Range</i>', degrees['min'] + \" - \" + degrees['max']]);\n  table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', degrees['Q1'] + \" - \" + degrees['Q3']]);\n\n  degrees = helpers.describe_vector(graph[\"Cluster sizes\"]);\n  table_data.push(['Cluster sizes', '']);\n  table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultFloatFormat(degrees['mean'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultFloatFormat(degrees['median'])]);\n  table_data.push(['&nbsp;&nbsp;<i>Range</i>', degrees['min'] + \" - \" + degrees['max']]);\n  table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', degrees['Q1'] + \" - \" + degrees['Q3']]);\n\n  if (self._is_CDC_) {\n    degrees = helpers.describe_vector(_.map(graph[\"Edges\"], function(e) {\n      return e.length;\n    }));\n    table_data.push(['Genetic distances (links only)', '']);\n    table_data.push(['&nbsp;&nbsp;<i>Mean</i>', _defaultPercentFormat(degrees['mean'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Median</i>', _defaultPercentFormat(degrees['median'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Range</i>', _defaultPercentFormat(degrees['min']) + \" - \" + _defaultPercentFormat(degrees['max'])]);\n    table_data.push(['&nbsp;&nbsp;<i>Interquartile range</i>', _defaultPercentFormat(degrees['Q1']) + \" - \" + _defaultPercentFormat(degrees['Q3'])]);\n  }\n\n\n  var rows = summary_table.selectAll(\"tr\").data(table_data);\n  rows.enter().append(\"tr\");\n  rows.exit().remove();\n  var columns = rows.selectAll(\"td\").data(function(d) {\n    return d;\n  });\n  columns.enter().append(\"td\");\n  columns.exit();\n  columns.html(function(d) {\n    return d\n  });\n}\n\nmodule.exports.clusterNetwork = hivtrace_cluster_network_graph;\nmodule.exports.graphSummary = hivtrace_cluster_graph_summary;\n\n\n// WEBPACK FOOTER //\n// ./src/clusternetwork.js","var d3 = require('d3'),\n  _ = require('underscore'),\n  helpers = require('./helpers.js');\n\nfunction hivtrace_cluster_adjacency_list(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n  var adjacency_list = {};\n\n  edges.forEach(function(e, i) {\n\n    function in_nodes(n, id) {\n      return n.id == id;\n    }\n\n    var seq_ids = e[\"sequences\"];\n\n    var n1 = nodes.filter(function(n) {\n        return in_nodes(n, seq_ids[0]);\n      })[0],\n      n2 = nodes.filter(function(n) {\n        return in_nodes(n, seq_ids[1]);\n      })[0];\n\n    adjacency_list[n1.id] ? adjacency_list[n1.id].push(n2) : adjacency_list[n1.id] = [n2];\n    adjacency_list[n2.id] ? adjacency_list[n2.id].push(n1) : adjacency_list[n2.id] = [n1];\n\n  });\n\n  return adjacency_list;\n\n}\n\nvar hivtrace_generate_svg_polygon_lookup = {};\n\n_.each(_.range(3, 20), function(d) {\n  var angle_step = Math.PI * 2 / d;\n  hivtrace_generate_svg_polygon_lookup[d] = _.map(_.range(1, d), function(i) {\n    return [Math.cos(angle_step * i), Math.sin(angle_step * i)];\n  });\n});\n\nfunction hivtrace_generate_svg_symbol(type) {\n  switch (type) {\n    case 'circle':\n    case 'cross':\n    case 'diamond':\n    case 'square':\n    case 'triangle-down':\n    case 'triangle-up':\n      return d3.svg.symbol().type(type);\n    case 'pentagon':\n      return new hivtrace_generate_svg_polygon().sides(5);\n    case 'hexagon':\n      return new hivtrace_generate_svg_polygon().sides(6);\n    case 'septagon':\n      return new hivtrace_generate_svg_polygon().sides(7);\n    case 'octagon':\n      return new hivtrace_generate_svg_polygon().sides(8);\n  }\n  return node;\n}\n\nvar hivtrace_generate_svg_polygon = function() {\n\n  var self = this;\n\n  self.polygon = function() {\n\n    var path = \" M\" + self.radius + \" 0\";\n\n    if (self.sides in hivtrace_generate_svg_polygon_lookup) {\n      path += hivtrace_generate_svg_polygon_lookup[self.sides].map(function(value) {\n        return \" L\" + self.radius * value[0] + \" \" + self.radius * value[1];\n      }).join(\" \");\n    } else {\n      var angle_step = Math.PI * 2 / self.sides,\n        current_angle = 0;\n      for (i = 0; i < self.sides - 1; i++) {\n        current_angle += angle_step;\n        path += \" L\" + self.radius * Math.cos(current_angle) + \" \" + self.radius * Math.sin(current_angle);\n      }\n    }\n\n    path += \" Z\";\n    return path;\n  };\n\n  self.polygon.sides = function(attr) {\n\n    if (_.isNumber(attr) && attr > 2) {\n      self.sides = attr;\n      return self.polygon;\n    }\n\n    return self.sides;\n\n  };\n\n  self.polygon.type = function() {\n    return self.polygon;\n  };\n\n  self.polygon.size = function(attr) {\n\n    if (_.isNumber(attr)) {\n      self.size = attr;\n      self.radius = Math.sqrt(attr / Math.PI);\n      return self.polygon;\n    }\n\n    return self.size;\n\n  };\n\n  self.polygon.size(64);\n  self.sides = 6;\n\n  return self.polygon;\n\n};\n\nfunction hivtrace_new_cluster_adjacency_list(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n\n  nodes.forEach(function(n) {\n    n.neighbors = d3.set();\n  });\n\n  edges.forEach(function(e) {\n    nodes[e.source].neighbors.add(e.target);\n    nodes[e.target].neighbors.add(e.source);\n  });\n\n}\n\n// Reconstructs path from floyd-warshall algorithm\nfunction hivtrace_get_path(next, i, j) {\n\n  var all_paths = [];\n  i = parseInt(i);\n  j = parseInt(j);\n\n  for (var c = 0; c < next[i][j].length; c++) {\n\n    var k = next[i][j][c];\n    var intermediate = k;\n\n    if (intermediate === null || intermediate == i) {\n      return [\n        [parseInt(i), parseInt(j)]\n      ];\n    } else {\n\n      var paths_i_k = hivtrace_get_path(next, i, intermediate);\n      var paths_k_j = hivtrace_get_path(next, intermediate, j);\n\n      for (var i_k_index = 0; i_k_index < paths_i_k.length; i_k_index++) {\n        var i_k = paths_i_k[i_k_index];\n        for (var k_j_index = 0; k_j_index < paths_k_j.length; k_j_index++) {\n          var k_j = paths_k_j[k_j_index];\n          if (i_k.length) {\n            if ((i_k[0] == i) && (i_k[i_k.length - 1] == k) && (k_j[0] == k) && (k_j[k_j.length - 1] == j)) {\n              i_k.pop();\n              all_paths.push(i_k.concat(k_j));\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return all_paths;\n\n}\n\nfunction hivtrace_paths_with_node(node, next, i, j) {\n\n  var paths = hivtrace_get_path(next, i, j);\n\n  // Retrieve intermediary paths\n  paths = paths.map(function(sublist) {\n    return sublist.slice(1, -1);\n  });\n\n  if (!paths) {\n    return 0;\n  }\n\n  var num_nodes = [];\n\n  for (var k = 0; i < paths.length; k++) {\n    sublist = paths[k];\n    num_nodes.push(d3.sum(sublist.map(function(n) {\n      return n == node;\n    })));\n  }\n\n  var mean = d3.mean(num_nodes);\n\n  if (mean === undefined) {\n    mean = 0;\n  }\n\n  return mean;\n\n}\n\n\n// Same as compute shortest paths, but with an additional next parameter for reconstruction\nfunction hivtrace_compute_shortest_paths_with_reconstruction(obj, subset, use_actual_distances) {\n\n  // Floyd-Warshall implementation\n  var distances = [];\n  var next = [];\n  var nodes = obj.Nodes;\n  var edges = obj.Edges;\n  var node_ids = [];\n\n  var adjacency_list = hivtrace_cluster_adjacency_list(obj);\n\n  if (!subset) {\n    subset = Object.keys(adjacency_list);\n  }\n\n  var node_count = subset.length;\n\n  for (var i = 0; i < subset.length; i++) {\n    var a_node = subset[i];\n    var empty_arr = _.range(node_count).map(function(d) {\n      return null;\n    });\n    var zeroes = _.range(node_count).map(function(d) {\n      return null;\n    });\n    distances.push(zeroes);\n    next.push(empty_arr);\n  }\n\n  for (var index = 0; index < subset.length; index++) {\n    var a_node = subset[index];\n    for (var index2 = 0; index2 < subset.length; index2++) {\n      var second_node = subset[index2];\n      if (second_node != a_node) {\n        if (adjacency_list[a_node].map(function(n) {\n            return n.id;\n          }).indexOf(second_node) != -1) {\n          distances[index][index2] = 1;\n          distances[index2][index] = 1;\n        }\n      }\n    }\n  }\n\n  for (var index_i = 0; index_i < subset.length; index_i++) {\n    var n_i = subset[index_i];\n    for (var index_j = 0; index_j < subset.length; index_j++) {\n      var n_j = subset[index_j];\n      if (index_i == index_j) {\n        next[index_i][index_j] = [];\n      } else {\n        next[index_i][index_j] = [index_i];\n      }\n    }\n  }\n\n  // clone distances\n  var distances2 = _.map(distances, _.clone);\n  var c = 0;\n\n  for (var index_k = 0; index_k < subset.length; index_k++) {\n    var n_k = subset[index_k];\n    for (var index_i = 0; index_i < subset.length; index_i++) {\n      var n_i = subset[index_i];\n      for (var index_j = 0; index_j < subset.length; index_j++) {\n        var n_j = subset[index_j];\n\n        if (n_i != n_j) {\n\n          d_ik = distances[index_k][index_i];\n          d_jk = distances[index_k][index_j];\n          d_ij = distances[index_i][index_j];\n\n          if (d_ik !== null && d_jk !== null) {\n            d_ik += d_jk;\n            if (d_ij === null || (d_ij > d_ik)) {\n              distances2[index_i][index_j] = d_ik;\n              distances2[index_j][index_i] = d_ik;\n              next[index_i][index_j] = [];\n              next[index_i][index_j] = next[index_i][index_j].concat(next[index_k][index_j]);\n              continue;\n            } else if (d_ij == d_ik) {\n              next[index_i][index_j] = next[index_i][index_j].concat(next[index_k][index_j]);\n            }\n          }\n          c++;\n          distances2[index_j][index_i] = distances[index_j][index_i];\n          distances2[index_i][index_j] = distances[index_i][index_j];\n        }\n      }\n    }\n\n    var t = distances2;\n    distances2 = distances;\n    distances = t;\n\n  }\n\n  return {\n    'ordering': subset,\n    'distances': distances,\n    'next': next\n  };\n\n}\n\nfunction hivtrace_filter_to_node_in_cluster(node, obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges,\n    cluster_id = null;\n\n  // Retrieve nodes that are part of the cluster\n  var node_obj = nodes.filter(function(n) {\n    return node == n.id;\n  });\n\n  if (node_obj) {\n    cluster_id = node_obj[0].cluster;\n  } else {\n    console.log('could not find node');\n    return null;\n  }\n\n  // Filter out all edges and nodes that belong to the cluster\n  var nodes_in_cluster = nodes.filter(function(n) {\n    return cluster_id == n.cluster;\n  });\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n  var edges_in_cluster = edges.filter(function(e) {\n    return node_ids.indexOf(e.sequences[0]) != -1;\n  });\n\n  var filtered_obj = {};\n  filtered_obj[\"Nodes\"] = nodes_in_cluster;\n  filtered_obj[\"Edges\"] = edges_in_cluster;\n  return filtered_obj;\n\n}\n\nfunction hivtrace_compute_betweenness_centrality_all_nodes_in_cluster(cluster, obj, cb) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n\n  var nodes_in_cluster = nodes.filter(function(n) {\n    return cluster == n.cluster;\n  });\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n  var edges_in_cluster = edges.filter(function(e) {\n    return node_ids.indexOf(e.sequences[0]) != -1;\n  });\n\n  var filtered_obj = {};\n  filtered_obj[\"Nodes\"] = nodes_in_cluster;\n  filtered_obj[\"Edges\"] = edges_in_cluster;\n\n  // get length of cluster\n  if (nodes_in_cluster.length > 70) {\n    cb('cluster too large', null);\n    return;\n  }\n\n  // get paths\n  var paths = hivtrace_compute_shortest_paths_with_reconstruction(filtered_obj);\n  var node_ids = nodes_in_cluster.map(function(n) {\n    return n.id;\n  });\n\n  var betweenness = {};\n  nodes_in_cluster.forEach(function(n) {\n    betweenness[n.id] = hivtrace_compute_betweenness_centrality(n.id, filtered_obj, paths);\n  });\n\n  cb(null, betweenness);\n  return;\n\n}\n\n// Returns dictionary of nodes' betweenness centrality\n// Utilizes the Floyd-Warshall Algorithm with reconstruction\nfunction hivtrace_compute_betweenness_centrality(node, obj, paths) {\n\n  if (!paths) {\n    var filtered_obj = hivtrace_filter_to_node_in_cluster(node, obj);\n    paths = hivtrace_compute_shortest_paths_with_reconstruction(filtered_obj);\n  }\n\n  // find index of id\n  var index = paths.ordering.indexOf(node);\n\n  if (index == -1) {\n    return null;\n  }\n\n  var length = paths.distances.length;\n\n  if (length != 2) {\n    scale = 1 / ((length - 1) * (length - 2));\n  } else {\n    scale = 1;\n  }\n\n\n  // If s->t goes through 1, add to sum\n  // Reconstruct each shortest path and check if node is in it\n  var paths_with_node = [];\n  for (var i in _.range(length)) {\n    for (var j in _.range(length)) {\n      paths_with_node.push(hivtrace_paths_with_node(index, paths.next, i, j));\n    }\n  }\n\n  return d3.sum(paths_with_node) * scale;\n\n}\n\n\nfunction hivtrace_compute_node_degrees(obj) {\n\n  var nodes = obj.Nodes,\n    edges = obj.Edges;\n\n  for (var n in nodes) {\n    nodes[n].degree = 0;\n  }\n\n  for (var e in edges) {\n    nodes[edges[e].source].degree++;\n    nodes[edges[e].target].degree++;\n  }\n\n}\n\nfunction hivtrace_get_node_by_id(id, obj) {\n  return obj.Nodes.filter(function(n) {\n    return id == n.id;\n  })[0] || undefined;\n}\n\nfunction hivtrace_compute_cluster_betweenness(obj, callback) {\n\n  var nodes = obj.Nodes;\n\n  function onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  // Get all unique clusters\n  var clusters = nodes.map(function(n) {\n    return n.cluster;\n  });\n  var unique_clusters = clusters.filter(onlyUnique);\n\n  var cb_count = 0;\n\n  function cb(err, results) {\n\n    cb_count++;\n\n    for (var node in results) {\n      hivtrace_get_node_by_id(node, obj)['betweenness'] = results[node];\n    }\n\n    if (cb_count >= unique_clusters.length) {\n      callback('done');\n    }\n\n  }\n\n  // Compute betweenness in parallel\n  unique_clusters.forEach(function(cluster_id) {\n    hivtrace_betweenness_centrality_all_nodes_in_cluster(cluster_id, obj, cb);\n  });\n\n  // once all settled callback\n\n}\n\n\nfunction hivtrace_is_contaminant(node) {\n  return node.attributes.indexOf('problematic') != -1;\n}\n\nfunction hivtrace_convert_to_csv(obj, callback) {\n  //Translate nodes to rows, and then use d3.format\n  hivtrace_compute_node_degrees(obj);\n\n  hivtrace_compute_cluster_betweenness(obj, function(err) {\n    var node_array = obj.Nodes.map(function(d) {\n      return [d.id, d.cluster, d.degree, d.betweenness, hivtrace_is_contaminant(d), d.attributes.join(';')];\n    });\n    node_array.unshift(['seqid', 'cluster', 'degree', 'betweenness', 'is_contaminant', 'attributes']);\n    node_csv = d3.csv.format(node_array);\n    callback(null, node_csv);\n  });\n}\n\nfunction hivtrace_export_csv_button(graph, tag) {\n\n  var data = hivtrace_convert_to_csv(graph, function(err, data) {\n    if (data !== null) {\n      var pom = document.createElement('a');\n      pom.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(data));\n      pom.setAttribute('download', 'export.csv');\n      pom.className = 'btn btn-default btn-sm';\n      pom.innerHTML = '<span class=\"glyphicon glyphicon-floppy-save\"></span> Export Results';\n      $(tag).append(pom);\n    }\n  });\n\n}\n\nfunction hiv_trace_export_table_to_text(parent_id, table_id, sep) {\n\n  var the_button = d3.select(parent_id);\n  the_button.selectAll(\"[data-type='download-button']\").remove();\n\n  the_button = the_button.append(\"a\")\n    .attr(\"target\", \"_blank\")\n    .attr(\"data-type\", \"download-button\")\n    .on(\"click\", function(data, element) {\n      d3.event.preventDefault();\n      var table_tag = d3.select(this).attr(\"data-table\");\n      var table_text = helpers.table_to_text(table_tag);\n      helpers.export_handler(table_text, table_tag.substring(1) + \".tsv\", \"text/tab-separated-values\");\n    })\n    .attr(\"data-table\", table_id);\n\n  the_button.append(\"i\").classed(\"fa fa-download fa-2x\", true);\n  return the_button;\n\n}\n\nvar hivtrace_compute_local_clustering_coefficients = _.once(function(obj) {\n\n  hivtrace_new_cluster_adjacency_list(obj);\n\n  var nodes = obj.Nodes;\n\n  nodes.forEach(function(n) {\n\n    var a_node = n;\n    var neighborhood_size = a_node.neighbors.size();\n\n    if (neighborhood_size < 2) {\n      a_node.lcc = undefined;\n    } else {\n\n      if (neighborhood_size > 500) {\n        a_node.lcc = hivtrace_too_large;\n      } else {\n        // count triangles\n        neighborhood = a_node.neighbors.values();\n        counter = 0;\n        for (n1 = 0; n1 < neighborhood_size; n1 += 1) {\n          for (n2 = n1 + 1; n2 < neighborhood_size; n2 += 1) {\n            if (nodes[neighborhood[n1]].neighbors.has(neighborhood[n2])) {\n              counter++;\n            }\n          }\n        }\n        a_node.lcc = 2 * counter / neighborhood_size / (neighborhood_size - 1);\n      }\n    }\n\n  });\n\n});\n\nfunction hivtrace_render_settings(settings, explanations) {\n  // TODO:\n  //d3.json (explanations, function (error, expl) {\n  //    //console.log (settings);\n  //});\n}\n\nfunction hivtrace_format_value(value, formatter) {\n\n  if (typeof value === 'undefined') {\n    return \"Not computed\";\n  }\n  if (value === hivtrace_undefined) {\n    return \"Undefined\";\n  }\n  if (value === hivtrace_too_large) {\n    return \"Size limit\";\n  }\n\n  if (value === hivtrace_processing) {\n    return '<span class=\"fa fa-spin fa-spinner\"></span>';\n  }\n\n  return formatter ? formatter(value) : value;\n\n}\n\nmodule.exports.compute_node_degrees = hivtrace_compute_node_degrees;\nmodule.exports.export_csv_button = hivtrace_export_csv_button;\nmodule.exports.convert_to_csv = hivtrace_convert_to_csv;\nmodule.exports.betweenness_centrality = hivtrace_compute_betweenness_centrality;\nmodule.exports.betweenness_centrality_all_nodes_in_cluster = hivtrace_compute_betweenness_centrality_all_nodes_in_cluster;\nmodule.exports.cluster_adjacency_list = hivtrace_cluster_adjacency_list;\nmodule.exports.new_cluster_adjacency_list = hivtrace_new_cluster_adjacency_list;\nmodule.exports.analysis_settings = hivtrace_render_settings;\nmodule.exports.export_table_to_text = hiv_trace_export_table_to_text;\nmodule.exports.compute_local_clustering = hivtrace_compute_local_clustering_coefficients;\nmodule.exports.undefined = {};\nmodule.exports.too_large = {};\nmodule.exports.processing = {};\nmodule.exports.format_value = hivtrace_format_value;\nmodule.exports.polygon = hivtrace_generate_svg_polygon;\nmodule.exports.symbol = hivtrace_generate_svg_symbol;\n\n\n// WEBPACK FOOTER //\n// ./src/misc.js","var d3 = require('d3'),\n  _ = require('underscore');\n\nfunction hivtrace_histogram(graph, histogram_tag, histogram_label) {\n\n  var defaultFloatFormat = d3.format(\",.2f\");\n  var histogram_w = 300,\n    histogram_h = 300;\n\n  hivtrace_render_histogram(graph[\"Degrees\"][\"Distribution\"],\n    graph[\"Degrees\"][\"fitted\"],\n    histogram_w,\n    histogram_h,\n    histogram_tag);\n\n  var label = \"Network degree distribution is best described by the <strong>\" + graph[\"Degrees\"][\"Model\"] + \"</strong> model, with &rho; of \" +\n    defaultFloatFormat(graph[\"Degrees\"][\"rho\"]);\n\n  if (graph[\"Degrees\"][\"rho CI\"] != undefined) {\n    label += \" (95% CI \" + defaultFloatFormat(graph[\"Degrees\"][\"rho CI\"][0]) + \" - \" + defaultFloatFormat(graph[\"Degrees\"][\"rho CI\"][1]) + \")\";\n  }\n\n  d3.select(histogram_label).html(label);\n}\n\nfunction hivtrace_histogram_distances(graph, histogram_tag, histogram_label) {\n\n  var defaultFloatFormat = d3.format(\",.3p\");\n  var histogram_w = 300,\n    histogram_h = 300;\n\n  var edge_lengths = _.map(graph[\"Edges\"], function(edge) {\n    return edge.length;\n  });\n\n\n  hivtrace_render_histogram_continuous(edge_lengths,\n    histogram_w,\n    histogram_h,\n    histogram_tag);\n\n  var label = \"Genetic distances among linked nodes.\";\n  d3.select(histogram_label).html(label);\n}\n\nfunction hivtrace_render_histogram_continuous(data, w, h, id) {\n\n  var margin = {\n      top: 10,\n      right: 30,\n      bottom: 50,\n      left: 30\n    },\n    width = w - margin.left - margin.right,\n    height = h - margin.top - margin.bottom;\n\n\n  var histogram_data = d3.layout.histogram()(data);\n\n\n\n  var x = d3.scale.linear()\n    .domain(d3.extent(data))\n    .range([0, width]);\n\n  var y = d3.scale.linear()\n    .domain([0, d3.max(_.map(histogram_data, function(b) {\n      return b.y\n    }))])\n    .range([height, 0]);\n\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\n  var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\");\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (histogram_svg) {\n    histogram_svg.remove();\n  }\n\n  histogram_data.splice(0, 0, {\n    'x': x.domain()[0],\n    'y': 0,\n    'dx': 0\n  });\n  histogram_data.splice(histogram_data.length, 0, {\n    'x': x.domain()[1],\n    'y': 0,\n    'dx': 0\n  });\n\n  histogram_svg = d3.select(id).insert(\"svg\", \".histogram-label\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .datum(histogram_data);\n\n  var histogram_line = d3.svg.line()\n    .x(function(d) {\n      return x(d.x + d.dx);\n    })\n    .y(function(d) {\n      return y(d.y);\n    })\n    .interpolate(\"step-before\");\n\n  histogram_svg.selectAll(\"path\").remove();\n  histogram_svg.append(\"path\")\n    .attr(\"d\", function(d) {\n      return histogram_line(d) + \"Z\";\n    })\n    .attr(\"class\", \"histogram\");\n\n\n\n  var x_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(45)\").attr(\"dx\", \"1em\").attr(\"dy\", \"0.5em\");\n\n  var y_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    //.attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(yAxis);\n\n}\n\nfunction hivtrace_render_histogram(counts, fit, w, h, id) {\n\n  var margin = {\n      top: 10,\n      right: 30,\n      bottom: 50,\n      left: 30\n    },\n    width = w - margin.left - margin.right,\n    height = h - margin.top - margin.bottom;\n\n  var x = d3.scale.linear()\n    .domain([0, counts.length + 1])\n    .range([0, width]);\n\n  var y = d3.scale.log()\n    .domain([1, d3.max(counts)])\n    .range([height, 0]);\n\n  var total = d3.sum(counts);\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (histogram_svg) {\n    histogram_svg.remove();\n  }\n\n  var data_to_plot = counts.map(function(d, i) {\n    return {\n      'x': i + 1,\n      'y': d + 1\n    };\n  });\n  data_to_plot.push({\n    'x': counts.length + 1,\n    'y': 1\n  });\n  data_to_plot.push({\n    'x': 0,\n    'y': 1\n  });\n  data_to_plot.push({\n    'x': 0,\n    'y': counts[0] + 1\n  });\n\n  histogram_svg = d3.select(id).insert(\"svg\", \".histogram-label\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .datum(data_to_plot);\n\n  var histogram_line = d3.svg.line()\n    .x(function(d) {\n      return x(d.x);\n    })\n    .y(function(d) {\n      return y(d.y);\n    })\n    .interpolate(\"step-before\");\n\n  histogram_svg.selectAll(\"path\").remove();\n  histogram_svg.append(\"path\")\n    .attr(\"d\", function(d) {\n      return histogram_line(d) + \"Z\";\n    })\n    .attr(\"class\", \"histogram\");\n\n\n\n  if (fit) {\n    var fit_line = d3.svg.line()\n      .interpolate(\"linear\")\n      .x(function(d, i) {\n        return x(i + 1) + (x(i + 1) - x(i)) / 2;\n      })\n      .y(function(d) {\n        return y(1 + d * total);\n      });\n    histogram_svg.append(\"path\").datum(fit)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {\n        return fit_line(d);\n      });\n  }\n\n  var x_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(45)\").attr(\"dx\", \"1em\").attr(\"dy\", \"0.5em\");\n}\n\nexports.histogram = hivtrace_histogram;\nexports.histogramDistances = hivtrace_histogram_distances;\n\n\n// WEBPACK FOOTER //\n// ./src/histogram.js","var d3 = require('d3'),\n  _ = require('underscore');\n\nfunction hivtrace_render_scatterplot(points, w, h, id, labels, dates) {\n\n  var margin = {\n      top: 10,\n      right: 10,\n      bottom: 100,\n      left: 100\n    },\n    width = w - margin.left - margin.right,\n    height = h - margin.top - margin.bottom;\n\n\n  var x = (dates ? d3.time.scale() : d3.scale.linear())\n    .domain(d3.extent(points, function(p) {\n      return p.x;\n    }))\n    .range([0, width]);\n\n  var y = (dates ? d3.time.scale() : d3.scale.linear())\n    .domain(d3.extent(points, function(p) {\n      return p.y;\n    }))\n    .range([height, 0]);\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\").tickFormat(dates ? _defaultDateViewFormatShort : _defaultFloatFormat);\n\n  var yAxis = d3.svg.axis()\n    .scale(y)\n    .orient(\"left\").tickFormat(dates ? _defaultDateViewFormatShort : _defaultFloatFormat);\n\n  var histogram_svg = d3.select(id).selectAll(\"svg\");\n\n  if (!histogram_svg.empty()) {\n    histogram_svg.remove();\n  }\n\n  histogram_svg = d3.select(id).append(\"svg\").attr(\"width\", w).attr(\"height\", h).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  points = histogram_svg.selectAll(\"circle\").data(points);\n  points.enter().append(\"circle\");\n\n  points.attr(\"cx\", function(d) {\n    return x(d.x);\n  }).attr(\"cy\", function(d) {\n    return y(d.y);\n  }).attr(\"r\", 3).classed(\"node scatter\", true);\n\n  points.each(function(d) {\n    if (\"title\" in d) {\n      d3.select(this).append(\"title\").text(d.title);\n    }\n  });\n\n  var x_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n\n  x_axis.selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").attr(\"dx\", \"-.5em\").attr(\"dy\", \".25em\").style(\"text-anchor\", \"end\");\n  x_axis.append(\"text\").text(labels.x).attr(\"transform\", \"translate(\" + width + \",0)\").attr(\"dy\", \"-1em\").attr(\"text-anchor\", \"end\");\n\n  var y_axis = histogram_svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(0,\" + 0 + \")\")\n    .call(yAxis);\n\n  y_axis.selectAll(\"text\").attr(\"transform\", \"rotate(-45)\").attr(\"dx\", \"-.5em\").attr(\"dy\", \".25em\").style(\"text-anchor\", \"end\");\n  y_axis.append(\"text\").text(labels.y).attr(\"transform\", \"rotate(-90)\").attr(\"dy\", \"1em\").attr(\"text-anchor\", \"end\");\n\n}\n\nmodule.exports.scatterPlot = hivtrace_render_scatterplot;\n\n\n// WEBPACK FOOTER //\n// ./src/scatterplot.js","var datamonkey_error_modal = function(msg) {\n  $('#modal-error-msg').text(msg);\n  $('#errorModal').modal();\n};\n\nfunction b64toBlob(b64, onsuccess, onerror) {\n  var img = new Image();\n\n  img.onerror = onerror;\n\n  img.onload = function onload() {\n    var canvas = document.getElementById(\"hyphy-chart-canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    var ctx = canvas.getContext('2d');\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n    canvas.toBlob(onsuccess);\n  };\n\n  img.src = b64;\n}\n\nvar datamonkey_export_csv_button = function(data) {\n  data = d3.csv.format(data);\n  if (data !== null) {\n    var pom = document.createElement('a');\n    pom.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(data));\n    pom.setAttribute('download', 'export.csv');\n    pom.className = 'btn btn-default btn-sm';\n    pom.innerHTML = '<span class=\"glyphicon glyphicon-floppy-save\"></span> Download CSV';\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n};\n\nvar datamonkey_save_image = function(type, container) {\n\n  var prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\"\n  };\n\n  function get_styles(doc) {\n\n    function process_stylesheet(ss) {\n      try {\n        if (ss.cssRules) {\n          for (var i = 0; i < ss.cssRules.length; i++) {\n            var rule = ss.cssRules[i];\n            if (rule.type === 3) {\n              // Import Rule\n              process_stylesheet(rule.styleSheet);\n            } else {\n              // hack for illustrator crashing on descendent selectors\n              if (rule.selectorText) {\n                if (rule.selectorText.indexOf(\">\") === -1) {\n                  styles += \"\\n\" + rule.cssText;\n                }\n              }\n            }\n          }\n        }\n      } catch (e) {\n        console.log('Could not process stylesheet : ' + ss);\n      }\n    }\n\n    var styles = \"\",\n      styleSheets = doc.styleSheets;\n\n    if (styleSheets) {\n      for (var i = 0; i < styleSheets.length; i++) {\n        process_stylesheet(styleSheets[i]);\n      }\n    }\n\n    return styles;\n\n  }\n\n  var convert_svg_to_png = function(image_string) {\n\n    var image = document.getElementById(\"hyphy-chart-image\");\n\n    image.onload = function() {\n\n      var canvas = document.getElementById(\"hyphy-chart-canvas\");\n      canvas.width = image.width;\n      canvas.height = image.height;\n      var context = canvas.getContext(\"2d\");\n      context.fillStyle = \"#FFFFFF\";\n      context.fillRect(0, 0, image.width, image.height);\n      context.drawImage(image, 0, 0);\n      var img = canvas.toDataURL(\"image/png\");\n      var pom = document.createElement('a');\n      pom.setAttribute('download', 'image.png');\n      pom.href = canvas.toDataURL(\"image/png\");\n      $(\"body\").append(pom);\n      pom.click();\n      pom.remove();\n\n    };\n\n    image.src = image_string;\n\n  };\n\n  var svg = $(container).find(\"svg\")[0];\n  if (!svg) {\n    svg = $(container)[0];\n  }\n\n  var styles = get_styles(window.document);\n\n  svg.setAttribute(\"version\", \"1.1\");\n\n  var defsEl = document.createElement(\"defs\");\n  svg.insertBefore(defsEl, svg.firstChild);\n\n  var styleEl = document.createElement(\"style\");\n  defsEl.appendChild(styleEl);\n  styleEl.setAttribute(\"type\", \"text/css\");\n\n\n  // removing attributes so they aren't doubled up\n  svg.removeAttribute(\"xmlns\");\n  svg.removeAttribute(\"xlink\");\n\n  // These are needed for the svg\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n  }\n\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n  }\n\n  var source = (new XMLSerializer()).serializeToString(svg).replace('</style>', '<![CDATA[' + styles + ']]></style>');\n  var rect = svg.getBoundingClientRect();\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n  var to_download = [doctype + source];\n  var image_string = 'data:image/svg+xml;base66,' + encodeURIComponent(to_download);\n\n  if (type == \"png\") {\n    b64toBlob(image_string,\n      function(blob) {\n\n        var url = window.URL.createObjectURL(blob);\n        var pom = document.createElement('a');\n        pom.setAttribute('download', 'image.png');\n        pom.setAttribute('href', url);\n        $(\"body\").append(pom);\n        pom.click();\n        pom.remove();\n\n      },\n      function(error) {\n        // handle error\n      });\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'image.svg');\n    pom.setAttribute('href', image_string);\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n\n};\n\nvar datamonkey_validate_date = function() {\n\n  // Check that it is not empty\n  if ($(this).val().length === 0) {\n    $(this).next('.help-block').remove();\n    $(this).parent().removeClass('has-success');\n    $(this).parent().addClass('has-error');\n\n    jQuery('<span/>', {\n      class: 'help-block',\n      text: 'Field is empty'\n    }).insertAfter($(this));\n\n  } else if (isNaN(Date.parse($(this).val()))) {\n    $(this).next('.help-block').remove();\n    $(this).parent().removeClass('has-success');\n    $(this).parent().addClass('has-error');\n\n    jQuery('<span/>', {\n      class: 'help-block',\n      text: 'Date format should be in the format YYYY-mm-dd'\n    }).insertAfter($(this));\n\n  } else {\n    $(this).parent().removeClass('has-error');\n    $(this).parent().addClass('has-success');\n    $(this).next('.help-block').remove();\n  }\n\n};\n\nfunction datamonkey_get_styles(doc) {\n  var styles = \"\",\n    styleSheets = doc.styleSheets;\n\n  if (styleSheets) {\n    for (var i = 0; i < styleSheets.length; i++) {\n      processStyleSheet(styleSheets[i]);\n    }\n  }\n\n  function processStyleSheet(ss) {\n    if (ss.cssRules) {\n      for (var i = 0; i < ss.cssRules.length; i++) {\n        var rule = ss.cssRules[i];\n        if (rule.type === 3) {\n          // Import Rule\n          processStyleSheet(rule.styleSheet);\n        } else {\n          // hack for illustrator crashing on descendent selectors\n          if (rule.selectorText) {\n            if (rule.selectorText.indexOf(\">\") === -1) {\n              styles += \"\\n\" + rule.cssText;\n            }\n          }\n        }\n      }\n    }\n  }\n  return styles;\n}\n\nfunction datamonkey_save_newick_to_file() {\n  var top_modal_container = \"#neighbor-tree-modal\";\n  var nwk = $(top_modal_container).data(\"tree\");\n  var pom = document.createElement('a');\n  pom.setAttribute('href', 'data:text/octet-stream;charset=utf-8,' + encodeURIComponent(nwk));\n  pom.setAttribute('download', 'nwk.txt');\n  $(\"body\").append(pom);\n  pom.click();\n  pom.remove();\n}\n\nfunction datamonkey_convert_svg_to_png(image_string) {\n  var image = document.getElementById(\"image\");\n  image.src = image_string;\n\n  image.onload = function() {\n    var canvas = document.getElementById(\"canvas\");\n    canvas.width = image.width;\n    canvas.height = image.height;\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = \"#FFFFFF\";\n    context.fillRect(0, 0, image.width, image.height);\n    context.drawImage(image, 0, 0);\n    var img = canvas.toDataURL(\"image/png\");\n\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'phylotree.png');\n    pom.href = canvas.toDataURL(\"image/png\");\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n}\n\nfunction datamonkey_save_newick_tree(type) {\n\n  var prefix = {\n    xmlns: \"http://www.w3.org/2000/xmlns/\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    svg: \"http://www.w3.org/2000/svg\"\n  }\n\n  var tree_container = \"#tree_container\";\n  var svg = $(\"#tree_container\").find(\"svg\")[0];\n  var styles = datamonkey_get_styles(window.document);\n\n  svg.setAttribute(\"version\", \"1.1\");\n\n  var defsEl = document.createElement(\"defs\");\n  svg.insertBefore(defsEl, svg.firstChild);\n\n  var styleEl = document.createElement(\"style\");\n  defsEl.appendChild(styleEl);\n  styleEl.setAttribute(\"type\", \"text/css\");\n\n\n  // removing attributes so they aren't doubled up\n  svg.removeAttribute(\"xmlns\");\n  svg.removeAttribute(\"xlink\");\n\n  // These are needed for the svg\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns\", prefix.svg);\n  }\n\n  if (!svg.hasAttributeNS(prefix.xmlns, \"xmlns:xlink\")) {\n    svg.setAttributeNS(prefix.xmlns, \"xmlns:xlink\", prefix.xlink);\n  }\n\n  var source = (new XMLSerializer()).serializeToString(svg).replace('</style>', '<![CDATA[' + styles + ']]></style>');\n  var rect = svg.getBoundingClientRect();\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">';\n  var to_download = [doctype + source]\n  var image_string = 'data:image/svg+xml;base66,' + encodeURIComponent(to_download);\n\n  if (type == \"png\") {\n    datamonkey_convert_svg_to_png(image_string)\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('download', 'phylotree.svg');\n    pom.setAttribute('href', image_string);\n    $(\"body\").append(pom);\n    pom.click();\n    pom.remove();\n  }\n\n}\n\nfunction datamonkey_validate_email(email) {\n  if ($(this).find(\"input[name='receive_mail']\")[0].checked) {\n    var regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n    if (regex.test($(this).find(\"input[name='mail']\").val())) {\n      // Give them green. They like that.\n      $(this).removeClass('has-error');\n      $(this).addClass('has-success');\n      $(this).next('.help-block').remove();\n    } else {\n      $(this).next('.help-block').remove();\n      $(this).removeClass('has-error');\n      $(this).removeClass('has-success');\n      $(this).addClass('has-error');\n      var span = jQuery('<span/>', {\n        class: 'help-block col-lg-9 pull-right',\n        text: 'Invalid Email'\n      }).insertAfter($(this));\n    }\n  } else {\n    $(this).removeClass('has-error');\n    $(this).removeClass('has-success');\n    $(this).next('.help-block').remove();\n  }\n\n}\n\nfunction datamonkey_describe_vector(vector, as_list) {\n\n  vector.sort(d3.ascending);\n\n  var d = {\n    'min': d3.min(vector),\n    'max': d3.max(vector),\n    'median': d3.median(vector),\n    'Q1': d3.quantile(vector, 0.25),\n    'Q3': d3.quantile(vector, 0.75),\n    'mean': d3.mean(vector)\n  };\n\n  if (as_list) {\n\n    d = \"<pre>Range  :\" + d['min'] + \"-\" + d['max'] + \"\\n\" + \"IQR    :\" + d['Q1'] + \"-\" + d['Q3'] + \"\\n\" + \"Mean   :\" + d['mean'] + \"\\n\" + \"Median :\" + d['median'] + \"\\n\" + \"</pre>\";\n\n    /*d =\n    \"<dl class = 'dl-horizontal'>\" +\n    \"<dt>Range</dt><dd>\" + d['min'] + \"-\" + d['max'] + \"</dd>\" +\n    \"<dt>IQR</dt><dd>\" + d['Q1'] + \"-\" + d['Q3'] +  \"</dd>\" +\n    \"<dt>Mean</dt><dd>\" + d['mean'] +  \"</dd>\" +\n    \"<dt>Median</dt><dd>\" + d['median'] + \"</dd></dl>\";*/\n  }\n\n  return d;\n\n}\n\nfunction datamonkey_export_handler(data, filename, mimeType) {\n\n  function msieversion() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n      return true;\n    }\n    return false;\n  }\n\n  if (msieversion()) {\n    var IEwindow = window.open();\n    IEwindow.document.write(data);\n    IEwindow.document.close();\n    IEwindow.document.execCommand('SaveAs', true, filename + \".csv\");\n    IEwindow.close();\n  } else {\n    var pom = document.createElement('a');\n    pom.setAttribute('href', 'data:' + (mimeType || 'text/plain') + ';charset=utf-8,' + encodeURIComponent(data));\n    pom.setAttribute('download', filename || \"download.tsv\");\n    pom.click();\n    pom.remove();\n  }\n\n}\n\nfunction datamonkey_table_to_text(table_id, sep) {\n  sep = sep || \"\\t\";\n  var header_row = [];\n  d3.select(table_id + \" thead\").selectAll(\"th\").each(function() {\n    header_row.push(d3.select(this).text())\n  });\n  var data_rows = [];\n  d3.select(table_id + \" tbody\").selectAll(\"tr\").each(function(d, i) {\n    data_rows.push([]);\n    d3.select(this).selectAll(\"td\").each(function() {\n      data_rows[i].push(d3.select(this).text())\n    })\n  });\n\n  return header_row.join(sep) + \"\\n\" +\n    data_rows.map(function(d) {\n      return d.join(sep);\n    }).join(\"\\n\");\n}\n\nfunction datamonkey_capitalize(s) {\n  if (s.length > 0) {\n    return s[0].toUpperCase() + s.slice(1);\n  } else {\n    return s;\n  }\n}\n\nfunction datamonkey_count_partitions(json) {\n  try {\n    return _.keys(json).length;\n  } catch (e) {\n    // ignore errors\n  }\n  return 0;\n}\n\nfunction datamonkey_sum(object, accessor) {\n  accessor = accessor || function(value) {\n    return value;\n  };\n  return _.reduce(object, function(sum, value, index) {\n    return sum + accessor(value, index);\n  }, 0);\n}\n\nfunction datamonkey_count_sites_from_partitions(json) {\n  try {\n    return datamonkey_sum(json[\"partitions\"], function(value) {\n      return value[\"coverage\"][0].length;\n    });\n  } catch (e) {\n    // ignore errors\n  }\n  return 0;\n}\n\nfunction datamonkey_filter_list(list, predicate, context) {\n  var result = {};\n  predicate = _.bind(predicate, context);\n  _.each(list, _.bind(function(value, key) {\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }, context));\n  return result;\n}\n\nfunction datamonkey_map_list(list, transform, context) {\n  var result = {};\n  transform = _.bind(transform, context);\n  _.each(list, _.bind(function(value, key) {\n    result[key] = transform(value, key);\n  }, context));\n  return result;\n}\n\nmodule.exports.errorModal = datamonkey_error_modal;\nmodule.exports.export_csv_button = datamonkey_export_csv_button;\nmodule.exports.save_image = datamonkey_save_image;\nmodule.exports.validate_date = datamonkey_validate_date;\n\nmodule.exports.save_newick_to_file = datamonkey_save_newick_to_file;\nmodule.exports.convert_svg_to_png = datamonkey_convert_svg_to_png;\nmodule.exports.save_newick_tree = datamonkey_save_newick_tree;\nmodule.exports.validate_email = datamonkey_validate_email;\nmodule.exports.describe_vector = datamonkey_describe_vector;\nmodule.exports.table_to_text = datamonkey_table_to_text;\nmodule.exports.export_handler = datamonkey_export_handler;\nmodule.exports.capitalize = datamonkey_capitalize;\nmodule.exports.countPartitionsJSON = datamonkey_count_partitions;\nmodule.exports.countSitesFromPartitionsJSON = datamonkey_count_sites_from_partitions;\nmodule.exports.sum = datamonkey_sum;\nmodule.exports.filter = datamonkey_filter_list;\nmodule.exports.map = datamonkey_map_list;\n\n\n// WEBPACK FOOTER //\n// ./src/helpers.js"],"sourceRoot":""}